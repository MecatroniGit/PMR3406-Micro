

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue May 19 19:01:32 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.10
    48                           ; Generated 31/07/2019 GMT
    49                           ; 
    50                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F886 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  0105                     	;# 
   143  0107                     	;# 
   144  0108                     	;# 
   145  0109                     	;# 
   146  010C                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0185                     	;# 
   152  0187                     	;# 
   153  0188                     	;# 
   154  0189                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0006                     	;# 
   164  0007                     	;# 
   165  0009                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000D                     	;# 
   170  000E                     	;# 
   171  000E                     	;# 
   172  000F                     	;# 
   173  0010                     	;# 
   174  0011                     	;# 
   175  0012                     	;# 
   176  0013                     	;# 
   177  0014                     	;# 
   178  0015                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001B                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  001D                     	;# 
   189  001E                     	;# 
   190  001F                     	;# 
   191  0081                     	;# 
   192  0085                     	;# 
   193  0086                     	;# 
   194  0087                     	;# 
   195  0089                     	;# 
   196  008C                     	;# 
   197  008D                     	;# 
   198  008E                     	;# 
   199  008F                     	;# 
   200  0090                     	;# 
   201  0091                     	;# 
   202  0092                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0094                     	;# 
   207  0095                     	;# 
   208  0096                     	;# 
   209  0097                     	;# 
   210  0098                     	;# 
   211  0099                     	;# 
   212  009A                     	;# 
   213  009B                     	;# 
   214  009C                     	;# 
   215  009D                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  0105                     	;# 
   219  0107                     	;# 
   220  0108                     	;# 
   221  0109                     	;# 
   222  010C                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  0185                     	;# 
   228  0187                     	;# 
   229  0188                     	;# 
   230  0189                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0015                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001B                     	;# 
   263  001C                     	;# 
   264  001D                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  0081                     	;# 
   268  0085                     	;# 
   269  0086                     	;# 
   270  0087                     	;# 
   271  0089                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  008F                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  0105                     	;# 
   295  0107                     	;# 
   296  0108                     	;# 
   297  0109                     	;# 
   298  010C                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  0185                     	;# 
   304  0187                     	;# 
   305  0188                     	;# 
   306  0189                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0009                     	;# 
   318  000A                     	;# 
   319  000B                     	;# 
   320  000C                     	;# 
   321  000D                     	;# 
   322  000E                     	;# 
   323  000E                     	;# 
   324  000F                     	;# 
   325  0010                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0014                     	;# 
   330  0015                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  001D                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  0081                     	;# 
   344  0085                     	;# 
   345  0086                     	;# 
   346  0087                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0009                     	;# 
   394  000A                     	;# 
   395  000B                     	;# 
   396  000C                     	;# 
   397  000D                     	;# 
   398  000E                     	;# 
   399  000E                     	;# 
   400  000F                     	;# 
   401  0010                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0014                     	;# 
   406  0015                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  001D                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  0081                     	;# 
   420  0085                     	;# 
   421  0086                     	;# 
   422  0087                     	;# 
   423  0089                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  008E                     	;# 
   427  008F                     	;# 
   428  0090                     	;# 
   429  0091                     	;# 
   430  0092                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0094                     	;# 
   435  0095                     	;# 
   436  0096                     	;# 
   437  0097                     	;# 
   438  0098                     	;# 
   439  0099                     	;# 
   440  009A                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  009F                     	;# 
   446  0105                     	;# 
   447  0107                     	;# 
   448  0108                     	;# 
   449  0109                     	;# 
   450  010C                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  010E                     	;# 
   454  010F                     	;# 
   455  0185                     	;# 
   456  0187                     	;# 
   457  0188                     	;# 
   458  0189                     	;# 
   459  018C                     	;# 
   460  018D                     	;# 
   461  0000                     	;# 
   462  0001                     	;# 
   463  0002                     	;# 
   464  0003                     	;# 
   465  0004                     	;# 
   466  0005                     	;# 
   467  0006                     	;# 
   468  0007                     	;# 
   469  0009                     	;# 
   470  000A                     	;# 
   471  000B                     	;# 
   472  000C                     	;# 
   473  000D                     	;# 
   474  000E                     	;# 
   475  000E                     	;# 
   476  000F                     	;# 
   477  0010                     	;# 
   478  0011                     	;# 
   479  0012                     	;# 
   480  0013                     	;# 
   481  0014                     	;# 
   482  0015                     	;# 
   483  0015                     	;# 
   484  0016                     	;# 
   485  0017                     	;# 
   486  0018                     	;# 
   487  0019                     	;# 
   488  001A                     	;# 
   489  001B                     	;# 
   490  001B                     	;# 
   491  001C                     	;# 
   492  001D                     	;# 
   493  001E                     	;# 
   494  001F                     	;# 
   495  0081                     	;# 
   496  0085                     	;# 
   497  0086                     	;# 
   498  0087                     	;# 
   499  0089                     	;# 
   500  008C                     	;# 
   501  008D                     	;# 
   502  008E                     	;# 
   503  008F                     	;# 
   504  0090                     	;# 
   505  0091                     	;# 
   506  0092                     	;# 
   507  0093                     	;# 
   508  0093                     	;# 
   509  0093                     	;# 
   510  0094                     	;# 
   511  0095                     	;# 
   512  0096                     	;# 
   513  0097                     	;# 
   514  0098                     	;# 
   515  0099                     	;# 
   516  009A                     	;# 
   517  009B                     	;# 
   518  009C                     	;# 
   519  009D                     	;# 
   520  009E                     	;# 
   521  009F                     	;# 
   522  0105                     	;# 
   523  0107                     	;# 
   524  0108                     	;# 
   525  0109                     	;# 
   526  010C                     	;# 
   527  010C                     	;# 
   528  010D                     	;# 
   529  010E                     	;# 
   530  010F                     	;# 
   531  0185                     	;# 
   532  0187                     	;# 
   533  0188                     	;# 
   534  0189                     	;# 
   535  018C                     	;# 
   536  018D                     	;# 
   537                           
   538                           	psect	idataCOMMON
   539  0003                     __pidataCOMMON:	
   540                           
   541                           ;initializer for io_sw_read@swOld
   542  0003  3401               	retlw	1
   543                           
   544                           	psect	strings
   545  07CD                     __pstrings:	
   546  07CD                     stringtab:	
   547  07CD                     __stringtab:	
   548                           
   549                           ;	String table - string pointers are 1 byte each
   550  07CD  1BFF               	btfsc	btemp+1,7
   551  07CE  2FD7               	ljmp	stringcode
   552  07CF  1383               	bcf	3,7
   553  07D0  187F               	btfsc	btemp+1,0
   554  07D1  1783               	bsf	3,7
   555  07D2  0800               	movf	0,w
   556  07D3  0A84               	incf	4,f
   557  07D4  1903               	skipnz
   558  07D5  0AFF               	incf	btemp+1,f
   559  07D6  0008               	return
   560  07D7                     stringcode:	
   561  07D7                     stringdir:	
   562  07D7  3007               	movlw	high stringdir
   563  07D8  008A               	movwf	10
   564  07D9  0804               	movf	4,w
   565  07DA  0A84               	incf	4,f
   566  07DB  0782               	addwf	2,f
   567  07DC                     __stringbase:	
   568  07DC  3400               	retlw	0
   569  07DD                     __end_of__stringtab:	
   570  07DD                     _dpowers:	
   571  07DD  3401               	retlw	1
   572  07DE  3400               	retlw	0
   573  07DF  340A               	retlw	10
   574  07E0  3400               	retlw	0
   575  07E1  3464               	retlw	100
   576  07E2  3400               	retlw	0
   577  07E3  34E8               	retlw	232
   578  07E4  3403               	retlw	3
   579  07E5  3410               	retlw	16
   580  07E6  3427               	retlw	39
   581  07E7                     __end_of_dpowers:	
   582  001E                     _ADRESH	set	30
   583  001F                     _ADCON0bits	set	31
   584  000B                     _INTCONbits	set	11
   585  0006                     _PORTB	set	6
   586  0001                     _TMR0	set	1
   587  0066                     _ADIF	set	102
   588  00F9                     _GO	set	249
   589  00F8                     _ADON	set	248
   590  00FE                     _ADCS0	set	254
   591  00FF                     _ADCS1	set	255
   592  0031                     _RB1	set	49
   593  0032                     _RB2	set	50
   594  002C                     _RA4	set	44
   595  0037                     _RB7	set	55
   596  0035                     _RB5	set	53
   597  0058                     _RBIF	set	88
   598  005B                     _RBIE	set	91
   599  005A                     _T0IF	set	90
   600  005D                     _T0IE	set	93
   601  0030                     _RB0	set	48
   602  003D                     _RC5	set	61
   603  003C                     _RC4	set	60
   604  003B                     _RC3	set	59
   605  0038                     _RC0	set	56
   606  002B                     _RA3	set	43
   607  002A                     _RA2	set	42
   608  009E                     _ADRESL	set	158
   609  0081                     _OPTION_REGbits	set	129
   610  0087                     _TRISC	set	135
   611  04FF                     _ADFM	set	1279
   612  04FC                     _VCFG0	set	1276
   613  04FD                     _VCFG1	set	1277
   614  0428                     _TRISA0	set	1064
   615  0431                     _TRISB1	set	1073
   616  0432                     _TRISB2	set	1074
   617  042C                     _TRISA4	set	1068
   618  04B6                     _IOCB6	set	1206
   619  04AE                     _WPUB6	set	1198
   620  040F                     _nRBPU	set	1039
   621  0436                     _TRISB6	set	1078
   622  0437                     _TRISB7	set	1079
   623  0435                     _TRISB5	set	1077
   624  040B                     _PSA	set	1035
   625  040D                     _T0CS	set	1037
   626  042A                     _TRISA2	set	1066
   627  042B                     _TRISA3	set	1067
   628  0430                     _TRISB0	set	1072
   629  0C40                     _ANS0	set	3136
   630  0C48                     _ANS8	set	3144
   631  0C4D                     _ANS13	set	3149
   632  0C42                     _ANS2	set	3138
   633  0C43                     _ANS3	set	3139
   634  0C4C                     _ANS12	set	3148
   635  07E7                     STR_1:	
   636  07E7  3454               	retlw	84	;'T'
   637  07E8  3436               	retlw	54	;'6'
   638  07E9  3447               	retlw	71	;'G'
   639  07EA  3431               	retlw	49	;'1'
   640  07EB  342D               	retlw	45	;'-'
   641  07EC  3444               	retlw	68	;'D'
   642  07ED  3447               	retlw	71	;'G'
   643  07EE  3400               	retlw	0
   644  07EF                     STR_3:	
   645  07EF  3425               	retlw	37	;'%'
   646  07F0  3430               	retlw	48	;'0'
   647  07F1  3434               	retlw	52	;'4'
   648  07F2  3464               	retlw	100	;'d'
   649  07F3  3420               	retlw	32	;' '
   650  07F4  346D               	retlw	109	;'m'
   651  07F5  346D               	retlw	109	;'m'
   652  07F6  3400               	retlw	0
   653  07F7                     STR_2:	
   654  07F7  3425               	retlw	37	;'%'
   655  07F8  3430               	retlw	48	;'0'
   656  07F9  3434               	retlw	52	;'4'
   657  07FA  3464               	retlw	100	;'d'
   658  07FB  3400               	retlw	0
   659                           
   660                           ; #config settings
   661  0000                     
   662                           	psect	cinit
   663  0011                     start_initialization:	
   664  0011                     __initialization:	
   665                           
   666                           ; Initialize objects allocated to COMMON
   667  0011  120A  118A  2003  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   668  0016  00FA               	movwf	__pdataCOMMON& (0+127)
   669                           
   670                           ; Clear objects allocated to BANK0
   671  0017  01E6               	clrf	__pbssBANK0& (0+127)
   672  0018  01E7               	clrf	(__pbssBANK0+1)& (0+127)
   673  0019  01E8               	clrf	(__pbssBANK0+2)& (0+127)
   674  001A  01E9               	clrf	(__pbssBANK0+3)& (0+127)
   675                           
   676                           ; Clear objects allocated to BITCOMMON
   677  001B  01F9               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   678  001C                     end_of_initialization:	
   679                           ;End of C runtime variable initialization code
   680                           
   681  001C                     __end_of__initialization:	
   682  001C  0183               	clrf	3
   683  001D  120A  158A  2EFB   	ljmp	_main	;jump to C main() function
   684                           
   685                           	psect	bitbssCOMMON
   686  03C8                     __pbitbssCOMMON:	
   687  03C8                     _swPressed:	
   688  03C8                     	ds	1
   689                           
   690                           	psect	dataCOMMON
   691  007A                     __pdataCOMMON:	
   692  007A                     io_sw_read@swOld:	
   693  007A                     	ds	1
   694                           
   695                           	psect	bssBANK0
   696  0066                     __pbssBANK0:	
   697  0066                     _distancia:	
   698  0066                     	ds	2
   699  0068                     _contador:	
   700  0068                     	ds	2
   701                           
   702                           	psect	cstackCOMMON
   703  0070                     __pcstackCOMMON:	
   704  0070                     ?_isdigit:	
   705  0070                     ?_io_sw_read:	
   706                           ; 1 bit 
   707                           
   708  0070                     ??_io_sw_read:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_debug_led_toggle:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ??_debug_led_toggle:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_adc_init_0:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_io_init:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_debug_init:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?_io_led_toggle:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?_LCD_RS_SetLow:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ?_LCD_RS_SetHigh:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?_LCD_RW_SetLow:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ?_lcd_write_nibble:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?_lcd_write:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ?_lcd_goto:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?_lcd_init:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ?_isr:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ?_t0_init:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?_main:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     debug_led_toggle@led:	
   760                           ; 1 bytes @ 0x0
   761                           
   762                           
   763                           ; 1 bytes @ 0x0
   764  0070                     	ds	2
   765  0072                     io_sw_read@port:	
   766                           
   767                           ; 1 bytes @ 0x2
   768  0072                     	ds	1
   769  0073                     io_sw_read@swNew:	
   770                           
   771                           ; 1 bytes @ 0x3
   772  0073                     	ds	1
   773  0074                     ??_isr:	
   774                           
   775                           ; 1 bytes @ 0x4
   776  0074                     	ds	4
   777  0078                     isr@portB:	
   778                           
   779                           ; 1 bytes @ 0x8
   780  0078                     	ds	1
   781                           
   782                           	psect	cstackBANK0
   783  0020                     __pcstackBANK0:	
   784  0020                     ??_adc_init_0:	
   785  0020                     ??_io_init:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0020                     ??_debug_init:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0020                     ?_io_beep:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0020                     ??_io_led_toggle:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0020                     ??_isdigit:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0020                     ??_LCD_RS_SetLow:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0020                     ??_LCD_RS_SetHigh:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0020                     ??_LCD_RW_SetLow:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0020                     ??_lcd_write_nibble:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0020                     ??_t0_init:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0020                     ?_io_sw_pressed:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0020                     ?_adc_read_0:	
   819                           ; 2 bytes @ 0x0
   820                           
   821  0020                     ?__Umul8_16:	
   822                           ; 2 bytes @ 0x0
   823                           
   824  0020                     ?___wmul:	
   825                           ; 2 bytes @ 0x0
   826                           
   827  0020                     ?___lwdiv:	
   828                           ; 2 bytes @ 0x0
   829                           
   830  0020                     ?___fladd:	
   831                           ; 2 bytes @ 0x0
   832                           
   833  0020                     ?___xxtofl:	
   834                           ; 4 bytes @ 0x0
   835                           
   836  0020                     _isdigit$775:	
   837                           ; 4 bytes @ 0x0
   838                           
   839  0020                     __Umul8_16@multiplicand:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0020                     io_beep@period:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0020                     ___wmul@multiplier:	
   846                           ; 2 bytes @ 0x0
   847                           
   848  0020                     ___lwdiv@divisor:	
   849                           ; 2 bytes @ 0x0
   850                           
   851  0020                     ___fladd@b:	
   852                           ; 2 bytes @ 0x0
   853                           
   854  0020                     ___xxtofl@val:	
   855                           ; 4 bytes @ 0x0
   856                           
   857                           
   858                           ; 4 bytes @ 0x0
   859  0020                     	ds	1
   860  0021                     lcd_write_nibble@c:	
   861  0021                     isdigit@c:	
   862                           ; 1 bytes @ 0x1
   863                           
   864                           
   865                           ; 1 bytes @ 0x1
   866  0021                     	ds	1
   867  0022                     ??_io_beep:	
   868  0022                     ??_io_sw_pressed:	
   869                           ; 1 bytes @ 0x2
   870                           
   871  0022                     ??_adc_read_0:	
   872                           ; 1 bytes @ 0x2
   873                           
   874  0022                     ??__Umul8_16:	
   875                           ; 1 bytes @ 0x2
   876                           
   877  0022                     ??_lcd_write:	
   878                           ; 1 bytes @ 0x2
   879                           
   880  0022                     adc_read_0@distancia:	
   881                           ; 1 bytes @ 0x2
   882                           
   883  0022                     ___wmul@multiplicand:	
   884                           ; 2 bytes @ 0x2
   885                           
   886  0022                     ___lwdiv@dividend:	
   887                           ; 2 bytes @ 0x2
   888                           
   889                           
   890                           ; 2 bytes @ 0x2
   891  0022                     	ds	1
   892  0023                     lcd_write@c:	
   893                           
   894                           ; 1 bytes @ 0x3
   895  0023                     	ds	1
   896  0024                     ?_lcd_puts:	
   897  0024                     ??_lcd_goto:	
   898                           ; 1 bytes @ 0x4
   899                           
   900  0024                     ?_lcd_cursor:	
   901                           ; 1 bytes @ 0x4
   902                           
   903  0024                     ??_lcd_init:	
   904                           ; 1 bytes @ 0x4
   905                           
   906  0024                     ??___wmul:	
   907                           ; 1 bytes @ 0x4
   908                           
   909  0024                     ??___lwdiv:	
   910                           ; 1 bytes @ 0x4
   911                           
   912  0024                     ??___xxtofl:	
   913                           ; 1 bytes @ 0x4
   914                           
   915  0024                     lcd_goto@pos:	
   916                           ; 1 bytes @ 0x4
   917                           
   918  0024                     lcd_puts@s:	
   919                           ; 1 bytes @ 0x4
   920                           
   921  0024                     lcd_cursor@on:	
   922                           ; 2 bytes @ 0x4
   923                           
   924  0024                     ___wmul@product:	
   925                           ; 2 bytes @ 0x4
   926                           
   927  0024                     __Umul8_16@product:	
   928                           ; 2 bytes @ 0x4
   929                           
   930  0024                     ___fladd@a:	
   931                           ; 2 bytes @ 0x4
   932                           
   933                           
   934                           ; 4 bytes @ 0x4
   935  0024                     	ds	1
   936  0025                     ___lwdiv@quotient:	
   937                           
   938                           ; 2 bytes @ 0x5
   939  0025                     	ds	1
   940  0026                     ??_lcd_puts:	
   941  0026                     ??_lcd_cursor:	
   942                           ; 1 bytes @ 0x6
   943                           
   944  0026                     __Umul8_16@word_mpld:	
   945                           ; 1 bytes @ 0x6
   946                           
   947                           
   948                           ; 2 bytes @ 0x6
   949  0026                     	ds	1
   950  0027                     ___lwdiv@counter:	
   951                           
   952                           ; 1 bytes @ 0x7
   953  0027                     	ds	1
   954  0028                     ??___fladd:	
   955  0028                     ?___lwmod:	
   956                           ; 1 bytes @ 0x8
   957                           
   958  0028                     ___xxtofl@sign:	
   959                           ; 2 bytes @ 0x8
   960                           
   961  0028                     __Umul8_16@multiplier:	
   962                           ; 1 bytes @ 0x8
   963                           
   964  0028                     ___lwmod@divisor:	
   965                           ; 1 bytes @ 0x8
   966                           
   967                           
   968                           ; 2 bytes @ 0x8
   969  0028                     	ds	1
   970  0029                     ___xxtofl@exp:	
   971                           
   972                           ; 1 bytes @ 0x9
   973  0029                     	ds	1
   974  002A                     ___lwmod@dividend:	
   975  002A                     ___xxtofl@arg:	
   976                           ; 2 bytes @ 0xA
   977                           
   978                           
   979                           ; 4 bytes @ 0xA
   980  002A                     	ds	2
   981  002C                     ??___lwmod:	
   982                           
   983                           ; 1 bytes @ 0xC
   984  002C                     	ds	1
   985  002D                     ___lwmod@counter:	
   986                           
   987                           ; 1 bytes @ 0xD
   988  002D                     	ds	1
   989  002E                     ?_sprintf:	
   990  002E                     ?___flmul:	
   991                           ; 2 bytes @ 0xE
   992                           
   993  002E                     sprintf@f:	
   994                           ; 4 bytes @ 0xE
   995                           
   996  002E                     ___flmul@b:	
   997                           ; 1 bytes @ 0xE
   998                           
   999                           
  1000                           ; 4 bytes @ 0xE
  1001  002E                     	ds	2
  1002  0030                     ___fladd@signs:	
  1003                           
  1004                           ; 1 bytes @ 0x10
  1005  0030                     	ds	1
  1006  0031                     ??_sprintf:	
  1007  0031                     ___fladd@aexp:	
  1008                           ; 1 bytes @ 0x11
  1009                           
  1010                           
  1011                           ; 1 bytes @ 0x11
  1012  0031                     	ds	1
  1013  0032                     ___fladd@bexp:	
  1014  0032                     ___flmul@a:	
  1015                           ; 1 bytes @ 0x12
  1016                           
  1017                           
  1018                           ; 4 bytes @ 0x12
  1019  0032                     	ds	1
  1020  0033                     ___fladd@grs:	
  1021                           
  1022                           ; 1 bytes @ 0x13
  1023  0033                     	ds	1
  1024  0034                     sprintf@ap:	
  1025                           
  1026                           ; 1 bytes @ 0x14
  1027  0034                     	ds	1
  1028  0035                     sprintf@prec:	
  1029                           
  1030                           ; 1 bytes @ 0x15
  1031  0035                     	ds	1
  1032  0036                     ??___flmul:	
  1033  0036                     sprintf@val:	
  1034                           ; 1 bytes @ 0x16
  1035                           
  1036                           
  1037                           ; 2 bytes @ 0x16
  1038  0036                     	ds	2
  1039  0038                     sprintf@flag:	
  1040                           
  1041                           ; 1 bytes @ 0x18
  1042  0038                     	ds	1
  1043  0039                     sprintf@width:	
  1044                           
  1045                           ; 2 bytes @ 0x19
  1046  0039                     	ds	2
  1047  003B                     sprintf@sp:	
  1048  003B                     ___flmul@sign:	
  1049                           ; 1 bytes @ 0x1B
  1050                           
  1051                           
  1052                           ; 1 bytes @ 0x1B
  1053  003B                     	ds	1
  1054  003C                     sprintf@c:	
  1055  003C                     ___flmul@grs:	
  1056                           ; 1 bytes @ 0x1C
  1057                           
  1058                           
  1059                           ; 4 bytes @ 0x1C
  1060  003C                     	ds	4
  1061  0040                     ___flmul@aexp:	
  1062                           
  1063                           ; 1 bytes @ 0x20
  1064  0040                     	ds	1
  1065  0041                     ___flmul@bexp:	
  1066                           
  1067                           ; 1 bytes @ 0x21
  1068  0041                     	ds	1
  1069  0042                     ___flmul@prod:	
  1070                           
  1071                           ; 4 bytes @ 0x22
  1072  0042                     	ds	4
  1073  0046                     ___flmul@temp:	
  1074                           
  1075                           ; 2 bytes @ 0x26
  1076  0046                     	ds	2
  1077  0048                     ?___flsub:	
  1078  0048                     ___flsub@a:	
  1079                           ; 4 bytes @ 0x28
  1080                           
  1081                           
  1082                           ; 4 bytes @ 0x28
  1083  0048                     	ds	4
  1084  004C                     ___flsub@b:	
  1085                           
  1086                           ; 4 bytes @ 0x2C
  1087  004C                     	ds	4
  1088  0050                     ??___flsub:	
  1089  0050                     ?___fltol:	
  1090                           ; 1 bytes @ 0x30
  1091                           
  1092  0050                     ___fltol@f1:	
  1093                           ; 4 bytes @ 0x30
  1094                           
  1095                           
  1096                           ; 4 bytes @ 0x30
  1097  0050                     	ds	4
  1098  0054                     ??___fltol:	
  1099                           
  1100                           ; 1 bytes @ 0x34
  1101  0054                     	ds	5
  1102  0059                     ___fltol@sign1:	
  1103                           
  1104                           ; 1 bytes @ 0x39
  1105  0059                     	ds	1
  1106  005A                     ___fltol@exp1:	
  1107                           
  1108                           ; 1 bytes @ 0x3A
  1109  005A                     	ds	1
  1110  005B                     ??_main:	
  1111                           
  1112                           ; 1 bytes @ 0x3B
  1113  005B                     	ds	2
  1114  005D                     main@message:	
  1115                           
  1116                           ; 9 bytes @ 0x3D
  1117  005D                     	ds	9
  1118                           
  1119                           	psect	maintext
  1120  0EFB                     __pmaintext:	
  1121 ;;
  1122 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1123 ;;
  1124 ;; *************** function _main *****************
  1125 ;; Defined at:
  1126 ;;		line 84 in file "main.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  message         9   61[BANK0 ] unsigned char [9]
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : B00/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1140 ;;      Params:         0       0       0       0       0
  1141 ;;      Locals:         0       9       0       0       0
  1142 ;;      Temps:          0       2       0       0       0
  1143 ;;      Totals:         0      11       0       0       0
  1144 ;;Total ram usage:       11 bytes
  1145 ;; Hardware stack levels required when called:    5
  1146 ;; This function calls:
  1147 ;;		___flmul
  1148 ;;		___flsub
  1149 ;;		___fltol
  1150 ;;		___xxtofl
  1151 ;;		_adc_init_0
  1152 ;;		_adc_read_0
  1153 ;;		_debug_init
  1154 ;;		_io_beep
  1155 ;;		_io_init
  1156 ;;		_io_led_toggle
  1157 ;;		_io_sw_pressed
  1158 ;;		_lcd_cursor
  1159 ;;		_lcd_goto
  1160 ;;		_lcd_init
  1161 ;;		_lcd_puts
  1162 ;;		_sprintf
  1163 ;;		_t0_init
  1164 ;; This function is called by:
  1165 ;;		Startup code after reset
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           
  1170                           ;psect for function _main
  1171  0EFB                     _main:	
  1172  0EFB                     l2558:	
  1173                           ;incstack = 0
  1174                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1175                           
  1176                           
  1177                           ;main.c: 88: char message[9];;main.c: 91: adc_init_0();
  1178  0EFB  120A  158A  2352  120A  158A  	fcall	_adc_init_0
  1179                           
  1180                           ;main.c: 92: t0_init();
  1181  0F00  120A  158A  228F  120A  158A  	fcall	_t0_init
  1182  0F05                     l2560:	
  1183                           
  1184                           ;main.c: 93: io_init();
  1185  0F05  120A  158A  229B  120A  158A  	fcall	_io_init
  1186  0F0A                     l2562:	
  1187                           
  1188                           ;main.c: 94: lcd_init();
  1189  0F0A  120A  158A  2569  120A  158A  	fcall	_lcd_init
  1190                           
  1191                           ;main.c: 95: debug_init();
  1192  0F0F  120A  158A  2285  120A  158A  	fcall	_debug_init
  1193  0F14                     l2564:	
  1194                           
  1195                           ;main.c: 96: (INTCONbits.GIE = 1);
  1196  0F14  178B               	bsf	11,7	;volatile
  1197  0F15                     l2566:	
  1198                           
  1199                           ;main.c: 99: io_beep(100);
  1200  0F15  3064               	movlw	100
  1201  0F16  1283               	bcf	3,5	;RP0=0, select bank0
  1202  0F17  1303               	bcf	3,6	;RP1=0, select bank0
  1203  0F18  00A0               	movwf	io_beep@period
  1204  0F19  3000               	movlw	0
  1205  0F1A  00A1               	movwf	io_beep@period+1
  1206  0F1B  120A  158A  2434  120A  158A  	fcall	_io_beep
  1207  0F20                     l2568:	
  1208                           
  1209                           ;main.c: 101: lcd_cursor(0);
  1210  0F20  3000               	movlw	0
  1211  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  1212  0F22  1303               	bcf	3,6	;RP1=0, select bank0
  1213  0F23  00A4               	movwf	lcd_cursor@on
  1214  0F24  00A5               	movwf	lcd_cursor@on+1
  1215  0F25  120A  158A  22FC  120A  158A  	fcall	_lcd_cursor
  1216  0F2A                     l2570:	
  1217                           
  1218                           ;main.c: 102: lcd_puts("T6G1-DG");
  1219  0F2A  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1220  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  1221  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  1222  0F2D  00A4               	movwf	lcd_puts@s
  1223  0F2E  3080               	movlw	128
  1224  0F2F  00A5               	movwf	lcd_puts@s+1
  1225  0F30  120A  158A  2407  120A  158A  	fcall	_lcd_puts
  1226  0F35                     l2572:	
  1227                           
  1228                           ;main.c: 107: if (io_sw_pressed())
  1229  0F35  120A  158A  22AA  120A  158A  	fcall	_io_sw_pressed
  1230  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  1231  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  1232  0F3C  0820               	movf	?_io_sw_pressed,w
  1233  0F3D  0421               	iorwf	?_io_sw_pressed+1,w
  1234  0F3E  1903               	btfsc	3,2
  1235  0F3F  2F41               	goto	u3461
  1236  0F40  2F42               	goto	u3460
  1237  0F41                     u3461:	
  1238  0F41  2F47               	goto	l2576
  1239  0F42                     u3460:	
  1240  0F42                     l2574:	
  1241                           
  1242                           ;main.c: 108: io_led_toggle();
  1243  0F42  120A  158A  2280  120A  158A  	fcall	_io_led_toggle
  1244  0F47                     l2576:	
  1245                           
  1246                           ;main.c: 110: if(contador>39){
  1247  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  1248  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  1249  0F49  0869               	movf	_contador+1,w
  1250  0F4A  3A80               	xorlw	128
  1251  0F4B  00FF               	movwf	btemp+1
  1252  0F4C  3080               	movlw	128
  1253  0F4D  027F               	subwf	btemp+1,w
  1254  0F4E  1D03               	skipz
  1255  0F4F  2F52               	goto	u3475
  1256  0F50  3028               	movlw	40
  1257  0F51  0268               	subwf	_contador,w
  1258  0F52                     u3475:	
  1259  0F52  1C03               	skipc
  1260  0F53  2F55               	goto	u3471
  1261  0F54  2F56               	goto	u3470
  1262  0F55                     u3471:	
  1263  0F55  2FF1               	goto	l2600
  1264  0F56                     u3470:	
  1265  0F56                     l2578:	
  1266                           
  1267                           ;main.c: 112: distancia = adc_read_0();
  1268  0F56  120A  158A  22E1  120A  158A  	fcall	_adc_read_0
  1269  0F5B  1283               	bcf	3,5	;RP0=0, select bank0
  1270  0F5C  1303               	bcf	3,6	;RP1=0, select bank0
  1271  0F5D  0821               	movf	?_adc_read_0+1,w
  1272  0F5E  00E7               	movwf	_distancia+1
  1273  0F5F  0820               	movf	?_adc_read_0,w
  1274  0F60  00E6               	movwf	_distancia
  1275  0F61                     l2580:	
  1276                           
  1277                           ;main.c: 114: contador = 0;
  1278  0F61  01E8               	clrf	_contador
  1279  0F62  01E9               	clrf	_contador+1
  1280  0F63                     l2582:	
  1281                           
  1282                           ;main.c: 115: if(distancia>850){
  1283  0F63  3003               	movlw	3
  1284  0F64  0267               	subwf	_distancia+1,w
  1285  0F65  3053               	movlw	83
  1286  0F66  1903               	skipnz
  1287  0F67  0266               	subwf	_distancia,w
  1288  0F68  1C03               	skipc
  1289  0F69  2F6B               	goto	u3481
  1290  0F6A  2F6C               	goto	u3480
  1291  0F6B                     u3481:	
  1292  0F6B  2F8D               	goto	l2592
  1293  0F6C                     u3480:	
  1294  0F6C                     l2584:	
  1295                           
  1296                           ;main.c: 116: distancia = 0;
  1297  0F6C  01E6               	clrf	_distancia
  1298  0F6D  01E7               	clrf	_distancia+1
  1299  0F6E                     l2586:	
  1300                           
  1301                           ;main.c: 117: sprintf(message,"%04d",distancia);
  1302  0F6E  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1303  0F6F  00DB               	movwf	??_main
  1304  0F70  085B               	movf	??_main,w
  1305  0F71  00AE               	movwf	sprintf@f
  1306  0F72  3000               	movlw	0
  1307  0F73  00AF               	movwf	?_sprintf+1
  1308  0F74  00B0               	movwf	?_sprintf+2
  1309  0F75  305D               	movlw	(low (main@message| 0))& (0+255)
  1310  0F76  120A  118A  2609  120A  158A  	fcall	_sprintf
  1311  0F7B                     l2588:	
  1312                           
  1313                           ;main.c: 118: lcd_goto(64);
  1314  0F7B  3040               	movlw	64
  1315  0F7C  120A  158A  22BB  120A  158A  	fcall	_lcd_goto
  1316  0F81                     l2590:	
  1317                           
  1318                           ;main.c: 119: lcd_puts(message);
  1319  0F81  305D               	movlw	(low (main@message| 0))& (0+255)
  1320  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  1321  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  1322  0F84  00A4               	movwf	lcd_puts@s
  1323  0F85  3000               	movlw	0
  1324  0F86  00A5               	movwf	lcd_puts@s+1
  1325  0F87  120A  158A  2407  120A  158A  	fcall	_lcd_puts
  1326                           
  1327                           ;main.c: 120: }
  1328  0F8C  2FF1               	goto	l2600
  1329  0F8D                     l2592:	
  1330                           
  1331                           ;main.c: 126: else{;main.c: 127: distancia = 300 - 0.3529*distancia;
  1332  0F8D  3043               	movlw	67
  1333  0F8E  00CF               	movwf	___flsub@b+3
  1334  0F8F  3096               	movlw	150
  1335  0F90  00CE               	movwf	___flsub@b+2
  1336  0F91  3000               	movlw	0
  1337  0F92  00CD               	movwf	___flsub@b+1
  1338  0F93  3000               	movlw	0
  1339  0F94  00CC               	movwf	___flsub@b
  1340  0F95  0866               	movf	_distancia,w
  1341  0F96  00A0               	movwf	___xxtofl@val
  1342  0F97  0867               	movf	_distancia+1,w
  1343  0F98  00A1               	movwf	___xxtofl@val+1
  1344  0F99  01A2               	clrf	___xxtofl@val+2
  1345  0F9A  01A3               	clrf	___xxtofl@val+3
  1346  0F9B  3000               	movlw	0
  1347  0F9C  120A  158A  263F  120A  158A  	fcall	___xxtofl
  1348  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  1349  0FA2  1303               	bcf	3,6	;RP1=0, select bank0
  1350  0FA3  0823               	movf	?___xxtofl+3,w
  1351  0FA4  00B5               	movwf	___flmul@a+3
  1352  0FA5  0822               	movf	?___xxtofl+2,w
  1353  0FA6  00B4               	movwf	___flmul@a+2
  1354  0FA7  0821               	movf	?___xxtofl+1,w
  1355  0FA8  00B3               	movwf	___flmul@a+1
  1356  0FA9  0820               	movf	?___xxtofl,w
  1357  0FAA  00B2               	movwf	___flmul@a
  1358  0FAB  303E               	movlw	62
  1359  0FAC  00B1               	movwf	___flmul@b+3
  1360  0FAD  30B4               	movlw	180
  1361  0FAE  00B0               	movwf	___flmul@b+2
  1362  0FAF  30AF               	movlw	175
  1363  0FB0  00AF               	movwf	___flmul@b+1
  1364  0FB1  304F               	movlw	79
  1365  0FB2  00AE               	movwf	___flmul@b
  1366  0FB3  120A  118A  2020  120A  158A  	fcall	___flmul
  1367  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  1368  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  1369  0FBA  0831               	movf	?___flmul+3,w
  1370  0FBB  00CB               	movwf	___flsub@a+3
  1371  0FBC  0830               	movf	?___flmul+2,w
  1372  0FBD  00CA               	movwf	___flsub@a+2
  1373  0FBE  082F               	movf	?___flmul+1,w
  1374  0FBF  00C9               	movwf	___flsub@a+1
  1375  0FC0  082E               	movf	?___flmul,w
  1376  0FC1  00C8               	movwf	___flsub@a
  1377  0FC2  120A  158A  2393  120A  158A  	fcall	___flsub
  1378  0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  1379  0FC8  1303               	bcf	3,6	;RP1=0, select bank0
  1380  0FC9  084B               	movf	?___flsub+3,w
  1381  0FCA  00D3               	movwf	___fltol@f1+3
  1382  0FCB  084A               	movf	?___flsub+2,w
  1383  0FCC  00D2               	movwf	___fltol@f1+2
  1384  0FCD  0849               	movf	?___flsub+1,w
  1385  0FCE  00D1               	movwf	___fltol@f1+1
  1386  0FCF  0848               	movf	?___flsub,w
  1387  0FD0  00D0               	movwf	___fltol@f1
  1388  0FD1  120A  158A  25C3  120A  158A  	fcall	___fltol
  1389  0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  1390  0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  1391  0FD8  0851               	movf	?___fltol+1,w
  1392  0FD9  00E7               	movwf	_distancia+1
  1393  0FDA  0850               	movf	?___fltol,w
  1394  0FDB  00E6               	movwf	_distancia
  1395  0FDC                     l2594:	
  1396                           
  1397                           ;main.c: 128: sprintf(message,"%04d mm",distancia);
  1398  0FDC  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1399  0FDD  00DB               	movwf	??_main
  1400  0FDE  085B               	movf	??_main,w
  1401  0FDF  00AE               	movwf	sprintf@f
  1402  0FE0  0867               	movf	_distancia+1,w
  1403  0FE1  00B0               	movwf	?_sprintf+2
  1404  0FE2  0866               	movf	_distancia,w
  1405  0FE3  00AF               	movwf	?_sprintf+1
  1406  0FE4  305D               	movlw	(low (main@message| 0))& (0+255)
  1407  0FE5  120A  118A  2609  120A  158A  	fcall	_sprintf
  1408  0FEA                     l2596:	
  1409                           
  1410                           ;main.c: 129: lcd_goto(64);
  1411  0FEA  3040               	movlw	64
  1412  0FEB  120A  158A  22BB  120A  158A  	fcall	_lcd_goto
  1413  0FF0  2F81               	goto	l2590
  1414  0FF1                     l2600:	
  1415                           
  1416                           ;main.c: 131: };main.c: 132: };main.c: 134: _delay((unsigned long)((1)*(20000000/4000.0)
      +                          ));
  1417  0FF1  3007               	movlw	7
  1418  0FF2  1283               	bcf	3,5	;RP0=0, select bank0
  1419  0FF3  1303               	bcf	3,6	;RP1=0, select bank0
  1420  0FF4  00DC               	movwf	??_main+1
  1421  0FF5  307C               	movlw	124
  1422  0FF6  00DB               	movwf	??_main
  1423  0FF7                     u3497:	
  1424  0FF7  0BDB               	decfsz	??_main,f
  1425  0FF8  2FF7               	goto	u3497
  1426  0FF9  0BDC               	decfsz	??_main+1,f
  1427  0FFA  2FF7               	goto	u3497
  1428  0FFB  0000               	nop
  1429  0FFC  2F35               	goto	l2572
  1430  0FFD  120A  118A  280E   	ljmp	start
  1431  1000                     __end_of_main:	
  1432                           
  1433                           	psect	text1
  1434  0A8F                     __ptext1:	
  1435 ;; *************** function _t0_init *****************
  1436 ;; Defined at:
  1437 ;;		line 73 in file "main.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1451 ;;      Params:         0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0
  1453 ;;      Temps:          0       0       0       0       0
  1454 ;;      Totals:         0       0       0       0       0
  1455 ;;Total ram usage:        0 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; Hardware stack levels required when called:    2
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           
  1466                           ;psect for function _t0_init
  1467  0A8F                     _t0_init:	
  1468  0A8F                     l2138:	
  1469                           ;incstack = 0
  1470                           ; Regs used in _t0_init: [wreg+status,2+status,0]
  1471                           
  1472                           
  1473                           ;main.c: 75: T0CS=0;
  1474  0A8F  1683               	bsf	3,5	;RP0=1, select bank1
  1475  0A90  1303               	bcf	3,6	;RP1=0, select bank1
  1476  0A91  1281               	bcf	1,5	;volatile
  1477                           
  1478                           ;main.c: 77: PSA=0;
  1479  0A92  1181               	bcf	1,3	;volatile
  1480  0A93                     l2140:	
  1481                           
  1482                           ;main.c: 78: OPTION_REGbits.PS=0b111;
  1483  0A93  3007               	movlw	7
  1484  0A94  0481               	iorwf	1,f	;volatile
  1485  0A95                     l2142:	
  1486                           
  1487                           ;main.c: 79: TMR0=255-98;
  1488  0A95  309D               	movlw	157
  1489  0A96  1283               	bcf	3,5	;RP0=0, select bank0
  1490  0A97  1303               	bcf	3,6	;RP1=0, select bank0
  1491  0A98  0081               	movwf	1	;volatile
  1492  0A99                     l2144:	
  1493                           
  1494                           ;main.c: 80: T0IE=1;
  1495  0A99  168B               	bsf	11,5	;volatile
  1496  0A9A                     l137:	
  1497  0A9A  0008               	return
  1498  0A9B                     __end_of_t0_init:	
  1499                           
  1500                           	psect	text2
  1501  0609                     __ptext2:	
  1502 ;; *************** function _sprintf *****************
  1503 ;; Defined at:
  1504 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  sp              1    wreg     PTR unsigned char 
  1507 ;;		 -> main@message(9), 
  1508 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  1509 ;;		 -> STR_3(8), STR_2(5), 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  1512 ;;		 -> main@message(9), 
  1513 ;;  tmpval          4    0        struct .
  1514 ;;  width           2   25[BANK0 ] int 
  1515 ;;  val             2   22[BANK0 ] unsigned int 
  1516 ;;  cp              2    0        PTR const unsigned char 
  1517 ;;  len             2    0        unsigned int 
  1518 ;;  c               1   28[BANK0 ] unsigned char 
  1519 ;;  flag            1   24[BANK0 ] unsigned char 
  1520 ;;  prec            1   21[BANK0 ] char 
  1521 ;;  ap              1   20[BANK0 ] PTR void [1]
  1522 ;;		 -> ?_sprintf(2), 
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  2   14[BANK0 ] int 
  1525 ;; Registers used:
  1526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1532 ;;      Params:         0       3       0       0       0
  1533 ;;      Locals:         0       9       0       0       0
  1534 ;;      Temps:          0       3       0       0       0
  1535 ;;      Totals:         0      15       0       0       0
  1536 ;;Total ram usage:       15 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    3
  1539 ;; This function calls:
  1540 ;;		___lwdiv
  1541 ;;		___lwmod
  1542 ;;		___wmul
  1543 ;;		_isdigit
  1544 ;; This function is called by:
  1545 ;;		_main
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           
  1550                           ;psect for function _sprintf
  1551  0609                     _sprintf:	
  1552                           
  1553                           ;incstack = 0
  1554                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1555                           ;sprintf@sp stored from wreg
  1556  0609  1283               	bcf	3,5	;RP0=0, select bank0
  1557  060A  1303               	bcf	3,6	;RP1=0, select bank0
  1558  060B  00BB               	movwf	sprintf@sp
  1559  060C                     l2194:	
  1560                           
  1561                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  1562  060C  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1563  060D  00B1               	movwf	??_sprintf
  1564  060E  0831               	movf	??_sprintf,w
  1565  060F  00B4               	movwf	sprintf@ap
  1566                           
  1567                           ;doprnt.c: 553: while((c = *f++)) {
  1568  0610  2FB6               	goto	l2298
  1569  0611                     l2196:	
  1570                           
  1571                           ;doprnt.c: 555: if(c != '%')
  1572  0611  3025               	movlw	37
  1573  0612  063C               	xorwf	sprintf@c,w
  1574  0613  1903               	btfsc	3,2
  1575  0614  2E16               	goto	u2631
  1576  0615  2E17               	goto	u2630
  1577  0616                     u2631:	
  1578  0616  2E23               	goto	l2202
  1579  0617                     u2630:	
  1580  0617                     l2198:	
  1581                           
  1582                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1583  0617  083C               	movf	sprintf@c,w
  1584  0618  00B1               	movwf	??_sprintf
  1585  0619  083B               	movf	sprintf@sp,w
  1586  061A  0084               	movwf	4
  1587  061B  0831               	movf	??_sprintf,w
  1588  061C  1383               	bcf	3,7	;select IRP bank0
  1589  061D  0080               	movwf	0
  1590  061E                     l2200:	
  1591  061E  3001               	movlw	1
  1592  061F  00B1               	movwf	??_sprintf
  1593  0620  0831               	movf	??_sprintf,w
  1594  0621  07BB               	addwf	sprintf@sp,f
  1595                           
  1596                           ;doprnt.c: 559: continue;
  1597  0622  2FB6               	goto	l2298
  1598  0623                     l2202:	
  1599                           
  1600                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  1601  0623  01B9               	clrf	sprintf@width
  1602  0624  01BA               	clrf	sprintf@width+1
  1603                           
  1604                           ;doprnt.c: 565: flag = 0;
  1605  0625  01B8               	clrf	sprintf@flag
  1606  0626  2E2C               	goto	l2208
  1607  0627                     l382:	
  1608                           ;doprnt.c: 596: case '0':
  1609                           
  1610                           
  1611                           ;doprnt.c: 597: flag |= 0x04;
  1612  0627  1538               	bsf	sprintf@flag,2
  1613  0628                     l2204:	
  1614                           
  1615                           ;doprnt.c: 598: f++;
  1616  0628  3001               	movlw	1
  1617  0629  00B1               	movwf	??_sprintf
  1618  062A  0831               	movf	??_sprintf,w
  1619  062B  07AE               	addwf	sprintf@f,f
  1620  062C                     l2208:	
  1621                           ;doprnt.c: 599: continue;
  1622                           
  1623  062C  082E               	movf	sprintf@f,w
  1624  062D  0084               	movwf	4
  1625  062E  120A  118A  27D7  120A  118A  	fcall	stringdir
  1626                           
  1627                           ; Switch size 1, requested type "simple"
  1628                           ; Number of cases is 1, Range of values is 48 to 48
  1629                           ; switch strategies available:
  1630                           ; Name         Instructions Cycles
  1631                           ; simple_byte            4     3 (average)
  1632                           ; direct_byte           14    11 (fixed)
  1633                           ; jumptable            263     9 (fixed)
  1634                           ;	Chosen strategy is simple_byte
  1635  0633  3A30               	xorlw	48	; case 48
  1636  0634  1903               	skipnz
  1637  0635  2E27               	goto	l382
  1638  0636  2E37               	goto	l2210
  1639  0637                     l2210:	
  1640                           
  1641                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  1642  0637  082E               	movf	sprintf@f,w
  1643  0638  0084               	movwf	4
  1644  0639  120A  118A  27D7  120A  118A  	fcall	stringdir
  1645  063E  120A  158A  22CD  120A  118A  	fcall	_isdigit
  1646  0643  1C03               	btfss	3,0
  1647  0644  2E46               	goto	u2641
  1648  0645  2E47               	goto	u2640
  1649  0646                     u2641:	
  1650  0646  2E87               	goto	l2224
  1651  0647                     u2640:	
  1652  0647                     l2212:	
  1653                           
  1654                           ;doprnt.c: 615: width = 0;
  1655  0647  1283               	bcf	3,5	;RP0=0, select bank0
  1656  0648  1303               	bcf	3,6	;RP1=0, select bank0
  1657  0649  01B9               	clrf	sprintf@width
  1658  064A  01BA               	clrf	sprintf@width+1
  1659  064B                     l2214:	
  1660                           
  1661                           ;doprnt.c: 617: width *= 10;
  1662  064B  300A               	movlw	10
  1663  064C  1283               	bcf	3,5	;RP0=0, select bank0
  1664  064D  1303               	bcf	3,6	;RP1=0, select bank0
  1665  064E  00A0               	movwf	___wmul@multiplier
  1666  064F  3000               	movlw	0
  1667  0650  00A1               	movwf	___wmul@multiplier+1
  1668  0651  083A               	movf	sprintf@width+1,w
  1669  0652  00A3               	movwf	___wmul@multiplicand+1
  1670  0653  0839               	movf	sprintf@width,w
  1671  0654  00A2               	movwf	___wmul@multiplicand
  1672  0655  120A  158A  23B7  120A  118A  	fcall	___wmul
  1673  065A  1283               	bcf	3,5	;RP0=0, select bank0
  1674  065B  1303               	bcf	3,6	;RP1=0, select bank0
  1675  065C  0821               	movf	?___wmul+1,w
  1676  065D  00BA               	movwf	sprintf@width+1
  1677  065E  0820               	movf	?___wmul,w
  1678  065F  00B9               	movwf	sprintf@width
  1679  0660                     l2216:	
  1680                           
  1681                           ;doprnt.c: 618: width += *f++ - '0';
  1682  0660  082E               	movf	sprintf@f,w
  1683  0661  0084               	movwf	4
  1684  0662  120A  118A  27D7  120A  118A  	fcall	stringdir
  1685  0667  3ED0               	addlw	208
  1686  0668  00B1               	movwf	??_sprintf
  1687  0669  30FF               	movlw	255
  1688  066A  1803               	skipnc
  1689  066B  3000               	movlw	0
  1690  066C  00B2               	movwf	??_sprintf+1
  1691  066D  0831               	movf	??_sprintf,w
  1692  066E  07B9               	addwf	sprintf@width,f
  1693  066F  1803               	skipnc
  1694  0670  0ABA               	incf	sprintf@width+1,f
  1695  0671  0832               	movf	??_sprintf+1,w
  1696  0672  07BA               	addwf	sprintf@width+1,f
  1697  0673                     l2218:	
  1698  0673  3001               	movlw	1
  1699  0674  00B1               	movwf	??_sprintf
  1700  0675  0831               	movf	??_sprintf,w
  1701  0676  07AE               	addwf	sprintf@f,f
  1702  0677                     l2220:	
  1703                           
  1704                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  1705  0677  082E               	movf	sprintf@f,w
  1706  0678  0084               	movwf	4
  1707  0679  120A  118A  27D7  120A  118A  	fcall	stringdir
  1708  067E  120A  158A  22CD  120A  118A  	fcall	_isdigit
  1709  0683  1803               	btfsc	3,0
  1710  0684  2E86               	goto	u2651
  1711  0685  2E87               	goto	u2650
  1712  0686                     u2651:	
  1713  0686  2E4B               	goto	l2214
  1714  0687                     u2650:	
  1715  0687                     l2224:	
  1716  0687  3001               	movlw	1
  1717  0688  1283               	bcf	3,5	;RP0=0, select bank0
  1718  0689  1303               	bcf	3,6	;RP1=0, select bank0
  1719  068A  07AE               	addwf	sprintf@f,f
  1720  068B  30FF               	movlw	-1
  1721  068C  072E               	addwf	sprintf@f,w
  1722  068D  0084               	movwf	4
  1723  068E  120A  118A  27D7  120A  118A  	fcall	stringdir
  1724  0693  00BC               	movwf	sprintf@c
  1725                           
  1726                           ; Switch size 1, requested type "simple"
  1727                           ; Number of cases is 3, Range of values is 0 to 105
  1728                           ; switch strategies available:
  1729                           ; Name         Instructions Cycles
  1730                           ; simple_byte           10     6 (average)
  1731                           ; jumptable            260     6 (fixed)
  1732                           ;	Chosen strategy is simple_byte
  1733  0694  3A00               	xorlw	0	; case 0
  1734  0695  1903               	skipnz
  1735  0696  2FC8               	goto	l2300
  1736  0697  3A64               	xorlw	100	; case 100
  1737  0698  1903               	skipnz
  1738  0699  2E9E               	goto	l2226
  1739  069A  3A0D               	xorlw	13	; case 105
  1740  069B  1903               	skipnz
  1741  069C  2E9E               	goto	l2226
  1742  069D  2FB6               	goto	l2298
  1743  069E                     l2226:	
  1744                           
  1745                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  1746  069E  0834               	movf	sprintf@ap,w
  1747  069F  0084               	movwf	4
  1748  06A0  1383               	bcf	3,7	;select IRP bank0
  1749  06A1  0800               	movf	0,w
  1750  06A2  00B6               	movwf	sprintf@val
  1751  06A3  0A84               	incf	4,f
  1752  06A4  0800               	movf	0,w
  1753  06A5  00B7               	movwf	sprintf@val+1
  1754  06A6                     l2228:	
  1755  06A6  3002               	movlw	2
  1756  06A7  00B1               	movwf	??_sprintf
  1757  06A8  0831               	movf	??_sprintf,w
  1758  06A9  07B4               	addwf	sprintf@ap,f
  1759  06AA                     l2230:	
  1760                           
  1761                           ;doprnt.c: 1287: if((int)val < 0) {
  1762  06AA  1FB7               	btfss	sprintf@val+1,7
  1763  06AB  2EAD               	goto	u2661
  1764  06AC  2EAE               	goto	u2660
  1765  06AD                     u2661:	
  1766  06AD  2EB7               	goto	l2236
  1767  06AE                     u2660:	
  1768  06AE                     l2232:	
  1769                           
  1770                           ;doprnt.c: 1288: flag |= 0x03;
  1771  06AE  3003               	movlw	3
  1772  06AF  00B1               	movwf	??_sprintf
  1773  06B0  0831               	movf	??_sprintf,w
  1774  06B1  04B8               	iorwf	sprintf@flag,f
  1775  06B2                     l2234:	
  1776                           
  1777                           ;doprnt.c: 1289: val = -val;
  1778  06B2  09B6               	comf	sprintf@val,f
  1779  06B3  09B7               	comf	sprintf@val+1,f
  1780  06B4  0AB6               	incf	sprintf@val,f
  1781  06B5  1903               	skipnz
  1782  06B6  0AB7               	incf	sprintf@val+1,f
  1783  06B7                     l2236:	
  1784                           
  1785                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  1786  06B7  01BC               	clrf	sprintf@c
  1787  06B8  0ABC               	incf	sprintf@c,f
  1788  06B9                     l2242:	
  1789                           
  1790                           ;doprnt.c: 1332: if(val < dpowers[c])
  1791  06B9  083C               	movf	sprintf@c,w
  1792  06BA  00B1               	movwf	??_sprintf
  1793  06BB  0731               	addwf	??_sprintf,w
  1794  06BC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1795  06BD  0084               	movwf	4
  1796  06BE  120A  118A  27D7  120A  118A  	fcall	stringdir
  1797  06C3  00B2               	movwf	??_sprintf+1
  1798  06C4  120A  118A  27D7  120A  118A  	fcall	stringdir
  1799  06C9  00B3               	movwf	??_sprintf+2
  1800  06CA  0833               	movf	??_sprintf+2,w
  1801  06CB  0237               	subwf	sprintf@val+1,w
  1802  06CC  1D03               	skipz
  1803  06CD  2ED0               	goto	u2675
  1804  06CE  0832               	movf	??_sprintf+1,w
  1805  06CF  0236               	subwf	sprintf@val,w
  1806  06D0                     u2675:	
  1807  06D0  1803               	skipnc
  1808  06D1  2ED3               	goto	u2671
  1809  06D2  2ED4               	goto	u2670
  1810  06D3                     u2671:	
  1811  06D3  2ED5               	goto	l2246
  1812  06D4                     u2670:	
  1813  06D4  2EDF               	goto	l2248
  1814  06D5                     l2246:	
  1815  06D5  3001               	movlw	1
  1816  06D6  00B1               	movwf	??_sprintf
  1817  06D7  0831               	movf	??_sprintf,w
  1818  06D8  07BC               	addwf	sprintf@c,f
  1819  06D9  3005               	movlw	5
  1820  06DA  063C               	xorwf	sprintf@c,w
  1821  06DB  1D03               	btfss	3,2
  1822  06DC  2EDE               	goto	u2681
  1823  06DD  2EDF               	goto	u2680
  1824  06DE                     u2681:	
  1825  06DE  2EB9               	goto	l2242
  1826  06DF                     u2680:	
  1827  06DF                     l2248:	
  1828                           
  1829                           ;doprnt.c: 1371: if(width && flag & 0x03)
  1830  06DF  0839               	movf	sprintf@width,w
  1831  06E0  043A               	iorwf	sprintf@width+1,w
  1832  06E1  1903               	btfsc	3,2
  1833  06E2  2EE4               	goto	u2691
  1834  06E3  2EE5               	goto	u2690
  1835  06E4                     u2691:	
  1836  06E4  2EF1               	goto	l400
  1837  06E5                     u2690:	
  1838  06E5                     l2250:	
  1839  06E5  0838               	movf	sprintf@flag,w
  1840  06E6  3903               	andlw	3
  1841  06E7  1903               	btfsc	3,2
  1842  06E8  2EEA               	goto	u2701
  1843  06E9  2EEB               	goto	u2700
  1844  06EA                     u2701:	
  1845  06EA  2EF1               	goto	l400
  1846  06EB                     u2700:	
  1847  06EB                     l2252:	
  1848                           
  1849                           ;doprnt.c: 1372: width--;
  1850  06EB  30FF               	movlw	255
  1851  06EC  07B9               	addwf	sprintf@width,f
  1852  06ED  1803               	skipnc
  1853  06EE  0ABA               	incf	sprintf@width+1,f
  1854  06EF  30FF               	movlw	255
  1855  06F0  07BA               	addwf	sprintf@width+1,f
  1856  06F1                     l400:	
  1857                           
  1858                           ;doprnt.c: 1407: if(width > c)
  1859  06F1  083A               	movf	sprintf@width+1,w
  1860  06F2  3A80               	xorlw	128
  1861  06F3  3C80               	sublw	128
  1862  06F4  1D03               	skipz
  1863  06F5  2EF8               	goto	u2715
  1864  06F6  0839               	movf	sprintf@width,w
  1865  06F7  023C               	subwf	sprintf@c,w
  1866  06F8                     u2715:	
  1867  06F8  1803               	skipnc
  1868  06F9  2EFB               	goto	u2711
  1869  06FA  2EFC               	goto	u2710
  1870  06FB                     u2711:	
  1871  06FB  2F08               	goto	l2256
  1872  06FC                     u2710:	
  1873  06FC                     l2254:	
  1874                           
  1875                           ;doprnt.c: 1408: width -= c;
  1876  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1877  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1878  06FE  083C               	movf	sprintf@c,w
  1879  06FF  00B1               	movwf	??_sprintf
  1880  0700  01B2               	clrf	??_sprintf+1
  1881  0701  0831               	movf	??_sprintf,w
  1882  0702  02B9               	subwf	sprintf@width,f
  1883  0703  0832               	movf	??_sprintf+1,w
  1884  0704  1C03               	skipc
  1885  0705  03BA               	decf	sprintf@width+1,f
  1886  0706  02BA               	subwf	sprintf@width+1,f
  1887  0707  2F0C               	goto	l2258
  1888  0708                     l2256:	
  1889                           
  1890                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  1891  0708  1283               	bcf	3,5	;RP0=0, select bank0
  1892  0709  1303               	bcf	3,6	;RP1=0, select bank0
  1893  070A  01B9               	clrf	sprintf@width
  1894  070B  01BA               	clrf	sprintf@width+1
  1895  070C                     l2258:	
  1896                           
  1897                           ;doprnt.c: 1413: if(flag & 0x04) {
  1898  070C  1D38               	btfss	sprintf@flag,2
  1899  070D  2F0F               	goto	u2721
  1900  070E  2F10               	goto	u2720
  1901  070F                     u2721:	
  1902  070F  2F3F               	goto	l2274
  1903  0710                     u2720:	
  1904  0710                     l2260:	
  1905                           
  1906                           ;doprnt.c: 1418: if(flag & 0x03)
  1907  0710  0838               	movf	sprintf@flag,w
  1908  0711  3903               	andlw	3
  1909  0712  1903               	btfsc	3,2
  1910  0713  2F15               	goto	u2731
  1911  0714  2F16               	goto	u2730
  1912  0715                     u2731:	
  1913  0715  2F21               	goto	l2266
  1914  0716                     u2730:	
  1915  0716                     l2262:	
  1916                           
  1917                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  1918  0716  302D               	movlw	45
  1919  0717  00B1               	movwf	??_sprintf
  1920  0718  083B               	movf	sprintf@sp,w
  1921  0719  0084               	movwf	4
  1922  071A  0831               	movf	??_sprintf,w
  1923  071B  1383               	bcf	3,7	;select IRP bank0
  1924  071C  0080               	movwf	0
  1925  071D                     l2264:	
  1926  071D  3001               	movlw	1
  1927  071E  00B1               	movwf	??_sprintf
  1928  071F  0831               	movf	??_sprintf,w
  1929  0720  07BB               	addwf	sprintf@sp,f
  1930  0721                     l2266:	
  1931                           
  1932                           ;doprnt.c: 1441: if(width)
  1933  0721  0839               	movf	sprintf@width,w
  1934  0722  043A               	iorwf	sprintf@width+1,w
  1935  0723  1903               	btfsc	3,2
  1936  0724  2F26               	goto	u2741
  1937  0725  2F27               	goto	u2740
  1938  0726                     u2741:	
  1939  0726  2F6D               	goto	l2288
  1940  0727                     u2740:	
  1941  0727                     l2268:	
  1942                           
  1943                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  1944  0727  3030               	movlw	48
  1945  0728  00B1               	movwf	??_sprintf
  1946  0729  083B               	movf	sprintf@sp,w
  1947  072A  0084               	movwf	4
  1948  072B  0831               	movf	??_sprintf,w
  1949  072C  1383               	bcf	3,7	;select IRP bank0
  1950  072D  0080               	movwf	0
  1951  072E                     l2270:	
  1952  072E  3001               	movlw	1
  1953  072F  00B1               	movwf	??_sprintf
  1954  0730  0831               	movf	??_sprintf,w
  1955  0731  07BB               	addwf	sprintf@sp,f
  1956  0732                     l2272:	
  1957                           
  1958                           ;doprnt.c: 1444: while(--width);
  1959  0732  30FF               	movlw	255
  1960  0733  07B9               	addwf	sprintf@width,f
  1961  0734  1803               	skipnc
  1962  0735  0ABA               	incf	sprintf@width+1,f
  1963  0736  30FF               	movlw	255
  1964  0737  07BA               	addwf	sprintf@width+1,f
  1965  0738  0839               	movf	sprintf@width,w
  1966  0739  043A               	iorwf	sprintf@width+1,w
  1967  073A  1D03               	btfss	3,2
  1968  073B  2F3D               	goto	u2751
  1969  073C  2F3E               	goto	u2750
  1970  073D                     u2751:	
  1971  073D  2F27               	goto	l2268
  1972  073E                     u2750:	
  1973  073E  2F6D               	goto	l2288
  1974  073F                     l2274:	
  1975                           
  1976                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  1977  073F  0839               	movf	sprintf@width,w
  1978  0740  043A               	iorwf	sprintf@width+1,w
  1979  0741  1903               	btfsc	3,2
  1980  0742  2F44               	goto	u2761
  1981  0743  2F45               	goto	u2760
  1982  0744                     u2761:	
  1983  0744  2F5C               	goto	l2282
  1984  0745                     u2760:	
  1985  0745                     l2276:	
  1986                           
  1987                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  1988  0745  3020               	movlw	32
  1989  0746  00B1               	movwf	??_sprintf
  1990  0747  083B               	movf	sprintf@sp,w
  1991  0748  0084               	movwf	4
  1992  0749  0831               	movf	??_sprintf,w
  1993  074A  1383               	bcf	3,7	;select IRP bank0
  1994  074B  0080               	movwf	0
  1995  074C                     l2278:	
  1996  074C  3001               	movlw	1
  1997  074D  00B1               	movwf	??_sprintf
  1998  074E  0831               	movf	??_sprintf,w
  1999  074F  07BB               	addwf	sprintf@sp,f
  2000  0750                     l2280:	
  2001                           
  2002                           ;doprnt.c: 1457: while(--width);
  2003  0750  30FF               	movlw	255
  2004  0751  07B9               	addwf	sprintf@width,f
  2005  0752  1803               	skipnc
  2006  0753  0ABA               	incf	sprintf@width+1,f
  2007  0754  30FF               	movlw	255
  2008  0755  07BA               	addwf	sprintf@width+1,f
  2009  0756  0839               	movf	sprintf@width,w
  2010  0757  043A               	iorwf	sprintf@width+1,w
  2011  0758  1D03               	btfss	3,2
  2012  0759  2F5B               	goto	u2771
  2013  075A  2F5C               	goto	u2770
  2014  075B                     u2771:	
  2015  075B  2F45               	goto	l2276
  2016  075C                     u2770:	
  2017  075C                     l2282:	
  2018                           
  2019                           ;doprnt.c: 1464: if(flag & 0x03)
  2020  075C  0838               	movf	sprintf@flag,w
  2021  075D  3903               	andlw	3
  2022  075E  1903               	btfsc	3,2
  2023  075F  2F61               	goto	u2781
  2024  0760  2F62               	goto	u2780
  2025  0761                     u2781:	
  2026  0761  2F6D               	goto	l2288
  2027  0762                     u2780:	
  2028  0762                     l2284:	
  2029                           
  2030                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  2031  0762  302D               	movlw	45
  2032  0763  00B1               	movwf	??_sprintf
  2033  0764  083B               	movf	sprintf@sp,w
  2034  0765  0084               	movwf	4
  2035  0766  0831               	movf	??_sprintf,w
  2036  0767  1383               	bcf	3,7	;select IRP bank0
  2037  0768  0080               	movwf	0
  2038  0769                     l2286:	
  2039  0769  3001               	movlw	1
  2040  076A  00B1               	movwf	??_sprintf
  2041  076B  0831               	movf	??_sprintf,w
  2042  076C  07BB               	addwf	sprintf@sp,f
  2043  076D                     l2288:	
  2044                           
  2045                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  2046  076D  083C               	movf	sprintf@c,w
  2047  076E  00B1               	movwf	??_sprintf
  2048  076F  0831               	movf	??_sprintf,w
  2049  0770  00B5               	movwf	sprintf@prec
  2050                           
  2051                           ;doprnt.c: 1500: while(prec--) {
  2052  0771  2FAD               	goto	l2296
  2053  0772                     l2290:	
  2054                           
  2055                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2056  0772  300A               	movlw	10
  2057  0773  00A8               	movwf	___lwmod@divisor
  2058  0774  3000               	movlw	0
  2059  0775  00A9               	movwf	___lwmod@divisor+1
  2060  0776  0835               	movf	sprintf@prec,w
  2061  0777  00B1               	movwf	??_sprintf
  2062  0778  0731               	addwf	??_sprintf,w
  2063  0779  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2064  077A  0084               	movwf	4
  2065  077B  120A  118A  27D7  120A  118A  	fcall	stringdir
  2066  0780  00A0               	movwf	___lwdiv@divisor
  2067  0781  120A  118A  27D7  120A  118A  	fcall	stringdir
  2068  0786  00A1               	movwf	___lwdiv@divisor+1
  2069  0787  0837               	movf	sprintf@val+1,w
  2070  0788  00A3               	movwf	___lwdiv@dividend+1
  2071  0789  0836               	movf	sprintf@val,w
  2072  078A  00A2               	movwf	___lwdiv@dividend
  2073  078B  120A  158A  24DB  120A  118A  	fcall	___lwdiv
  2074  0790  1283               	bcf	3,5	;RP0=0, select bank0
  2075  0791  1303               	bcf	3,6	;RP1=0, select bank0
  2076  0792  0821               	movf	?___lwdiv+1,w
  2077  0793  00AB               	movwf	___lwmod@dividend+1
  2078  0794  0820               	movf	?___lwdiv,w
  2079  0795  00AA               	movwf	___lwmod@dividend
  2080  0796  120A  158A  249F  120A  118A  	fcall	___lwmod
  2081  079B  1283               	bcf	3,5	;RP0=0, select bank0
  2082  079C  1303               	bcf	3,6	;RP1=0, select bank0
  2083  079D  0828               	movf	?___lwmod,w
  2084  079E  3E30               	addlw	48
  2085  079F  00B2               	movwf	??_sprintf+1
  2086  07A0  0832               	movf	??_sprintf+1,w
  2087  07A1  00BC               	movwf	sprintf@c
  2088  07A2                     l2292:	
  2089                           
  2090                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  2091  07A2  083C               	movf	sprintf@c,w
  2092  07A3  00B1               	movwf	??_sprintf
  2093  07A4  083B               	movf	sprintf@sp,w
  2094  07A5  0084               	movwf	4
  2095  07A6  0831               	movf	??_sprintf,w
  2096  07A7  1383               	bcf	3,7	;select IRP bank0
  2097  07A8  0080               	movwf	0
  2098  07A9                     l2294:	
  2099  07A9  3001               	movlw	1
  2100  07AA  00B1               	movwf	??_sprintf
  2101  07AB  0831               	movf	??_sprintf,w
  2102  07AC  07BB               	addwf	sprintf@sp,f
  2103  07AD                     l2296:	
  2104  07AD  30FF               	movlw	255
  2105  07AE  00B1               	movwf	??_sprintf
  2106  07AF  0831               	movf	??_sprintf,w
  2107  07B0  07B5               	addwf	sprintf@prec,f
  2108  07B1  0A35               	incf	sprintf@prec,w
  2109  07B2  1D03               	btfss	3,2
  2110  07B3  2FB5               	goto	u2791
  2111  07B4  2FB6               	goto	u2790
  2112  07B5                     u2791:	
  2113  07B5  2F72               	goto	l2290
  2114  07B6                     u2790:	
  2115  07B6                     l2298:	
  2116  07B6  3001               	movlw	1
  2117  07B7  07AE               	addwf	sprintf@f,f
  2118  07B8  30FF               	movlw	-1
  2119  07B9  072E               	addwf	sprintf@f,w
  2120  07BA  0084               	movwf	4
  2121  07BB  120A  118A  27D7  120A  118A  	fcall	stringdir
  2122  07C0  00B1               	movwf	??_sprintf
  2123  07C1  0831               	movf	??_sprintf,w
  2124  07C2  00BC               	movwf	sprintf@c
  2125  07C3  083C               	movf	sprintf@c,w
  2126  07C4  1D03               	btfss	3,2
  2127  07C5  2FC7               	goto	u2801
  2128  07C6  2FC8               	goto	u2800
  2129  07C7                     u2801:	
  2130  07C7  2E11               	goto	l2196
  2131  07C8                     u2800:	
  2132  07C8                     l2300:	
  2133                           
  2134                           ;doprnt.c: 1564: *sp = 0;
  2135  07C8  083B               	movf	sprintf@sp,w
  2136  07C9  0084               	movwf	4
  2137  07CA  1383               	bcf	3,7	;select IRP bank0
  2138  07CB  0180               	clrf	0
  2139  07CC                     l417:	
  2140  07CC  0008               	return
  2141  07CD                     __end_of_sprintf:	
  2142                           
  2143                           	psect	text3
  2144  0ACD                     __ptext3:	
  2145 ;; *************** function _isdigit *****************
  2146 ;; Defined at:
  2147 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  c               1    wreg     unsigned char 
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;  c               1    1[BANK0 ] unsigned char 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;		None               void
  2154 ;; Registers used:
  2155 ;;		wreg, status,2, status,0
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2161 ;;      Params:         0       0       0       0       0
  2162 ;;      Locals:         0       2       0       0       0
  2163 ;;      Temps:          0       0       0       0       0
  2164 ;;      Totals:         0       2       0       0       0
  2165 ;;Total ram usage:        2 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; Hardware stack levels required when called:    2
  2168 ;; This function calls:
  2169 ;;		Nothing
  2170 ;; This function is called by:
  2171 ;;		_sprintf
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           
  2176                           ;psect for function _isdigit
  2177  0ACD                     _isdigit:	
  2178                           
  2179                           ;incstack = 0
  2180                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2181                           ;isdigit@c stored from wreg
  2182  0ACD  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0ACE  1303               	bcf	3,6	;RP1=0, select bank0
  2184  0ACF  00A1               	movwf	isdigit@c
  2185  0AD0                     l1798:	
  2186  0AD0  01A0               	clrf	_isdigit$775
  2187  0AD1                     l1800:	
  2188  0AD1  303A               	movlw	58
  2189  0AD2  0221               	subwf	isdigit@c,w
  2190  0AD3  1803               	skipnc
  2191  0AD4  2AD6               	goto	u1871
  2192  0AD5  2AD7               	goto	u1870
  2193  0AD6                     u1871:	
  2194  0AD6  2ADF               	goto	l1806
  2195  0AD7                     u1870:	
  2196  0AD7                     l1802:	
  2197  0AD7  3030               	movlw	48
  2198  0AD8  0221               	subwf	isdigit@c,w
  2199  0AD9  1C03               	skipc
  2200  0ADA  2ADC               	goto	u1881
  2201  0ADB  2ADD               	goto	u1880
  2202  0ADC                     u1881:	
  2203  0ADC  2ADF               	goto	l1806
  2204  0ADD                     u1880:	
  2205  0ADD                     l1804:	
  2206  0ADD  01A0               	clrf	_isdigit$775
  2207  0ADE  0AA0               	incf	_isdigit$775,f
  2208  0ADF                     l1806:	
  2209  0ADF  0C20               	rrf	_isdigit$775,w
  2210  0AE0                     l868:	
  2211  0AE0  0008               	return
  2212  0AE1                     __end_of_isdigit:	
  2213                           
  2214                           	psect	text4
  2215  0BB7                     __ptext4:	
  2216 ;; *************** function ___wmul *****************
  2217 ;; Defined at:
  2218 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2221 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  product         2    4[BANK0 ] unsigned int 
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  2    0[BANK0 ] unsigned int 
  2226 ;; Registers used:
  2227 ;;		wreg, status,2, status,0
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2233 ;;      Params:         0       4       0       0       0
  2234 ;;      Locals:         0       2       0       0       0
  2235 ;;      Temps:          0       0       0       0       0
  2236 ;;      Totals:         0       6       0       0       0
  2237 ;;Total ram usage:        6 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; Hardware stack levels required when called:    2
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_sprintf
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           
  2248                           ;psect for function ___wmul
  2249  0BB7                     ___wmul:	
  2250  0BB7                     l1810:	
  2251                           ;incstack = 0
  2252                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2253                           
  2254  0BB7  1283               	bcf	3,5	;RP0=0, select bank0
  2255  0BB8  1303               	bcf	3,6	;RP1=0, select bank0
  2256  0BB9  01A4               	clrf	___wmul@product
  2257  0BBA  01A5               	clrf	___wmul@product+1
  2258  0BBB                     l1812:	
  2259  0BBB  1C20               	btfss	___wmul@multiplier,0
  2260  0BBC  2BBE               	goto	u1891
  2261  0BBD  2BBF               	goto	u1890
  2262  0BBE                     u1891:	
  2263  0BBE  2BC5               	goto	l421
  2264  0BBF                     u1890:	
  2265  0BBF                     l1814:	
  2266  0BBF  0822               	movf	___wmul@multiplicand,w
  2267  0BC0  07A4               	addwf	___wmul@product,f
  2268  0BC1  1803               	skipnc
  2269  0BC2  0AA5               	incf	___wmul@product+1,f
  2270  0BC3  0823               	movf	___wmul@multiplicand+1,w
  2271  0BC4  07A5               	addwf	___wmul@product+1,f
  2272  0BC5                     l421:	
  2273  0BC5  3001               	movlw	1
  2274  0BC6                     u1905:	
  2275  0BC6  1003               	clrc
  2276  0BC7  0DA2               	rlf	___wmul@multiplicand,f
  2277  0BC8  0DA3               	rlf	___wmul@multiplicand+1,f
  2278  0BC9  3EFF               	addlw	-1
  2279  0BCA  1D03               	skipz
  2280  0BCB  2BC6               	goto	u1905
  2281  0BCC                     l1816:	
  2282  0BCC  3001               	movlw	1
  2283  0BCD                     u1915:	
  2284  0BCD  1003               	clrc
  2285  0BCE  0CA1               	rrf	___wmul@multiplier+1,f
  2286  0BCF  0CA0               	rrf	___wmul@multiplier,f
  2287  0BD0  3EFF               	addlw	-1
  2288  0BD1  1D03               	skipz
  2289  0BD2  2BCD               	goto	u1915
  2290  0BD3                     l1818:	
  2291  0BD3  0820               	movf	___wmul@multiplier,w
  2292  0BD4  0421               	iorwf	___wmul@multiplier+1,w
  2293  0BD5  1D03               	btfss	3,2
  2294  0BD6  2BD8               	goto	u1921
  2295  0BD7  2BD9               	goto	u1920
  2296  0BD8                     u1921:	
  2297  0BD8  2BBB               	goto	l1812
  2298  0BD9                     u1920:	
  2299  0BD9                     l1820:	
  2300  0BD9  0825               	movf	___wmul@product+1,w
  2301  0BDA  00A1               	movwf	?___wmul+1
  2302  0BDB  0824               	movf	___wmul@product,w
  2303  0BDC  00A0               	movwf	?___wmul
  2304  0BDD                     l423:	
  2305  0BDD  0008               	return
  2306  0BDE                     __end_of___wmul:	
  2307                           
  2308                           	psect	text5
  2309  0C9F                     __ptext5:	
  2310 ;; *************** function ___lwmod *****************
  2311 ;; Defined at:
  2312 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;  divisor         2    8[BANK0 ] unsigned int 
  2315 ;;  dividend        2   10[BANK0 ] unsigned int 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  counter         1   13[BANK0 ] unsigned char 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  2    8[BANK0 ] unsigned int 
  2320 ;; Registers used:
  2321 ;;		wreg, status,2, status,0
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2327 ;;      Params:         0       4       0       0       0
  2328 ;;      Locals:         0       1       0       0       0
  2329 ;;      Temps:          0       1       0       0       0
  2330 ;;      Totals:         0       6       0       0       0
  2331 ;;Total ram usage:        6 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:    2
  2334 ;; This function calls:
  2335 ;;		Nothing
  2336 ;; This function is called by:
  2337 ;;		_sprintf
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           
  2342                           ;psect for function ___lwmod
  2343  0C9F                     ___lwmod:	
  2344  0C9F                     l1850:	
  2345                           ;incstack = 0
  2346                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2347                           
  2348  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  2349  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  2350  0CA1  0828               	movf	___lwmod@divisor,w
  2351  0CA2  0429               	iorwf	___lwmod@divisor+1,w
  2352  0CA3  1903               	btfsc	3,2
  2353  0CA4  2CA6               	goto	u2001
  2354  0CA5  2CA7               	goto	u2000
  2355  0CA6                     u2001:	
  2356  0CA6  2CD6               	goto	l1868
  2357  0CA7                     u2000:	
  2358  0CA7                     l1852:	
  2359  0CA7  01AD               	clrf	___lwmod@counter
  2360  0CA8  0AAD               	incf	___lwmod@counter,f
  2361  0CA9  2CB5               	goto	l1858
  2362  0CAA                     l1854:	
  2363  0CAA  3001               	movlw	1
  2364  0CAB                     u2015:	
  2365  0CAB  1003               	clrc
  2366  0CAC  0DA8               	rlf	___lwmod@divisor,f
  2367  0CAD  0DA9               	rlf	___lwmod@divisor+1,f
  2368  0CAE  3EFF               	addlw	-1
  2369  0CAF  1D03               	skipz
  2370  0CB0  2CAB               	goto	u2015
  2371  0CB1                     l1856:	
  2372  0CB1  3001               	movlw	1
  2373  0CB2  00AC               	movwf	??___lwmod
  2374  0CB3  082C               	movf	??___lwmod,w
  2375  0CB4  07AD               	addwf	___lwmod@counter,f
  2376  0CB5                     l1858:	
  2377  0CB5  1FA9               	btfss	___lwmod@divisor+1,7
  2378  0CB6  2CB8               	goto	u2021
  2379  0CB7  2CB9               	goto	u2020
  2380  0CB8                     u2021:	
  2381  0CB8  2CAA               	goto	l1854
  2382  0CB9                     u2020:	
  2383  0CB9                     l1860:	
  2384  0CB9  0829               	movf	___lwmod@divisor+1,w
  2385  0CBA  022B               	subwf	___lwmod@dividend+1,w
  2386  0CBB  1D03               	skipz
  2387  0CBC  2CBF               	goto	u2035
  2388  0CBD  0828               	movf	___lwmod@divisor,w
  2389  0CBE  022A               	subwf	___lwmod@dividend,w
  2390  0CBF                     u2035:	
  2391  0CBF  1C03               	skipc
  2392  0CC0  2CC2               	goto	u2031
  2393  0CC1  2CC3               	goto	u2030
  2394  0CC2                     u2031:	
  2395  0CC2  2CC9               	goto	l1864
  2396  0CC3                     u2030:	
  2397  0CC3                     l1862:	
  2398  0CC3  0828               	movf	___lwmod@divisor,w
  2399  0CC4  02AA               	subwf	___lwmod@dividend,f
  2400  0CC5  0829               	movf	___lwmod@divisor+1,w
  2401  0CC6  1C03               	skipc
  2402  0CC7  03AB               	decf	___lwmod@dividend+1,f
  2403  0CC8  02AB               	subwf	___lwmod@dividend+1,f
  2404  0CC9                     l1864:	
  2405  0CC9  3001               	movlw	1
  2406  0CCA                     u2045:	
  2407  0CCA  1003               	clrc
  2408  0CCB  0CA9               	rrf	___lwmod@divisor+1,f
  2409  0CCC  0CA8               	rrf	___lwmod@divisor,f
  2410  0CCD  3EFF               	addlw	-1
  2411  0CCE  1D03               	skipz
  2412  0CCF  2CCA               	goto	u2045
  2413  0CD0                     l1866:	
  2414  0CD0  3001               	movlw	1
  2415  0CD1  02AD               	subwf	___lwmod@counter,f
  2416  0CD2  1D03               	btfss	3,2
  2417  0CD3  2CD5               	goto	u2051
  2418  0CD4  2CD6               	goto	u2050
  2419  0CD5                     u2051:	
  2420  0CD5  2CB9               	goto	l1860
  2421  0CD6                     u2050:	
  2422  0CD6                     l1868:	
  2423  0CD6  082B               	movf	___lwmod@dividend+1,w
  2424  0CD7  00A9               	movwf	?___lwmod+1
  2425  0CD8  082A               	movf	___lwmod@dividend,w
  2426  0CD9  00A8               	movwf	?___lwmod
  2427  0CDA                     l703:	
  2428  0CDA  0008               	return
  2429  0CDB                     __end_of___lwmod:	
  2430                           
  2431                           	psect	text6
  2432  0CDB                     __ptext6:	
  2433 ;; *************** function ___lwdiv *****************
  2434 ;; Defined at:
  2435 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  divisor         2    0[BANK0 ] unsigned int 
  2438 ;;  dividend        2    2[BANK0 ] unsigned int 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;  quotient        2    5[BANK0 ] unsigned int 
  2441 ;;  counter         1    7[BANK0 ] unsigned char 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  2    0[BANK0 ] unsigned int 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2, status,0
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2451 ;;      Params:         0       4       0       0       0
  2452 ;;      Locals:         0       3       0       0       0
  2453 ;;      Temps:          0       1       0       0       0
  2454 ;;      Totals:         0       8       0       0       0
  2455 ;;Total ram usage:        8 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    2
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_sprintf
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           
  2466                           ;psect for function ___lwdiv
  2467  0CDB                     ___lwdiv:	
  2468  0CDB                     l1824:	
  2469                           ;incstack = 0
  2470                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2471                           
  2472  0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  2473  0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  2474  0CDD  01A5               	clrf	___lwdiv@quotient
  2475  0CDE  01A6               	clrf	___lwdiv@quotient+1
  2476  0CDF                     l1826:	
  2477  0CDF  0820               	movf	___lwdiv@divisor,w
  2478  0CE0  0421               	iorwf	___lwdiv@divisor+1,w
  2479  0CE1  1903               	btfsc	3,2
  2480  0CE2  2CE4               	goto	u1931
  2481  0CE3  2CE5               	goto	u1930
  2482  0CE4                     u1931:	
  2483  0CE4  2D1C               	goto	l1846
  2484  0CE5                     u1930:	
  2485  0CE5                     l1828:	
  2486  0CE5  01A7               	clrf	___lwdiv@counter
  2487  0CE6  0AA7               	incf	___lwdiv@counter,f
  2488  0CE7  2CF3               	goto	l1834
  2489  0CE8                     l1830:	
  2490  0CE8  3001               	movlw	1
  2491  0CE9                     u1945:	
  2492  0CE9  1003               	clrc
  2493  0CEA  0DA0               	rlf	___lwdiv@divisor,f
  2494  0CEB  0DA1               	rlf	___lwdiv@divisor+1,f
  2495  0CEC  3EFF               	addlw	-1
  2496  0CED  1D03               	skipz
  2497  0CEE  2CE9               	goto	u1945
  2498  0CEF                     l1832:	
  2499  0CEF  3001               	movlw	1
  2500  0CF0  00A4               	movwf	??___lwdiv
  2501  0CF1  0824               	movf	??___lwdiv,w
  2502  0CF2  07A7               	addwf	___lwdiv@counter,f
  2503  0CF3                     l1834:	
  2504  0CF3  1FA1               	btfss	___lwdiv@divisor+1,7
  2505  0CF4  2CF6               	goto	u1951
  2506  0CF5  2CF7               	goto	u1950
  2507  0CF6                     u1951:	
  2508  0CF6  2CE8               	goto	l1830
  2509  0CF7                     u1950:	
  2510  0CF7                     l1836:	
  2511  0CF7  3001               	movlw	1
  2512  0CF8                     u1965:	
  2513  0CF8  1003               	clrc
  2514  0CF9  0DA5               	rlf	___lwdiv@quotient,f
  2515  0CFA  0DA6               	rlf	___lwdiv@quotient+1,f
  2516  0CFB  3EFF               	addlw	-1
  2517  0CFC  1D03               	skipz
  2518  0CFD  2CF8               	goto	u1965
  2519  0CFE  0821               	movf	___lwdiv@divisor+1,w
  2520  0CFF  0223               	subwf	___lwdiv@dividend+1,w
  2521  0D00  1D03               	skipz
  2522  0D01  2D04               	goto	u1975
  2523  0D02  0820               	movf	___lwdiv@divisor,w
  2524  0D03  0222               	subwf	___lwdiv@dividend,w
  2525  0D04                     u1975:	
  2526  0D04  1C03               	skipc
  2527  0D05  2D07               	goto	u1971
  2528  0D06  2D08               	goto	u1970
  2529  0D07                     u1971:	
  2530  0D07  2D0F               	goto	l1842
  2531  0D08                     u1970:	
  2532  0D08                     l1838:	
  2533  0D08  0820               	movf	___lwdiv@divisor,w
  2534  0D09  02A2               	subwf	___lwdiv@dividend,f
  2535  0D0A  0821               	movf	___lwdiv@divisor+1,w
  2536  0D0B  1C03               	skipc
  2537  0D0C  03A3               	decf	___lwdiv@dividend+1,f
  2538  0D0D  02A3               	subwf	___lwdiv@dividend+1,f
  2539  0D0E                     l1840:	
  2540  0D0E  1425               	bsf	___lwdiv@quotient,0
  2541  0D0F                     l1842:	
  2542  0D0F  3001               	movlw	1
  2543  0D10                     u1985:	
  2544  0D10  1003               	clrc
  2545  0D11  0CA1               	rrf	___lwdiv@divisor+1,f
  2546  0D12  0CA0               	rrf	___lwdiv@divisor,f
  2547  0D13  3EFF               	addlw	-1
  2548  0D14  1D03               	skipz
  2549  0D15  2D10               	goto	u1985
  2550  0D16                     l1844:	
  2551  0D16  3001               	movlw	1
  2552  0D17  02A7               	subwf	___lwdiv@counter,f
  2553  0D18  1D03               	btfss	3,2
  2554  0D19  2D1B               	goto	u1991
  2555  0D1A  2D1C               	goto	u1990
  2556  0D1B                     u1991:	
  2557  0D1B  2CF7               	goto	l1836
  2558  0D1C                     u1990:	
  2559  0D1C                     l1846:	
  2560  0D1C  0826               	movf	___lwdiv@quotient+1,w
  2561  0D1D  00A1               	movwf	?___lwdiv+1
  2562  0D1E  0825               	movf	___lwdiv@quotient,w
  2563  0D1F  00A0               	movwf	?___lwdiv
  2564  0D20                     l693:	
  2565  0D20  0008               	return
  2566  0D21                     __end_of___lwdiv:	
  2567                           
  2568                           	psect	text7
  2569  0C07                     __ptext7:	
  2570 ;; *************** function _lcd_puts *****************
  2571 ;; Defined at:
  2572 ;;		line 52 in file "lcd.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  2575 ;;		 -> main@message(9), STR_1(8), 
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;		None
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1    wreg      void 
  2580 ;; Registers used:
  2581 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2587 ;;      Params:         0       2       0       0       0
  2588 ;;      Locals:         0       0       0       0       0
  2589 ;;      Temps:          0       0       0       0       0
  2590 ;;      Totals:         0       2       0       0       0
  2591 ;;Total ram usage:        2 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; Hardware stack levels required when called:    4
  2594 ;; This function calls:
  2595 ;;		_LCD_RS_SetHigh
  2596 ;;		_lcd_write
  2597 ;; This function is called by:
  2598 ;;		_main
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           
  2603                           ;psect for function _lcd_puts
  2604  0C07                     _lcd_puts:	
  2605  0C07                     l2080:	
  2606                           ;incstack = 0
  2607                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2608                           
  2609                           
  2610                           ;lcd.c: 53: LCD_RS_SetHigh();
  2611  0C07  120A  118A  27FC  120A  158A  	fcall	_LCD_RS_SetHigh
  2612                           
  2613                           ;lcd.c: 54: while(*s)
  2614  0C0C  2C23               	goto	l2086
  2615  0C0D                     l2082:	
  2616                           
  2617                           ;lcd.c: 55: lcd_write(*s++);
  2618  0C0D  0825               	movf	lcd_puts@s+1,w
  2619  0C0E  00FF               	movwf	btemp+1
  2620  0C0F  0824               	movf	lcd_puts@s,w
  2621  0C10  0084               	movwf	4
  2622  0C11  120A  118A  27CD  120A  158A  	fcall	stringtab
  2623  0C16  120A  158A  2372  120A  158A  	fcall	_lcd_write
  2624  0C1B                     l2084:	
  2625  0C1B  3001               	movlw	1
  2626  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  2627  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  2628  0C1E  07A4               	addwf	lcd_puts@s,f
  2629  0C1F  1803               	skipnc
  2630  0C20  0AA5               	incf	lcd_puts@s+1,f
  2631  0C21  3000               	movlw	0
  2632  0C22  07A5               	addwf	lcd_puts@s+1,f
  2633  0C23                     l2086:	
  2634  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  2635  0C24  1303               	bcf	3,6	;RP1=0, select bank0
  2636  0C25  0825               	movf	lcd_puts@s+1,w
  2637  0C26  00FF               	movwf	btemp+1
  2638  0C27  0824               	movf	lcd_puts@s,w
  2639  0C28  0084               	movwf	4
  2640  0C29  120A  118A  27CD  120A  158A  	fcall	stringtab
  2641  0C2E  3A00               	xorlw	0
  2642  0C2F  1D03               	skipz
  2643  0C30  2C32               	goto	u2551
  2644  0C31  2C33               	goto	u2550
  2645  0C32                     u2551:	
  2646  0C32  2C0D               	goto	l2082
  2647  0C33                     u2550:	
  2648  0C33                     l57:	
  2649  0C33  0008               	return
  2650  0C34                     __end_of_lcd_puts:	
  2651                           
  2652                           	psect	text8
  2653  07FC                     __ptext8:	
  2654 ;; *************** function _LCD_RS_SetHigh *****************
  2655 ;; Defined at:
  2656 ;;		line 24 in file "lcd.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;		None
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		None
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2670 ;;      Params:         0       0       0       0       0
  2671 ;;      Locals:         0       0       0       0       0
  2672 ;;      Temps:          0       0       0       0       0
  2673 ;;      Totals:         0       0       0       0       0
  2674 ;;Total ram usage:        0 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; Hardware stack levels required when called:    2
  2677 ;; This function calls:
  2678 ;;		Nothing
  2679 ;; This function is called by:
  2680 ;;		_lcd_puts
  2681 ;;		_lcd_putchar
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           
  2686                           ;psect for function _LCD_RS_SetHigh
  2687  07FC                     _LCD_RS_SetHigh:	
  2688  07FC                     l1790:	
  2689                           ;incstack = 0
  2690                           ; Regs used in _LCD_RS_SetHigh: []
  2691                           
  2692  07FC  1283               	bcf	3,5	;RP0=0, select bank0
  2693  07FD  1303               	bcf	3,6	;RP1=0, select bank0
  2694  07FE  1505               	bsf	5,2	;volatile
  2695  07FF                     l36:	
  2696  07FF  0008               	return
  2697  0800                     __end_of_LCD_RS_SetHigh:	
  2698                           
  2699                           	psect	text9
  2700  0D69                     __ptext9:	
  2701 ;; *************** function _lcd_init *****************
  2702 ;; Defined at:
  2703 ;;		line 84 in file "lcd.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;		None
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;		None
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      void 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0, pclath, cstack
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2717 ;;      Params:         0       0       0       0       0
  2718 ;;      Locals:         0       0       0       0       0
  2719 ;;      Temps:          0       2       0       0       0
  2720 ;;      Totals:         0       2       0       0       0
  2721 ;;Total ram usage:        2 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; Hardware stack levels required when called:    4
  2724 ;; This function calls:
  2725 ;;		_LCD_RS_SetLow
  2726 ;;		_LCD_RW_SetLow
  2727 ;;		_lcd_write
  2728 ;; This function is called by:
  2729 ;;		_main
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733                           
  2734                           ;psect for function _lcd_init
  2735  0D69                     _lcd_init:	
  2736  0D69                     l2100:	
  2737                           ;incstack = 0
  2738                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2739                           
  2740                           
  2741                           ;lcd.c: 86: TRISB0 = 0;
  2742  0D69  1683               	bsf	3,5	;RP0=1, select bank1
  2743  0D6A  1303               	bcf	3,6	;RP1=0, select bank1
  2744  0D6B  1006               	bcf	6,0	;volatile
  2745                           
  2746                           ;lcd.c: 87: ANS12 = 0;
  2747  0D6C  1683               	bsf	3,5	;RP0=1, select bank3
  2748  0D6D  1703               	bsf	3,6	;RP1=1, select bank3
  2749  0D6E  1209               	bcf	9,4	;volatile
  2750                           
  2751                           ;lcd.c: 88: TRISA3 = 0;
  2752  0D6F  1683               	bsf	3,5	;RP0=1, select bank1
  2753  0D70  1303               	bcf	3,6	;RP1=0, select bank1
  2754  0D71  1185               	bcf	5,3	;volatile
  2755                           
  2756                           ;lcd.c: 89: ANS3 = 0;
  2757  0D72  1683               	bsf	3,5	;RP0=1, select bank3
  2758  0D73  1703               	bsf	3,6	;RP1=1, select bank3
  2759  0D74  1188               	bcf	8,3	;volatile
  2760                           
  2761                           ;lcd.c: 90: TRISA2 = 0;
  2762  0D75  1683               	bsf	3,5	;RP0=1, select bank1
  2763  0D76  1303               	bcf	3,6	;RP1=0, select bank1
  2764  0D77  1105               	bcf	5,2	;volatile
  2765                           
  2766                           ;lcd.c: 91: ANS2 = 0;
  2767  0D78  1683               	bsf	3,5	;RP0=1, select bank3
  2768  0D79  1703               	bsf	3,6	;RP1=1, select bank3
  2769  0D7A  1108               	bcf	8,2	;volatile
  2770  0D7B                     l2102:	
  2771                           
  2772                           ;lcd.c: 92: TRISC & = 0b11000110;
  2773  0D7B  30C6               	movlw	198
  2774  0D7C  1283               	bcf	3,5	;RP0=0, select bank0
  2775  0D7D  1303               	bcf	3,6	;RP1=0, select bank0
  2776  0D7E  00A4               	movwf	??_lcd_init
  2777  0D7F  0824               	movf	??_lcd_init,w
  2778  0D80  1683               	bsf	3,5	;RP0=1, select bank1
  2779  0D81  1303               	bcf	3,6	;RP1=0, select bank1
  2780  0D82  0587               	andwf	7,f	;volatile
  2781  0D83                     l2104:	
  2782                           
  2783                           ;lcd.c: 93: RB0 = 0;
  2784  0D83  1283               	bcf	3,5	;RP0=0, select bank0
  2785  0D84  1303               	bcf	3,6	;RP1=0, select bank0
  2786  0D85  1006               	bcf	6,0	;volatile
  2787  0D86                     l2106:	
  2788                           
  2789                           ;lcd.c: 95: LCD_RW_SetLow();
  2790  0D86  120A  158A  227C  120A  158A  	fcall	_LCD_RW_SetLow
  2791  0D8B                     l2108:	
  2792                           
  2793                           ;lcd.c: 96: LCD_RS_SetLow();
  2794  0D8B  120A  158A  2278  120A  158A  	fcall	_LCD_RS_SetLow
  2795  0D90                     l2110:	
  2796                           
  2797                           ;lcd.c: 97: _delay((unsigned long)((15)*(20000000/4000.0)));
  2798  0D90  3062               	movlw	98
  2799  0D91  1283               	bcf	3,5	;RP0=0, select bank0
  2800  0D92  1303               	bcf	3,6	;RP1=0, select bank0
  2801  0D93  00A5               	movwf	??_lcd_init+1
  2802  0D94  3065               	movlw	101
  2803  0D95  00A4               	movwf	??_lcd_init
  2804  0D96                     u3507:	
  2805  0D96  0BA4               	decfsz	??_lcd_init,f
  2806  0D97  2D96               	goto	u3507
  2807  0D98  0BA5               	decfsz	??_lcd_init+1,f
  2808  0D99  2D96               	goto	u3507
  2809  0D9A                     l2112:	
  2810                           
  2811                           ;lcd.c: 98: lcd_write(0x02);
  2812  0D9A  3002               	movlw	2
  2813  0D9B  120A  158A  2372  120A  158A  	fcall	_lcd_write
  2814  0DA0                     l2114:	
  2815                           
  2816                           ;lcd.c: 99: _delay((unsigned long)((2)*(20000000/4000.0)));
  2817  0DA0  300D               	movlw	13
  2818  0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  2819  0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  2820  0DA3  00A5               	movwf	??_lcd_init+1
  2821  0DA4  30FB               	movlw	251
  2822  0DA5  00A4               	movwf	??_lcd_init
  2823  0DA6                     u3517:	
  2824  0DA6  0BA4               	decfsz	??_lcd_init,f
  2825  0DA7  2DA6               	goto	u3517
  2826  0DA8  0BA5               	decfsz	??_lcd_init+1,f
  2827  0DA9  2DA6               	goto	u3517
  2828  0DAA                     l2116:	
  2829                           
  2830                           ;lcd.c: 100: lcd_write(0x28);
  2831  0DAA  3028               	movlw	40
  2832  0DAB  120A  158A  2372  120A  158A  	fcall	_lcd_write
  2833  0DB0                     l2118:	
  2834                           
  2835                           ;lcd.c: 101: lcd_write(0x08);
  2836  0DB0  3008               	movlw	8
  2837  0DB1  120A  158A  2372  120A  158A  	fcall	_lcd_write
  2838  0DB6                     l2120:	
  2839                           
  2840                           ;lcd.c: 102: lcd_write(0x0f);
  2841  0DB6  300F               	movlw	15
  2842  0DB7  120A  158A  2372  120A  158A  	fcall	_lcd_write
  2843  0DBC                     l2122:	
  2844                           
  2845                           ;lcd.c: 103: lcd_write(0x06);
  2846  0DBC  3006               	movlw	6
  2847  0DBD  120A  158A  2372  120A  158A  	fcall	_lcd_write
  2848  0DC2                     l71:	
  2849  0DC2  0008               	return
  2850  0DC3                     __end_of_lcd_init:	
  2851                           
  2852                           	psect	text10
  2853  0A7C                     __ptext10:	
  2854 ;; *************** function _LCD_RW_SetLow *****************
  2855 ;; Defined at:
  2856 ;;		line 25 in file "lcd.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;		None
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;		None
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  1    wreg      void 
  2863 ;; Registers used:
  2864 ;;		None
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2870 ;;      Params:         0       0       0       0       0
  2871 ;;      Locals:         0       0       0       0       0
  2872 ;;      Temps:          0       0       0       0       0
  2873 ;;      Totals:         0       0       0       0       0
  2874 ;;Total ram usage:        0 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; Hardware stack levels required when called:    2
  2877 ;; This function calls:
  2878 ;;		Nothing
  2879 ;; This function is called by:
  2880 ;;		_lcd_init
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           
  2885                           ;psect for function _LCD_RW_SetLow
  2886  0A7C                     _LCD_RW_SetLow:	
  2887  0A7C                     l1792:	
  2888                           ;incstack = 0
  2889                           ; Regs used in _LCD_RW_SetLow: []
  2890                           
  2891  0A7C  1283               	bcf	3,5	;RP0=0, select bank0
  2892  0A7D  1303               	bcf	3,6	;RP1=0, select bank0
  2893  0A7E  1185               	bcf	5,3	;volatile
  2894  0A7F                     l39:	
  2895  0A7F  0008               	return
  2896  0A80                     __end_of_LCD_RW_SetLow:	
  2897                           
  2898                           	psect	text11
  2899  0ABB                     __ptext11:	
  2900 ;; *************** function _lcd_goto *****************
  2901 ;; Defined at:
  2902 ;;		line 59 in file "lcd.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  pos             1    wreg     unsigned char 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  pos             1    4[BANK0 ] unsigned char 
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      void 
  2909 ;; Registers used:
  2910 ;;		wreg, status,2, status,0, pclath, cstack
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2916 ;;      Params:         0       0       0       0       0
  2917 ;;      Locals:         0       1       0       0       0
  2918 ;;      Temps:          0       0       0       0       0
  2919 ;;      Totals:         0       1       0       0       0
  2920 ;;Total ram usage:        1 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:    4
  2923 ;; This function calls:
  2924 ;;		_LCD_RS_SetLow
  2925 ;;		_lcd_write
  2926 ;; This function is called by:
  2927 ;;		_main
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           
  2932                           ;psect for function _lcd_goto
  2933  0ABB                     _lcd_goto:	
  2934                           
  2935                           ;incstack = 0
  2936                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  2937                           ;lcd_goto@pos stored from wreg
  2938  0ABB  1283               	bcf	3,5	;RP0=0, select bank0
  2939  0ABC  1303               	bcf	3,6	;RP1=0, select bank0
  2940  0ABD  00A4               	movwf	lcd_goto@pos
  2941  0ABE                     l2088:	
  2942                           
  2943                           ;lcd.c: 60: LCD_RS_SetLow();
  2944  0ABE  120A  158A  2278  120A  158A  	fcall	_LCD_RS_SetLow
  2945  0AC3                     l2090:	
  2946                           
  2947                           ;lcd.c: 61: lcd_write(0x80 + pos);
  2948  0AC3  1283               	bcf	3,5	;RP0=0, select bank0
  2949  0AC4  1303               	bcf	3,6	;RP1=0, select bank0
  2950  0AC5  0824               	movf	lcd_goto@pos,w
  2951  0AC6  3E80               	addlw	128
  2952  0AC7  120A  158A  2372  120A  158A  	fcall	_lcd_write
  2953  0ACC                     l60:	
  2954  0ACC  0008               	return
  2955  0ACD                     __end_of_lcd_goto:	
  2956                           
  2957                           	psect	text12
  2958  0AFC                     __ptext12:	
  2959 ;; *************** function _lcd_cursor *****************
  2960 ;; Defined at:
  2961 ;;		line 68 in file "lcd.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  on              2    4[BANK0 ] int 
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2, status,0, pclath, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2975 ;;      Params:         0       2       0       0       0
  2976 ;;      Locals:         0       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0
  2978 ;;      Totals:         0       2       0       0       0
  2979 ;;Total ram usage:        2 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; Hardware stack levels required when called:    4
  2982 ;; This function calls:
  2983 ;;		_LCD_RS_SetLow
  2984 ;;		_lcd_write
  2985 ;; This function is called by:
  2986 ;;		_main
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           
  2991                           ;psect for function _lcd_cursor
  2992  0AFC                     _lcd_cursor:	
  2993  0AFC                     l2092:	
  2994                           ;incstack = 0
  2995                           ; Regs used in _lcd_cursor: [wreg+status,2+status,0+pclath+cstack]
  2996                           
  2997                           
  2998                           ;lcd.c: 69: LCD_RS_SetLow();
  2999  0AFC  120A  158A  2278  120A  158A  	fcall	_LCD_RS_SetLow
  3000  0B01                     l2094:	
  3001                           
  3002                           ;lcd.c: 70: if (on) {
  3003  0B01  1283               	bcf	3,5	;RP0=0, select bank0
  3004  0B02  1303               	bcf	3,6	;RP1=0, select bank0
  3005  0B03  0824               	movf	lcd_cursor@on,w
  3006  0B04  0425               	iorwf	lcd_cursor@on+1,w
  3007  0B05  1903               	btfsc	3,2
  3008  0B06  2B08               	goto	u2561
  3009  0B07  2B09               	goto	u2560
  3010  0B08                     u2561:	
  3011  0B08  2B10               	goto	l2098
  3012  0B09                     u2560:	
  3013  0B09                     l2096:	
  3014                           
  3015                           ;lcd.c: 71: lcd_write(0x0f);
  3016  0B09  300F               	movlw	15
  3017  0B0A  120A  158A  2372  120A  158A  	fcall	_lcd_write
  3018                           
  3019                           ;lcd.c: 72: } else {
  3020  0B0F  2B16               	goto	l65
  3021  0B10                     l2098:	
  3022                           
  3023                           ;lcd.c: 73: lcd_write(0x0c);
  3024  0B10  300C               	movlw	12
  3025  0B11  120A  158A  2372  120A  158A  	fcall	_lcd_write
  3026  0B16                     l65:	
  3027  0B16  0008               	return
  3028  0B17                     __end_of_lcd_cursor:	
  3029                           
  3030                           	psect	text13
  3031  0B72                     __ptext13:	
  3032 ;; *************** function _lcd_write *****************
  3033 ;; Defined at:
  3034 ;;		line 38 in file "lcd.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  c               1    wreg     unsigned char 
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;  c               1    3[BANK0 ] unsigned char 
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2, status,0, pclath, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3048 ;;      Params:         0       0       0       0       0
  3049 ;;      Locals:         0       1       0       0       0
  3050 ;;      Temps:          0       1       0       0       0
  3051 ;;      Totals:         0       2       0       0       0
  3052 ;;Total ram usage:        2 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:    3
  3055 ;; This function calls:
  3056 ;;		_lcd_write_nibble
  3057 ;; This function is called by:
  3058 ;;		_lcd_puts
  3059 ;;		_lcd_goto
  3060 ;;		_lcd_cursor
  3061 ;;		_lcd_init
  3062 ;;		_lcd_clear
  3063 ;;		_lcd_putchar
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           
  3068                           ;psect for function _lcd_write
  3069  0B72                     _lcd_write:	
  3070                           
  3071                           ;incstack = 0
  3072                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  3073                           ;lcd_write@c stored from wreg
  3074  0B72  1283               	bcf	3,5	;RP0=0, select bank0
  3075  0B73  1303               	bcf	3,6	;RP1=0, select bank0
  3076  0B74  00A3               	movwf	lcd_write@c
  3077  0B75                     l1794:	
  3078                           
  3079                           ;lcd.c: 39: lcd_write_nibble(c >> 4);
  3080  0B75  0823               	movf	lcd_write@c,w
  3081  0B76  00A2               	movwf	??_lcd_write
  3082  0B77  3004               	movlw	4
  3083  0B78                     u1865:	
  3084  0B78  1003               	clrc
  3085  0B79  0CA2               	rrf	??_lcd_write,f
  3086  0B7A  3EFF               	addlw	-1
  3087  0B7B  1D03               	skipz
  3088  0B7C  2B78               	goto	u1865
  3089  0B7D  0822               	movf	??_lcd_write,w
  3090  0B7E  120A  158A  2521  120A  158A  	fcall	_lcd_write_nibble
  3091                           
  3092                           ;lcd.c: 40: lcd_write_nibble(c);
  3093  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  3094  0B84  1303               	bcf	3,6	;RP1=0, select bank0
  3095  0B85  0823               	movf	lcd_write@c,w
  3096  0B86  120A  158A  2521  120A  158A  	fcall	_lcd_write_nibble
  3097  0B8B                     l1796:	
  3098                           
  3099                           ;lcd.c: 41: _delay((unsigned long)((40)*(20000000/4000000.0)));
  3100  0B8B  3041               	movlw	65
  3101  0B8C  1283               	bcf	3,5	;RP0=0, select bank0
  3102  0B8D  1303               	bcf	3,6	;RP1=0, select bank0
  3103  0B8E  00A2               	movwf	??_lcd_write
  3104  0B8F                     u3527:	
  3105  0B8F  0BA2               	decfsz	??_lcd_write,f
  3106  0B90  2B8F               	goto	u3527
  3107  0B91  2B92               	nop2
  3108  0B92                     l48:	
  3109  0B92  0008               	return
  3110  0B93                     __end_of_lcd_write:	
  3111                           
  3112                           	psect	text14
  3113  0D21                     __ptext14:	
  3114 ;; *************** function _lcd_write_nibble *****************
  3115 ;; Defined at:
  3116 ;;		line 28 in file "lcd.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  c               1    wreg     unsigned char 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  c               1    1[BANK0 ] unsigned char 
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  1    wreg      void 
  3123 ;; Registers used:
  3124 ;;		wreg, status,2, status,0
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3130 ;;      Params:         0       0       0       0       0
  3131 ;;      Locals:         0       1       0       0       0
  3132 ;;      Temps:          0       1       0       0       0
  3133 ;;      Totals:         0       2       0       0       0
  3134 ;;Total ram usage:        2 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:    2
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_lcd_write
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           
  3145                           ;psect for function _lcd_write_nibble
  3146  0D21                     _lcd_write_nibble:	
  3147                           
  3148                           ;incstack = 0
  3149                           ; Regs used in _lcd_write_nibble: [wreg+status,2+status,0]
  3150                           ;lcd_write_nibble@c stored from wreg
  3151  0D21  1283               	bcf	3,5	;RP0=0, select bank0
  3152  0D22  1303               	bcf	3,6	;RP1=0, select bank0
  3153  0D23  00A1               	movwf	lcd_write_nibble@c
  3154  0D24                     l1776:	
  3155                           
  3156                           ;lcd.c: 29: RC0 = (c & 0b00000001) >> 0;
  3157  0D24  1821               	btfsc	lcd_write_nibble@c,0
  3158  0D25  2D27               	goto	u1751
  3159  0D26  2D2B               	goto	u1750
  3160  0D27                     u1751:	
  3161  0D27  1283               	bcf	3,5	;RP0=0, select bank0
  3162  0D28  1303               	bcf	3,6	;RP1=0, select bank0
  3163  0D29  1407               	bsf	7,0	;volatile
  3164  0D2A  2D2E               	goto	u1764
  3165  0D2B                     u1750:	
  3166  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  3167  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  3168  0D2D  1007               	bcf	7,0	;volatile
  3169  0D2E                     u1764:	
  3170  0D2E                     l1778:	
  3171                           
  3172                           ;lcd.c: 30: RC3 = (c & 0b00000010) >> 1;
  3173  0D2E  0821               	movf	lcd_write_nibble@c,w
  3174  0D2F  00A0               	movwf	??_lcd_write_nibble
  3175  0D30  3001               	movlw	1
  3176  0D31                     u1775:	
  3177  0D31  1003               	clrc
  3178  0D32  0CA0               	rrf	??_lcd_write_nibble,f
  3179  0D33  3EFF               	addlw	-1
  3180  0D34  1D03               	skipz
  3181  0D35  2D31               	goto	u1775
  3182  0D36  1820               	btfsc	??_lcd_write_nibble,0
  3183  0D37  2D39               	goto	u1781
  3184  0D38  2D3D               	goto	u1780
  3185  0D39                     u1781:	
  3186  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3187  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3188  0D3B  1587               	bsf	7,3	;volatile
  3189  0D3C  2D40               	goto	u1794
  3190  0D3D                     u1780:	
  3191  0D3D  1283               	bcf	3,5	;RP0=0, select bank0
  3192  0D3E  1303               	bcf	3,6	;RP1=0, select bank0
  3193  0D3F  1187               	bcf	7,3	;volatile
  3194  0D40                     u1794:	
  3195                           
  3196                           ;lcd.c: 31: RC4 = (c & 0b00000100) >> 2;
  3197  0D40  0821               	movf	lcd_write_nibble@c,w
  3198  0D41  00A0               	movwf	??_lcd_write_nibble
  3199  0D42  3002               	movlw	2
  3200  0D43                     u1805:	
  3201  0D43  1003               	clrc
  3202  0D44  0CA0               	rrf	??_lcd_write_nibble,f
  3203  0D45  3EFF               	addlw	-1
  3204  0D46  1D03               	skipz
  3205  0D47  2D43               	goto	u1805
  3206  0D48  1820               	btfsc	??_lcd_write_nibble,0
  3207  0D49  2D4B               	goto	u1811
  3208  0D4A  2D4F               	goto	u1810
  3209  0D4B                     u1811:	
  3210  0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  3211  0D4C  1303               	bcf	3,6	;RP1=0, select bank0
  3212  0D4D  1607               	bsf	7,4	;volatile
  3213  0D4E  2D52               	goto	u1824
  3214  0D4F                     u1810:	
  3215  0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  3216  0D50  1303               	bcf	3,6	;RP1=0, select bank0
  3217  0D51  1207               	bcf	7,4	;volatile
  3218  0D52                     u1824:	
  3219                           
  3220                           ;lcd.c: 32: RC5 = (c & 0b00001000) >> 3;
  3221  0D52  0821               	movf	lcd_write_nibble@c,w
  3222  0D53  00A0               	movwf	??_lcd_write_nibble
  3223  0D54  3003               	movlw	3
  3224  0D55                     u1835:	
  3225  0D55  1003               	clrc
  3226  0D56  0CA0               	rrf	??_lcd_write_nibble,f
  3227  0D57  3EFF               	addlw	-1
  3228  0D58  1D03               	skipz
  3229  0D59  2D55               	goto	u1835
  3230  0D5A  1820               	btfsc	??_lcd_write_nibble,0
  3231  0D5B  2D5D               	goto	u1841
  3232  0D5C  2D61               	goto	u1840
  3233  0D5D                     u1841:	
  3234  0D5D  1283               	bcf	3,5	;RP0=0, select bank0
  3235  0D5E  1303               	bcf	3,6	;RP1=0, select bank0
  3236  0D5F  1687               	bsf	7,5	;volatile
  3237  0D60  2D64               	goto	u1854
  3238  0D61                     u1840:	
  3239  0D61  1283               	bcf	3,5	;RP0=0, select bank0
  3240  0D62  1303               	bcf	3,6	;RP1=0, select bank0
  3241  0D63  1287               	bcf	7,5	;volatile
  3242  0D64                     u1854:	
  3243  0D64                     l1780:	
  3244                           
  3245                           ;lcd.c: 34: ((RB0 = 1),(RB0 = 1),(RB0 = 1),(RB0 = 0));
  3246  0D64  1406               	bsf	6,0	;volatile
  3247  0D65                     l1782:	
  3248  0D65  1406               	bsf	6,0	;volatile
  3249  0D66                     l1784:	
  3250  0D66  1406               	bsf	6,0	;volatile
  3251  0D67                     l1786:	
  3252  0D67  1006               	bcf	6,0	;volatile
  3253  0D68                     l45:	
  3254  0D68  0008               	return
  3255  0D69                     __end_of_lcd_write_nibble:	
  3256                           
  3257                           	psect	text15
  3258  0A78                     __ptext15:	
  3259 ;; *************** function _LCD_RS_SetLow *****************
  3260 ;; Defined at:
  3261 ;;		line 23 in file "lcd.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		None
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3275 ;;      Params:         0       0       0       0       0
  3276 ;;      Locals:         0       0       0       0       0
  3277 ;;      Temps:          0       0       0       0       0
  3278 ;;      Totals:         0       0       0       0       0
  3279 ;;Total ram usage:        0 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    2
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_lcd_goto
  3286 ;;		_lcd_cursor
  3287 ;;		_lcd_init
  3288 ;;		_lcd_clear
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           
  3293                           ;psect for function _LCD_RS_SetLow
  3294  0A78                     _LCD_RS_SetLow:	
  3295  0A78                     l1788:	
  3296                           ;incstack = 0
  3297                           ; Regs used in _LCD_RS_SetLow: []
  3298                           
  3299  0A78  1283               	bcf	3,5	;RP0=0, select bank0
  3300  0A79  1303               	bcf	3,6	;RP1=0, select bank0
  3301  0A7A  1105               	bcf	5,2	;volatile
  3302  0A7B                     l33:	
  3303  0A7B  0008               	return
  3304  0A7C                     __end_of_LCD_RS_SetLow:	
  3305                           
  3306                           	psect	text16
  3307  0AAA                     __ptext16:	
  3308 ;; *************** function _io_sw_pressed *****************
  3309 ;; Defined at:
  3310 ;;		line 58 in file "io.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  2    0[BANK0 ] int 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3324 ;;      Params:         0       2       0       0       0
  3325 ;;      Locals:         0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0
  3327 ;;      Totals:         0       2       0       0       0
  3328 ;;Total ram usage:        2 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    2
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_main
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           
  3339                           ;psect for function _io_sw_pressed
  3340  0AAA                     _io_sw_pressed:	
  3341  0AAA                     l2168:	
  3342                           ;incstack = 0
  3343                           ; Regs used in _io_sw_pressed: [wreg+status,2]
  3344                           
  3345                           
  3346                           ;io.c: 59: if (swPressed) {
  3347  0AAA  1C79               	btfss	_swPressed/(0+8),_swPressed& (0+7)	;volatile
  3348  0AAB  2AAD               	goto	u2611
  3349  0AAC  2AAE               	goto	u2610
  3350  0AAD                     u2611:	
  3351  0AAD  2AB6               	goto	l2176
  3352  0AAE                     u2610:	
  3353  0AAE                     l2170:	
  3354                           
  3355                           ;io.c: 60: swPressed = 0;
  3356  0AAE  1079               	bcf	_swPressed/(0+8),_swPressed& (0+7)	;volatile
  3357  0AAF                     l2172:	
  3358                           
  3359                           ;io.c: 61: return 1;
  3360  0AAF  3001               	movlw	1
  3361  0AB0  1283               	bcf	3,5	;RP0=0, select bank0
  3362  0AB1  1303               	bcf	3,6	;RP1=0, select bank0
  3363  0AB2  00A0               	movwf	?_io_sw_pressed
  3364  0AB3  3000               	movlw	0
  3365  0AB4  00A1               	movwf	?_io_sw_pressed+1
  3366  0AB5  2ABA               	goto	l201
  3367  0AB6                     l2176:	
  3368                           
  3369                           ;io.c: 62: };io.c: 63: return 0;
  3370  0AB6  1283               	bcf	3,5	;RP0=0, select bank0
  3371  0AB7  1303               	bcf	3,6	;RP1=0, select bank0
  3372  0AB8  01A0               	clrf	?_io_sw_pressed
  3373  0AB9  01A1               	clrf	?_io_sw_pressed+1
  3374  0ABA                     l201:	
  3375  0ABA  0008               	return
  3376  0ABB                     __end_of_io_sw_pressed:	
  3377                           
  3378                           	psect	text17
  3379  0A80                     __ptext17:	
  3380 ;; *************** function _io_led_toggle *****************
  3381 ;; Defined at:
  3382 ;;		line 36 in file "io.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;		None
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3396 ;;      Params:         0       0       0       0       0
  3397 ;;      Locals:         0       0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0
  3399 ;;      Totals:         0       0       0       0       0
  3400 ;;Total ram usage:        0 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:    2
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_main
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           
  3411                           ;psect for function _io_led_toggle
  3412  0A80                     _io_led_toggle:	
  3413  0A80                     l2180:	
  3414                           ;incstack = 0
  3415                           ; Regs used in _io_led_toggle: [wreg]
  3416                           
  3417                           
  3418                           ;io.c: 37: RB5 = ~RB5;
  3419  0A80  3020               	movlw	32
  3420  0A81  1283               	bcf	3,5	;RP0=0, select bank0
  3421  0A82  1303               	bcf	3,6	;RP1=0, select bank0
  3422  0A83  0686               	xorwf	6,f
  3423  0A84                     l185:	
  3424  0A84  0008               	return
  3425  0A85                     __end_of_io_led_toggle:	
  3426                           
  3427                           	psect	text18
  3428  0A9B                     __ptext18:	
  3429 ;; *************** function _io_init *****************
  3430 ;; Defined at:
  3431 ;;		line 17 in file "io.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;		None
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;		None
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  1    wreg      void 
  3438 ;; Registers used:
  3439 ;;		None
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3445 ;;      Params:         0       0       0       0       0
  3446 ;;      Locals:         0       0       0       0       0
  3447 ;;      Temps:          0       0       0       0       0
  3448 ;;      Totals:         0       0       0       0       0
  3449 ;;Total ram usage:        0 bytes
  3450 ;; Hardware stack levels used:    1
  3451 ;; Hardware stack levels required when called:    2
  3452 ;; This function calls:
  3453 ;;		Nothing
  3454 ;; This function is called by:
  3455 ;;		_main
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           
  3460                           ;psect for function _io_init
  3461  0A9B                     _io_init:	
  3462  0A9B                     l2156:	
  3463                           ;incstack = 0
  3464                           ; Regs used in _io_init: []
  3465                           
  3466                           
  3467                           ;io.c: 18: TRISB5 = 0;
  3468  0A9B  1683               	bsf	3,5	;RP0=1, select bank1
  3469  0A9C  1303               	bcf	3,6	;RP1=0, select bank1
  3470  0A9D  1286               	bcf	6,5	;volatile
  3471                           
  3472                           ;io.c: 19: ANS13 = 0;
  3473  0A9E  1683               	bsf	3,5	;RP0=1, select bank3
  3474  0A9F  1703               	bsf	3,6	;RP1=1, select bank3
  3475  0AA0  1289               	bcf	9,5	;volatile
  3476                           
  3477                           ;io.c: 20: TRISB7 = 0;
  3478  0AA1  1683               	bsf	3,5	;RP0=1, select bank1
  3479  0AA2  1303               	bcf	3,6	;RP1=0, select bank1
  3480  0AA3  1386               	bcf	6,7	;volatile
  3481                           
  3482                           ;io.c: 21: TRISB6 = 1;
  3483  0AA4  1706               	bsf	6,6	;volatile
  3484                           
  3485                           ;io.c: 22: nRBPU = 0;
  3486  0AA5  1381               	bcf	1,7	;volatile
  3487                           
  3488                           ;io.c: 23: WPUB6 = 1;
  3489  0AA6  1715               	bsf	21,6	;volatile
  3490                           
  3491                           ;io.c: 24: IOCB6 = 1;
  3492  0AA7  1716               	bsf	22,6	;volatile
  3493                           
  3494                           ;io.c: 25: RBIE = 1;
  3495  0AA8  158B               	bsf	11,3	;volatile
  3496  0AA9                     l176:	
  3497  0AA9  0008               	return
  3498  0AAA                     __end_of_io_init:	
  3499                           
  3500                           	psect	text19
  3501  0C34                     __ptext19:	
  3502 ;; *************** function _io_beep *****************
  3503 ;; Defined at:
  3504 ;;		line 40 in file "io.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  period          2    0[BANK0 ] int 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;		None
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  1    wreg      void 
  3511 ;; Registers used:
  3512 ;;		wreg, btemp+1
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3518 ;;      Params:         0       2       0       0       0
  3519 ;;      Locals:         0       0       0       0       0
  3520 ;;      Temps:          0       2       0       0       0
  3521 ;;      Totals:         0       4       0       0       0
  3522 ;;Total ram usage:        4 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:    2
  3525 ;; This function calls:
  3526 ;;		Nothing
  3527 ;; This function is called by:
  3528 ;;		_main
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           
  3533                           ;psect for function _io_beep
  3534  0C34                     _io_beep:	
  3535  0C34                     l2160:	
  3536                           ;incstack = 0
  3537                           ; Regs used in _io_beep: [wreg+btemp+1]
  3538                           
  3539                           
  3540                           ;io.c: 41: while (period-- > 0) {
  3541  0C34  2C51               	goto	l2166
  3542  0C35                     l189:	
  3543                           
  3544                           ;io.c: 42: RB7 = 1;
  3545  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  3546  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  3547  0C37  1786               	bsf	6,7	;volatile
  3548  0C38                     l2162:	
  3549                           
  3550                           ;io.c: 43: _delay((unsigned long)((4)*(20000000/4000.0)));
  3551  0C38  301A               	movlw	26
  3552  0C39  1283               	bcf	3,5	;RP0=0, select bank0
  3553  0C3A  1303               	bcf	3,6	;RP1=0, select bank0
  3554  0C3B  00A3               	movwf	??_io_beep+1
  3555  0C3C  30F7               	movlw	247
  3556  0C3D  00A2               	movwf	??_io_beep
  3557  0C3E                     u3537:	
  3558  0C3E  0BA2               	decfsz	??_io_beep,f
  3559  0C3F  2C3E               	goto	u3537
  3560  0C40  0BA3               	decfsz	??_io_beep+1,f
  3561  0C41  2C3E               	goto	u3537
  3562  0C42  2C43               	nop2
  3563  0C43                     l2164:	
  3564                           
  3565                           ;io.c: 44: RB7 = 0;
  3566  0C43  1283               	bcf	3,5	;RP0=0, select bank0
  3567  0C44  1303               	bcf	3,6	;RP1=0, select bank0
  3568  0C45  1386               	bcf	6,7	;volatile
  3569                           
  3570                           ;io.c: 45: _delay((unsigned long)((4)*(20000000/4000.0)));
  3571  0C46  301A               	movlw	26
  3572  0C47  1283               	bcf	3,5	;RP0=0, select bank0
  3573  0C48  1303               	bcf	3,6	;RP1=0, select bank0
  3574  0C49  00A3               	movwf	??_io_beep+1
  3575  0C4A  30F7               	movlw	247
  3576  0C4B  00A2               	movwf	??_io_beep
  3577  0C4C                     u3547:	
  3578  0C4C  0BA2               	decfsz	??_io_beep,f
  3579  0C4D  2C4C               	goto	u3547
  3580  0C4E  0BA3               	decfsz	??_io_beep+1,f
  3581  0C4F  2C4C               	goto	u3547
  3582  0C50  2C51               	nop2
  3583  0C51                     l2166:	
  3584  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  3585  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  3586  0C53  0821               	movf	io_beep@period+1,w
  3587  0C54  00A3               	movwf	??_io_beep+1
  3588  0C55  03A0               	decf	io_beep@period,f
  3589  0C56  0A20               	incf	io_beep@period,w
  3590  0C57  00A2               	movwf	??_io_beep
  3591  0C58  1903               	skipnz
  3592  0C59  03A1               	decf	io_beep@period+1,f
  3593  0C5A  0823               	movf	??_io_beep+1,w
  3594  0C5B  3A80               	xorlw	128
  3595  0C5C  00FF               	movwf	btemp+1
  3596  0C5D  3080               	movlw	128
  3597  0C5E  027F               	subwf	btemp+1,w
  3598  0C5F  1D03               	skipz
  3599  0C60  2C63               	goto	u2605
  3600  0C61  3001               	movlw	1
  3601  0C62  0222               	subwf	??_io_beep,w
  3602  0C63                     u2605:	
  3603  0C63  1803               	skipnc
  3604  0C64  2C66               	goto	u2601
  3605  0C65  2C67               	goto	u2600
  3606  0C66                     u2601:	
  3607  0C66  2C35               	goto	l189
  3608  0C67                     u2600:	
  3609  0C67                     l191:	
  3610  0C67  0008               	return
  3611  0C68                     __end_of_io_beep:	
  3612                           
  3613                           	psect	text20
  3614  0A85                     __ptext20:	
  3615 ;; *************** function _debug_init *****************
  3616 ;; Defined at:
  3617 ;;		line 14 in file "debug.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;		None
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;		None
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  1    wreg      void 
  3624 ;; Registers used:
  3625 ;;		None
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3631 ;;      Params:         0       0       0       0       0
  3632 ;;      Locals:         0       0       0       0       0
  3633 ;;      Temps:          0       0       0       0       0
  3634 ;;      Totals:         0       0       0       0       0
  3635 ;;Total ram usage:        0 bytes
  3636 ;; Hardware stack levels used:    1
  3637 ;; Hardware stack levels required when called:    2
  3638 ;; This function calls:
  3639 ;;		Nothing
  3640 ;; This function is called by:
  3641 ;;		_main
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           
  3646                           ;psect for function _debug_init
  3647  0A85                     _debug_init:	
  3648  0A85                     l2158:	
  3649                           ;incstack = 0
  3650                           ; Regs used in _debug_init: []
  3651                           
  3652                           
  3653                           ;debug.c: 15: TRISA4 = 0;
  3654  0A85  1683               	bsf	3,5	;RP0=1, select bank1
  3655  0A86  1303               	bcf	3,6	;RP1=0, select bank1
  3656  0A87  1205               	bcf	5,4	;volatile
  3657                           
  3658                           ;debug.c: 16: TRISB2 = 0;
  3659  0A88  1106               	bcf	6,2	;volatile
  3660                           
  3661                           ;debug.c: 17: TRISB1 = 0;
  3662  0A89  1086               	bcf	6,1	;volatile
  3663                           
  3664                           ;debug.c: 19: ANS8 = 0;
  3665  0A8A  1683               	bsf	3,5	;RP0=1, select bank3
  3666  0A8B  1703               	bsf	3,6	;RP1=1, select bank3
  3667  0A8C  1009               	bcf	9,0	;volatile
  3668                           
  3669                           ;debug.c: 20: ANS12 = 0;
  3670  0A8D  1209               	bcf	9,4	;volatile
  3671  0A8E                     l220:	
  3672  0A8E  0008               	return
  3673  0A8F                     __end_of_debug_init:	
  3674                           
  3675                           	psect	text21
  3676  0AE1                     __ptext21:	
  3677 ;; *************** function _adc_read_0 *****************
  3678 ;; Defined at:
  3679 ;;		line 29 in file "adc.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  distancia       2    2[BANK0 ] int 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  2    0[BANK0 ] unsigned int 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3693 ;;      Params:         0       2       0       0       0
  3694 ;;      Locals:         0       2       0       0       0
  3695 ;;      Temps:          0       0       0       0       0
  3696 ;;      Totals:         0       4       0       0       0
  3697 ;;Total ram usage:        4 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    2
  3700 ;; This function calls:
  3701 ;;		Nothing
  3702 ;; This function is called by:
  3703 ;;		_main
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           
  3708                           ;psect for function _adc_read_0
  3709  0AE1                     _adc_read_0:	
  3710  0AE1                     l2182:	
  3711                           ;incstack = 0
  3712                           ; Regs used in _adc_read_0: [wreg+status,2]
  3713                           
  3714                           
  3715                           ;adc.c: 30: GO = 1;
  3716  0AE1  1283               	bcf	3,5	;RP0=0, select bank0
  3717  0AE2  1303               	bcf	3,6	;RP1=0, select bank0
  3718  0AE3  149F               	bsf	31,1	;volatile
  3719  0AE4                     l281:	
  3720                           ;adc.c: 31: while (!ADIF);
  3721                           
  3722  0AE4  1F0C               	btfss	12,6	;volatile
  3723  0AE5  2AE7               	goto	u2621
  3724  0AE6  2AE8               	goto	u2620
  3725  0AE7                     u2621:	
  3726  0AE7  2AE4               	goto	l281
  3727  0AE8                     u2620:	
  3728  0AE8                     l2184:	
  3729                           
  3730                           ;adc.c: 32: int distancia= ADRESH*256+ADRESL;
  3731  0AE8  081E               	movf	30,w	;volatile
  3732  0AE9  00A3               	movwf	adc_read_0@distancia+1
  3733  0AEA  1683               	bsf	3,5	;RP0=1, select bank1
  3734  0AEB  1303               	bcf	3,6	;RP1=0, select bank1
  3735  0AEC  081E               	movf	30,w	;volatile
  3736  0AED  1283               	bcf	3,5	;RP0=0, select bank0
  3737  0AEE  1303               	bcf	3,6	;RP1=0, select bank0
  3738  0AEF  00A2               	movwf	adc_read_0@distancia
  3739  0AF0                     l2186:	
  3740                           
  3741                           ;adc.c: 33: ADRESH=0;
  3742  0AF0  019E               	clrf	30	;volatile
  3743  0AF1                     l2188:	
  3744                           
  3745                           ;adc.c: 34: ADRESL=0;
  3746  0AF1  1683               	bsf	3,5	;RP0=1, select bank1
  3747  0AF2  1303               	bcf	3,6	;RP1=0, select bank1
  3748  0AF3  019E               	clrf	30	;volatile
  3749  0AF4                     l2190:	
  3750                           
  3751                           ;adc.c: 35: ADIF=0;
  3752  0AF4  1283               	bcf	3,5	;RP0=0, select bank0
  3753  0AF5  1303               	bcf	3,6	;RP1=0, select bank0
  3754  0AF6  130C               	bcf	12,6	;volatile
  3755                           
  3756                           ;adc.c: 37: return distancia;
  3757  0AF7  0823               	movf	adc_read_0@distancia+1,w
  3758  0AF8  00A1               	movwf	?_adc_read_0+1
  3759  0AF9  0822               	movf	adc_read_0@distancia,w
  3760  0AFA  00A0               	movwf	?_adc_read_0
  3761  0AFB                     l284:	
  3762  0AFB  0008               	return
  3763  0AFC                     __end_of_adc_read_0:	
  3764                           
  3765                           	psect	text22
  3766  0B52                     __ptext22:	
  3767 ;; *************** function _adc_init_0 *****************
  3768 ;; Defined at:
  3769 ;;		line 14 in file "adc.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;		None
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;		None
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1    wreg      void 
  3776 ;; Registers used:
  3777 ;;		wreg, status,2, status,0
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3783 ;;      Params:         0       0       0       0       0
  3784 ;;      Locals:         0       0       0       0       0
  3785 ;;      Temps:          0       1       0       0       0
  3786 ;;      Totals:         0       1       0       0       0
  3787 ;;Total ram usage:        1 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    2
  3790 ;; This function calls:
  3791 ;;		Nothing
  3792 ;; This function is called by:
  3793 ;;		_main
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           
  3798                           ;psect for function _adc_init_0
  3799  0B52                     _adc_init_0:	
  3800  0B52                     l2146:	
  3801                           ;incstack = 0
  3802                           ; Regs used in _adc_init_0: [wreg+status,2+status,0]
  3803                           
  3804                           
  3805                           ;adc.c: 15: TRISA0 = 1;
  3806  0B52  1683               	bsf	3,5	;RP0=1, select bank1
  3807  0B53  1303               	bcf	3,6	;RP1=0, select bank1
  3808  0B54  1405               	bsf	5,0	;volatile
  3809                           
  3810                           ;adc.c: 16: ANS0 = 1;
  3811  0B55  1683               	bsf	3,5	;RP0=1, select bank3
  3812  0B56  1703               	bsf	3,6	;RP1=1, select bank3
  3813  0B57  1408               	bsf	8,0	;volatile
  3814                           
  3815                           ;adc.c: 17: ADCS1 = 1;
  3816  0B58  1283               	bcf	3,5	;RP0=0, select bank0
  3817  0B59  1303               	bcf	3,6	;RP1=0, select bank0
  3818  0B5A  179F               	bsf	31,7	;volatile
  3819                           
  3820                           ;adc.c: 18: ADCS0 = 0;
  3821  0B5B  131F               	bcf	31,6	;volatile
  3822                           
  3823                           ;adc.c: 19: VCFG1 = 0;
  3824  0B5C  1683               	bsf	3,5	;RP0=1, select bank1
  3825  0B5D  1303               	bcf	3,6	;RP1=0, select bank1
  3826  0B5E  129F               	bcf	31,5	;volatile
  3827                           
  3828                           ;adc.c: 20: VCFG0 = 0;
  3829  0B5F  121F               	bcf	31,4	;volatile
  3830  0B60                     l2148:	
  3831                           
  3832                           ;adc.c: 21: ADCON0bits.CHS=0;
  3833  0B60  30C3               	movlw	-61
  3834  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  3835  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  3836  0B63  059F               	andwf	31,f	;volatile
  3837  0B64                     l2150:	
  3838                           
  3839                           ;adc.c: 22: ADFM = 1;
  3840  0B64  1683               	bsf	3,5	;RP0=1, select bank1
  3841  0B65  1303               	bcf	3,6	;RP1=0, select bank1
  3842  0B66  179F               	bsf	31,7	;volatile
  3843  0B67                     l2152:	
  3844                           
  3845                           ;adc.c: 23: ADON = 1;
  3846  0B67  1283               	bcf	3,5	;RP0=0, select bank0
  3847  0B68  1303               	bcf	3,6	;RP1=0, select bank0
  3848  0B69  141F               	bsf	31,0	;volatile
  3849  0B6A                     l2154:	
  3850                           
  3851                           ;adc.c: 25: _delay((unsigned long)((5)*(20000000/4000000.0)));
  3852  0B6A  3007               	movlw	7
  3853  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  3854  0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  3855  0B6D  00A0               	movwf	??_adc_init_0
  3856  0B6E                     u3557:	
  3857  0B6E  0BA0               	decfsz	??_adc_init_0,f
  3858  0B6F  2B6E               	goto	u3557
  3859  0B70  0000               	nop
  3860  0B71                     l278:	
  3861  0B71  0008               	return
  3862  0B72                     __end_of_adc_init_0:	
  3863                           
  3864                           	psect	text23
  3865  0E3F                     __ptext23:	
  3866 ;; *************** function ___xxtofl *****************
  3867 ;; Defined at:
  3868 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  sign            1    wreg     unsigned char 
  3871 ;;  val             4    0[BANK0 ] long 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  sign            1    8[BANK0 ] unsigned char 
  3874 ;;  arg             4   10[BANK0 ] unsigned long 
  3875 ;;  exp             1    9[BANK0 ] unsigned char 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  4    0[BANK0 ] unsigned char 
  3878 ;; Registers used:
  3879 ;;		wreg, status,2, status,0
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3885 ;;      Params:         0       4       0       0       0
  3886 ;;      Locals:         0       6       0       0       0
  3887 ;;      Temps:          0       4       0       0       0
  3888 ;;      Totals:         0      14       0       0       0
  3889 ;;Total ram usage:       14 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; Hardware stack levels required when called:    2
  3892 ;; This function calls:
  3893 ;;		Nothing
  3894 ;; This function is called by:
  3895 ;;		_main
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           
  3900                           ;psect for function ___xxtofl
  3901  0E3F                     ___xxtofl:	
  3902                           
  3903                           ;incstack = 0
  3904                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3905                           ;___xxtofl@sign stored from wreg
  3906  0E3F  1283               	bcf	3,5	;RP0=0, select bank0
  3907  0E40  1303               	bcf	3,6	;RP1=0, select bank0
  3908  0E41  00A8               	movwf	___xxtofl@sign
  3909  0E42                     l2486:	
  3910  0E42  0828               	movf	___xxtofl@sign,w
  3911  0E43  1903               	btfsc	3,2
  3912  0E44  2E46               	goto	u3281
  3913  0E45  2E47               	goto	u3280
  3914  0E46                     u3281:	
  3915  0E46  2E5B               	goto	l2492
  3916  0E47                     u3280:	
  3917  0E47                     l2488:	
  3918  0E47  1FA3               	btfss	___xxtofl@val+3,7
  3919  0E48  2E4A               	goto	u3291
  3920  0E49  2E4B               	goto	u3290
  3921  0E4A                     u3291:	
  3922  0E4A  2E5B               	goto	l2492
  3923  0E4B                     u3290:	
  3924  0E4B                     l2490:	
  3925  0E4B  0920               	comf	___xxtofl@val,w
  3926  0E4C  00AA               	movwf	___xxtofl@arg
  3927  0E4D  0921               	comf	___xxtofl@val+1,w
  3928  0E4E  00AB               	movwf	___xxtofl@arg+1
  3929  0E4F  0922               	comf	___xxtofl@val+2,w
  3930  0E50  00AC               	movwf	___xxtofl@arg+2
  3931  0E51  0923               	comf	___xxtofl@val+3,w
  3932  0E52  00AD               	movwf	___xxtofl@arg+3
  3933  0E53  0AAA               	incf	___xxtofl@arg,f
  3934  0E54  1903               	skipnz
  3935  0E55  0AAB               	incf	___xxtofl@arg+1,f
  3936  0E56  1903               	skipnz
  3937  0E57  0AAC               	incf	___xxtofl@arg+2,f
  3938  0E58  1903               	skipnz
  3939  0E59  0AAD               	incf	___xxtofl@arg+3,f
  3940  0E5A  2E63               	goto	l848
  3941  0E5B                     l2492:	
  3942  0E5B  0823               	movf	___xxtofl@val+3,w
  3943  0E5C  00AD               	movwf	___xxtofl@arg+3
  3944  0E5D  0822               	movf	___xxtofl@val+2,w
  3945  0E5E  00AC               	movwf	___xxtofl@arg+2
  3946  0E5F  0821               	movf	___xxtofl@val+1,w
  3947  0E60  00AB               	movwf	___xxtofl@arg+1
  3948  0E61  0820               	movf	___xxtofl@val,w
  3949  0E62  00AA               	movwf	___xxtofl@arg
  3950  0E63                     l848:	
  3951  0E63  0823               	movf	___xxtofl@val+3,w
  3952  0E64  0422               	iorwf	___xxtofl@val+2,w
  3953  0E65  0421               	iorwf	___xxtofl@val+1,w
  3954  0E66  0420               	iorwf	___xxtofl@val,w
  3955  0E67  1D03               	skipz
  3956  0E68  2E6A               	goto	u3301
  3957  0E69  2E6B               	goto	u3300
  3958  0E6A                     u3301:	
  3959  0E6A  2E74               	goto	l2498
  3960  0E6B                     u3300:	
  3961  0E6B                     l2494:	
  3962  0E6B  3000               	movlw	0
  3963  0E6C  00A3               	movwf	?___xxtofl+3
  3964  0E6D  3000               	movlw	0
  3965  0E6E  00A2               	movwf	?___xxtofl+2
  3966  0E6F  3000               	movlw	0
  3967  0E70  00A1               	movwf	?___xxtofl+1
  3968  0E71  3000               	movlw	0
  3969  0E72  00A0               	movwf	?___xxtofl
  3970  0E73  2EFA               	goto	l850
  3971  0E74                     l2498:	
  3972  0E74  3096               	movlw	150
  3973  0E75  00A4               	movwf	??___xxtofl
  3974  0E76  0824               	movf	??___xxtofl,w
  3975  0E77  00A9               	movwf	___xxtofl@exp
  3976  0E78  2E86               	goto	l2502
  3977  0E79                     l2500:	
  3978  0E79  3001               	movlw	1
  3979  0E7A  00A4               	movwf	??___xxtofl
  3980  0E7B  0824               	movf	??___xxtofl,w
  3981  0E7C  07A9               	addwf	___xxtofl@exp,f
  3982  0E7D  3001               	movlw	1
  3983  0E7E                     u3315:	
  3984  0E7E  1003               	clrc
  3985  0E7F  0CAD               	rrf	___xxtofl@arg+3,f
  3986  0E80  0CAC               	rrf	___xxtofl@arg+2,f
  3987  0E81  0CAB               	rrf	___xxtofl@arg+1,f
  3988  0E82  0CAA               	rrf	___xxtofl@arg,f
  3989  0E83  3EFF               	addlw	-1
  3990  0E84  1D03               	skipz
  3991  0E85  2E7E               	goto	u3315
  3992  0E86                     l2502:	
  3993  0E86  30FE               	movlw	254
  3994  0E87  052D               	andwf	___xxtofl@arg+3,w
  3995  0E88  1D03               	btfss	3,2
  3996  0E89  2E8B               	goto	u3321
  3997  0E8A  2E8C               	goto	u3320
  3998  0E8B                     u3321:	
  3999  0E8B  2E79               	goto	l2500
  4000  0E8C                     u3320:	
  4001  0E8C  2EA8               	goto	l854
  4002  0E8D                     l2504:	
  4003  0E8D  3001               	movlw	1
  4004  0E8E  00A4               	movwf	??___xxtofl
  4005  0E8F  0824               	movf	??___xxtofl,w
  4006  0E90  07A9               	addwf	___xxtofl@exp,f
  4007  0E91                     l2506:	
  4008  0E91  3001               	movlw	1
  4009  0E92  07AA               	addwf	___xxtofl@arg,f
  4010  0E93  3000               	movlw	0
  4011  0E94  1803               	skipnc
  4012  0E95  3001               	movlw	1
  4013  0E96  07AB               	addwf	___xxtofl@arg+1,f
  4014  0E97  3000               	movlw	0
  4015  0E98  1803               	skipnc
  4016  0E99  3001               	movlw	1
  4017  0E9A  07AC               	addwf	___xxtofl@arg+2,f
  4018  0E9B  3000               	movlw	0
  4019  0E9C  1803               	skipnc
  4020  0E9D  3001               	movlw	1
  4021  0E9E  07AD               	addwf	___xxtofl@arg+3,f
  4022  0E9F                     l2508:	
  4023  0E9F  3001               	movlw	1
  4024  0EA0                     u3335:	
  4025  0EA0  1003               	clrc
  4026  0EA1  0CAD               	rrf	___xxtofl@arg+3,f
  4027  0EA2  0CAC               	rrf	___xxtofl@arg+2,f
  4028  0EA3  0CAB               	rrf	___xxtofl@arg+1,f
  4029  0EA4  0CAA               	rrf	___xxtofl@arg,f
  4030  0EA5  3EFF               	addlw	-1
  4031  0EA6  1D03               	skipz
  4032  0EA7  2EA0               	goto	u3335
  4033  0EA8                     l854:	
  4034  0EA8  30FF               	movlw	255
  4035  0EA9  052D               	andwf	___xxtofl@arg+3,w
  4036  0EAA  1D03               	btfss	3,2
  4037  0EAB  2EAD               	goto	u3341
  4038  0EAC  2EAE               	goto	u3340
  4039  0EAD                     u3341:	
  4040  0EAD  2E8D               	goto	l2504
  4041  0EAE                     u3340:	
  4042  0EAE  2EBA               	goto	l2512
  4043  0EAF                     l2510:	
  4044  0EAF  3001               	movlw	1
  4045  0EB0  02A9               	subwf	___xxtofl@exp,f
  4046  0EB1  3001               	movlw	1
  4047  0EB2  00A4               	movwf	??___xxtofl
  4048  0EB3                     u3355:	
  4049  0EB3  1003               	clrc
  4050  0EB4  0DAA               	rlf	___xxtofl@arg,f
  4051  0EB5  0DAB               	rlf	___xxtofl@arg+1,f
  4052  0EB6  0DAC               	rlf	___xxtofl@arg+2,f
  4053  0EB7  0DAD               	rlf	___xxtofl@arg+3,f
  4054  0EB8  0BA4               	decfsz	??___xxtofl,f
  4055  0EB9  2EB3               	goto	u3355
  4056  0EBA                     l2512:	
  4057  0EBA  1BAC               	btfsc	___xxtofl@arg+2,7
  4058  0EBB  2EBD               	goto	u3361
  4059  0EBC  2EBE               	goto	u3360
  4060  0EBD                     u3361:	
  4061  0EBD  2EC4               	goto	l861
  4062  0EBE                     u3360:	
  4063  0EBE                     l2514:	
  4064  0EBE  3002               	movlw	2
  4065  0EBF  0229               	subwf	___xxtofl@exp,w
  4066  0EC0  1803               	skipnc
  4067  0EC1  2EC3               	goto	u3371
  4068  0EC2  2EC4               	goto	u3370
  4069  0EC3                     u3371:	
  4070  0EC3  2EAF               	goto	l2510
  4071  0EC4                     u3370:	
  4072  0EC4                     l861:	
  4073  0EC4  1829               	btfsc	___xxtofl@exp,0
  4074  0EC5  2EC7               	goto	u3381
  4075  0EC6  2EC8               	goto	u3380
  4076  0EC7                     u3381:	
  4077  0EC7  2ED0               	goto	l862
  4078  0EC8                     u3380:	
  4079  0EC8                     l2516:	
  4080  0EC8  30FF               	movlw	255
  4081  0EC9  05AA               	andwf	___xxtofl@arg,f
  4082  0ECA  30FF               	movlw	255
  4083  0ECB  05AB               	andwf	___xxtofl@arg+1,f
  4084  0ECC  307F               	movlw	127
  4085  0ECD  05AC               	andwf	___xxtofl@arg+2,f
  4086  0ECE  30FF               	movlw	255
  4087  0ECF  05AD               	andwf	___xxtofl@arg+3,f
  4088  0ED0                     l862:	
  4089  0ED0  1003               	clrc
  4090  0ED1  0CA9               	rrf	___xxtofl@exp,f
  4091  0ED2                     l2518:	
  4092  0ED2  0829               	movf	___xxtofl@exp,w
  4093  0ED3  00A4               	movwf	??___xxtofl
  4094  0ED4  01A5               	clrf	??___xxtofl+1
  4095  0ED5  01A6               	clrf	??___xxtofl+2
  4096  0ED6  01A7               	clrf	??___xxtofl+3
  4097  0ED7  3018               	movlw	24
  4098  0ED8                     u3395:	
  4099  0ED8  1003               	clrc
  4100  0ED9  0DA4               	rlf	??___xxtofl,f
  4101  0EDA  0DA5               	rlf	??___xxtofl+1,f
  4102  0EDB  0DA6               	rlf	??___xxtofl+2,f
  4103  0EDC  0DA7               	rlf	??___xxtofl+3,f
  4104  0EDD                     u3390:	
  4105  0EDD  3EFF               	addlw	-1
  4106  0EDE  1D03               	skipz
  4107  0EDF  2ED8               	goto	u3395
  4108  0EE0  0824               	movf	??___xxtofl,w
  4109  0EE1  04AA               	iorwf	___xxtofl@arg,f
  4110  0EE2  0825               	movf	??___xxtofl+1,w
  4111  0EE3  04AB               	iorwf	___xxtofl@arg+1,f
  4112  0EE4  0826               	movf	??___xxtofl+2,w
  4113  0EE5  04AC               	iorwf	___xxtofl@arg+2,f
  4114  0EE6  0827               	movf	??___xxtofl+3,w
  4115  0EE7  04AD               	iorwf	___xxtofl@arg+3,f
  4116  0EE8                     l2520:	
  4117  0EE8  0828               	movf	___xxtofl@sign,w
  4118  0EE9  1903               	btfsc	3,2
  4119  0EEA  2EEC               	goto	u3401
  4120  0EEB  2EED               	goto	u3400
  4121  0EEC                     u3401:	
  4122  0EEC  2EF2               	goto	l2526
  4123  0EED                     u3400:	
  4124  0EED                     l2522:	
  4125  0EED  1FA3               	btfss	___xxtofl@val+3,7
  4126  0EEE  2EF0               	goto	u3411
  4127  0EEF  2EF1               	goto	u3410
  4128  0EF0                     u3411:	
  4129  0EF0  2EF2               	goto	l2526
  4130  0EF1                     u3410:	
  4131  0EF1                     l2524:	
  4132  0EF1  17AD               	bsf	___xxtofl@arg+3,7
  4133  0EF2                     l2526:	
  4134  0EF2  082D               	movf	___xxtofl@arg+3,w
  4135  0EF3  00A3               	movwf	?___xxtofl+3
  4136  0EF4  082C               	movf	___xxtofl@arg+2,w
  4137  0EF5  00A2               	movwf	?___xxtofl+2
  4138  0EF6  082B               	movf	___xxtofl@arg+1,w
  4139  0EF7  00A1               	movwf	?___xxtofl+1
  4140  0EF8  082A               	movf	___xxtofl@arg,w
  4141  0EF9  00A0               	movwf	?___xxtofl
  4142  0EFA                     l850:	
  4143  0EFA  0008               	return
  4144  0EFB                     __end_of___xxtofl:	
  4145                           
  4146                           	psect	text24
  4147  0DC3                     __ptext24:	
  4148 ;; *************** function ___fltol *****************
  4149 ;; Defined at:
  4150 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  f1              4   48[BANK0 ] unsigned char 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  exp1            1   58[BANK0 ] unsigned char 
  4155 ;;  sign1           1   57[BANK0 ] unsigned char 
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  4   48[BANK0 ] long 
  4158 ;; Registers used:
  4159 ;;		wreg, status,2, status,0
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4165 ;;      Params:         0       4       0       0       0
  4166 ;;      Locals:         0       2       0       0       0
  4167 ;;      Temps:          0       5       0       0       0
  4168 ;;      Totals:         0      11       0       0       0
  4169 ;;Total ram usage:       11 bytes
  4170 ;; Hardware stack levels used:    1
  4171 ;; Hardware stack levels required when called:    2
  4172 ;; This function calls:
  4173 ;;		Nothing
  4174 ;; This function is called by:
  4175 ;;		_main
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           
  4180                           ;psect for function ___fltol
  4181  0DC3                     ___fltol:	
  4182  0DC3                     l2304:	
  4183                           ;incstack = 0
  4184                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4185                           
  4186  0DC3  1003               	clrc
  4187  0DC4  1283               	bcf	3,5	;RP0=0, select bank0
  4188  0DC5  1303               	bcf	3,6	;RP1=0, select bank0
  4189  0DC6  0D52               	rlf	___fltol@f1+2,w
  4190  0DC7  0D53               	rlf	___fltol@f1+3,w
  4191  0DC8  00D4               	movwf	??___fltol
  4192  0DC9  0854               	movf	??___fltol,w
  4193  0DCA  00DA               	movwf	___fltol@exp1
  4194  0DCB  085A               	movf	___fltol@exp1,w
  4195  0DCC  1D03               	btfss	3,2
  4196  0DCD  2DCF               	goto	u2811
  4197  0DCE  2DD0               	goto	u2810
  4198  0DCF                     u2811:	
  4199  0DCF  2DD9               	goto	l2310
  4200  0DD0                     u2810:	
  4201  0DD0                     l2306:	
  4202  0DD0  3000               	movlw	0
  4203  0DD1  00D3               	movwf	?___fltol+3
  4204  0DD2  3000               	movlw	0
  4205  0DD3  00D2               	movwf	?___fltol+2
  4206  0DD4  3000               	movlw	0
  4207  0DD5  00D1               	movwf	?___fltol+1
  4208  0DD6  3000               	movlw	0
  4209  0DD7  00D0               	movwf	?___fltol
  4210  0DD8  2E3E               	goto	l607
  4211  0DD9                     l2310:	
  4212  0DD9  0850               	movf	___fltol@f1,w
  4213  0DDA  00D4               	movwf	??___fltol
  4214  0DDB  0851               	movf	___fltol@f1+1,w
  4215  0DDC  00D5               	movwf	??___fltol+1
  4216  0DDD  0852               	movf	___fltol@f1+2,w
  4217  0DDE  00D6               	movwf	??___fltol+2
  4218  0DDF  0853               	movf	___fltol@f1+3,w
  4219  0DE0  00D7               	movwf	??___fltol+3
  4220  0DE1  301F               	movlw	31
  4221  0DE2                     u2825:	
  4222  0DE2  1003               	clrc
  4223  0DE3  0CD7               	rrf	??___fltol+3,f
  4224  0DE4  0CD6               	rrf	??___fltol+2,f
  4225  0DE5  0CD5               	rrf	??___fltol+1,f
  4226  0DE6  0CD4               	rrf	??___fltol,f
  4227  0DE7                     u2820:	
  4228  0DE7  3EFF               	addlw	-1
  4229  0DE8  1D03               	skipz
  4230  0DE9  2DE2               	goto	u2825
  4231  0DEA  0854               	movf	??___fltol,w
  4232  0DEB  00D8               	movwf	??___fltol+4
  4233  0DEC  0858               	movf	??___fltol+4,w
  4234  0DED  00D9               	movwf	___fltol@sign1
  4235  0DEE                     l2312:	
  4236  0DEE  17D2               	bsf	___fltol@f1+2,7
  4237  0DEF                     l2314:	
  4238  0DEF  30FF               	movlw	255
  4239  0DF0  05D0               	andwf	___fltol@f1,f
  4240  0DF1  30FF               	movlw	255
  4241  0DF2  05D1               	andwf	___fltol@f1+1,f
  4242  0DF3  30FF               	movlw	255
  4243  0DF4  05D2               	andwf	___fltol@f1+2,f
  4244  0DF5  3000               	movlw	0
  4245  0DF6  05D3               	andwf	___fltol@f1+3,f
  4246  0DF7                     l2316:	
  4247  0DF7  3096               	movlw	150
  4248  0DF8  02DA               	subwf	___fltol@exp1,f
  4249  0DF9                     l2318:	
  4250  0DF9  1FDA               	btfss	___fltol@exp1,7
  4251  0DFA  2DFC               	goto	u2831
  4252  0DFB  2DFD               	goto	u2830
  4253  0DFC                     u2831:	
  4254  0DFC  2E17               	goto	l2328
  4255  0DFD                     u2830:	
  4256  0DFD                     l2320:	
  4257  0DFD  085A               	movf	___fltol@exp1,w
  4258  0DFE  3A80               	xorlw	128
  4259  0DFF  3E97               	addlw	151
  4260  0E00  1803               	skipnc
  4261  0E01  2E03               	goto	u2841
  4262  0E02  2E04               	goto	u2840
  4263  0E03                     u2841:	
  4264  0E03  2E05               	goto	l2326
  4265  0E04                     u2840:	
  4266  0E04  2DD0               	goto	l2306
  4267  0E05                     l2326:	
  4268  0E05  3001               	movlw	1
  4269  0E06                     u2855:	
  4270  0E06  1003               	clrc
  4271  0E07  0CD3               	rrf	___fltol@f1+3,f
  4272  0E08  0CD2               	rrf	___fltol@f1+2,f
  4273  0E09  0CD1               	rrf	___fltol@f1+1,f
  4274  0E0A  0CD0               	rrf	___fltol@f1,f
  4275  0E0B  3EFF               	addlw	-1
  4276  0E0C  1D03               	skipz
  4277  0E0D  2E06               	goto	u2855
  4278  0E0E  3001               	movlw	1
  4279  0E0F  00D4               	movwf	??___fltol
  4280  0E10  0854               	movf	??___fltol,w
  4281  0E11  07DA               	addwf	___fltol@exp1,f
  4282  0E12  1D03               	btfss	3,2
  4283  0E13  2E15               	goto	u2861
  4284  0E14  2E16               	goto	u2860
  4285  0E15                     u2861:	
  4286  0E15  2E05               	goto	l2326
  4287  0E16                     u2860:	
  4288  0E16  2E2E               	goto	l2336
  4289  0E17                     l2328:	
  4290  0E17  3020               	movlw	32
  4291  0E18  025A               	subwf	___fltol@exp1,w
  4292  0E19  1C03               	skipc
  4293  0E1A  2E1C               	goto	u2871
  4294  0E1B  2E1D               	goto	u2870
  4295  0E1C                     u2871:	
  4296  0E1C  2E29               	goto	l614
  4297  0E1D                     u2870:	
  4298  0E1D  2DD0               	goto	l2306
  4299  0E1E                     l2334:	
  4300  0E1E  3001               	movlw	1
  4301  0E1F  00D4               	movwf	??___fltol
  4302  0E20                     u2885:	
  4303  0E20  1003               	clrc
  4304  0E21  0DD0               	rlf	___fltol@f1,f
  4305  0E22  0DD1               	rlf	___fltol@f1+1,f
  4306  0E23  0DD2               	rlf	___fltol@f1+2,f
  4307  0E24  0DD3               	rlf	___fltol@f1+3,f
  4308  0E25  0BD4               	decfsz	??___fltol,f
  4309  0E26  2E20               	goto	u2885
  4310  0E27  3001               	movlw	1
  4311  0E28  02DA               	subwf	___fltol@exp1,f
  4312  0E29                     l614:	
  4313  0E29  085A               	movf	___fltol@exp1,w
  4314  0E2A  1D03               	btfss	3,2
  4315  0E2B  2E2D               	goto	u2891
  4316  0E2C  2E2E               	goto	u2890
  4317  0E2D                     u2891:	
  4318  0E2D  2E1E               	goto	l2334
  4319  0E2E                     u2890:	
  4320  0E2E                     l2336:	
  4321  0E2E  0859               	movf	___fltol@sign1,w
  4322  0E2F  1903               	btfsc	3,2
  4323  0E30  2E32               	goto	u2901
  4324  0E31  2E33               	goto	u2900
  4325  0E32                     u2901:	
  4326  0E32  2E3E               	goto	l617
  4327  0E33                     u2900:	
  4328  0E33                     l2338:	
  4329  0E33  09D0               	comf	___fltol@f1,f
  4330  0E34  09D1               	comf	___fltol@f1+1,f
  4331  0E35  09D2               	comf	___fltol@f1+2,f
  4332  0E36  09D3               	comf	___fltol@f1+3,f
  4333  0E37  0AD0               	incf	___fltol@f1,f
  4334  0E38  1903               	skipnz
  4335  0E39  0AD1               	incf	___fltol@f1+1,f
  4336  0E3A  1903               	skipnz
  4337  0E3B  0AD2               	incf	___fltol@f1+2,f
  4338  0E3C  1903               	skipnz
  4339  0E3D  0AD3               	incf	___fltol@f1+3,f
  4340  0E3E                     l617:	
  4341  0E3E                     l607:	
  4342  0E3E  0008               	return
  4343  0E3F                     __end_of___fltol:	
  4344                           
  4345                           	psect	text25
  4346  0B93                     __ptext25:	
  4347 ;; *************** function ___flsub *****************
  4348 ;; Defined at:
  4349 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;  a               4   40[BANK0 ] long 
  4352 ;;  b               4   44[BANK0 ] long 
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;		None
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  4   40[BANK0 ] long 
  4357 ;; Registers used:
  4358 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4364 ;;      Params:         0       8       0       0       0
  4365 ;;      Locals:         0       0       0       0       0
  4366 ;;      Temps:          0       0       0       0       0
  4367 ;;      Totals:         0       8       0       0       0
  4368 ;;Total ram usage:        8 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:    3
  4371 ;; This function calls:
  4372 ;;		___fladd
  4373 ;; This function is called by:
  4374 ;;		_main
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           
  4378                           
  4379                           ;psect for function ___flsub
  4380  0B93                     ___flsub:	
  4381  0B93                     l2340:	
  4382                           ;incstack = 0
  4383                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4384                           
  4385  0B93  3080               	movlw	128
  4386  0B94  1283               	bcf	3,5	;RP0=0, select bank0
  4387  0B95  1303               	bcf	3,6	;RP1=0, select bank0
  4388  0B96  06CB               	xorwf	___flsub@a+3,f
  4389  0B97                     l2342:	
  4390  0B97  084F               	movf	___flsub@b+3,w
  4391  0B98  00A3               	movwf	___fladd@b+3
  4392  0B99  084E               	movf	___flsub@b+2,w
  4393  0B9A  00A2               	movwf	___fladd@b+2
  4394  0B9B  084D               	movf	___flsub@b+1,w
  4395  0B9C  00A1               	movwf	___fladd@b+1
  4396  0B9D  084C               	movf	___flsub@b,w
  4397  0B9E  00A0               	movwf	___fladd@b
  4398  0B9F  084B               	movf	___flsub@a+3,w
  4399  0BA0  00A7               	movwf	___fladd@a+3
  4400  0BA1  084A               	movf	___flsub@a+2,w
  4401  0BA2  00A6               	movwf	___fladd@a+2
  4402  0BA3  0849               	movf	___flsub@a+1,w
  4403  0BA4  00A5               	movwf	___fladd@a+1
  4404  0BA5  0848               	movf	___flsub@a,w
  4405  0BA6  00A4               	movwf	___fladd@a
  4406  0BA7  120A  118A  2381  120A  158A  	fcall	___fladd
  4407  0BAC  1283               	bcf	3,5	;RP0=0, select bank0
  4408  0BAD  1303               	bcf	3,6	;RP1=0, select bank0
  4409  0BAE  0823               	movf	?___fladd+3,w
  4410  0BAF  00CB               	movwf	?___flsub+3
  4411  0BB0  0822               	movf	?___fladd+2,w
  4412  0BB1  00CA               	movwf	?___flsub+2
  4413  0BB2  0821               	movf	?___fladd+1,w
  4414  0BB3  00C9               	movwf	?___flsub+1
  4415  0BB4  0820               	movf	?___fladd,w
  4416  0BB5  00C8               	movwf	?___flsub
  4417  0BB6                     l760:	
  4418  0BB6  0008               	return
  4419  0BB7                     __end_of___flsub:	
  4420                           
  4421                           	psect	text26
  4422  0381                     __ptext26:	
  4423 ;; *************** function ___fladd *****************
  4424 ;; Defined at:
  4425 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  b               4    0[BANK0 ] long 
  4428 ;;  a               4    4[BANK0 ] long 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  grs             1   19[BANK0 ] unsigned char 
  4431 ;;  bexp            1   18[BANK0 ] unsigned char 
  4432 ;;  aexp            1   17[BANK0 ] unsigned char 
  4433 ;;  signs           1   16[BANK0 ] unsigned char 
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  4    0[BANK0 ] unsigned char 
  4436 ;; Registers used:
  4437 ;;		wreg, status,2, status,0, btemp+1
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4443 ;;      Params:         0       8       0       0       0
  4444 ;;      Locals:         0       4       0       0       0
  4445 ;;      Temps:          0       8       0       0       0
  4446 ;;      Totals:         0      20       0       0       0
  4447 ;;Total ram usage:       20 bytes
  4448 ;; Hardware stack levels used:    1
  4449 ;; Hardware stack levels required when called:    2
  4450 ;; This function calls:
  4451 ;;		Nothing
  4452 ;; This function is called by:
  4453 ;;		___flsub
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           
  4458                           ;psect for function ___fladd
  4459  0381                     ___fladd:	
  4460  0381                     l1872:	
  4461                           ;incstack = 0
  4462                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4463                           
  4464  0381  1283               	bcf	3,5	;RP0=0, select bank0
  4465  0382  1303               	bcf	3,6	;RP1=0, select bank0
  4466  0383  0823               	movf	___fladd@b+3,w
  4467  0384  3980               	andlw	128
  4468  0385  00A8               	movwf	??___fladd
  4469  0386  0828               	movf	??___fladd,w
  4470  0387  00B0               	movwf	___fladd@signs
  4471  0388                     l1874:	
  4472  0388  0823               	movf	___fladd@b+3,w
  4473  0389  00A8               	movwf	??___fladd
  4474  038A  0728               	addwf	??___fladd,w
  4475  038B  00A9               	movwf	??___fladd+1
  4476  038C  0829               	movf	??___fladd+1,w
  4477  038D  00B2               	movwf	___fladd@bexp
  4478  038E                     l1876:	
  4479  038E  1FA2               	btfss	___fladd@b+2,7
  4480  038F  2B91               	goto	u2061
  4481  0390  2B92               	goto	u2060
  4482  0391                     u2061:	
  4483  0391  2B93               	goto	l1880
  4484  0392                     u2060:	
  4485  0392                     l1878:	
  4486  0392  1432               	bsf	___fladd@bexp,0
  4487  0393                     l1880:	
  4488  0393  0832               	movf	___fladd@bexp,w
  4489  0394  1903               	btfsc	3,2
  4490  0395  2B97               	goto	u2071
  4491  0396  2B98               	goto	u2070
  4492  0397                     u2071:	
  4493  0397  2BA8               	goto	l1890
  4494  0398                     u2070:	
  4495  0398                     l1882:	
  4496  0398  0A32               	incf	___fladd@bexp,w
  4497  0399  1D03               	btfss	3,2
  4498  039A  2B9C               	goto	u2081
  4499  039B  2B9D               	goto	u2080
  4500  039C                     u2081:	
  4501  039C  2BA5               	goto	l1886
  4502  039D                     u2080:	
  4503  039D                     l1884:	
  4504  039D  3000               	movlw	0
  4505  039E  00A3               	movwf	___fladd@b+3
  4506  039F  3000               	movlw	0
  4507  03A0  00A2               	movwf	___fladd@b+2
  4508  03A1  3000               	movlw	0
  4509  03A2  00A1               	movwf	___fladd@b+1
  4510  03A3  3000               	movlw	0
  4511  03A4  00A0               	movwf	___fladd@b
  4512  03A5                     l1886:	
  4513  03A5  17A2               	bsf	___fladd@b+2,7
  4514  03A6                     l1888:	
  4515  03A6  01A3               	clrf	___fladd@b+3
  4516  03A7  2BB0               	goto	l1892
  4517  03A8                     l1890:	
  4518  03A8  3000               	movlw	0
  4519  03A9  00A3               	movwf	___fladd@b+3
  4520  03AA  3000               	movlw	0
  4521  03AB  00A2               	movwf	___fladd@b+2
  4522  03AC  3000               	movlw	0
  4523  03AD  00A1               	movwf	___fladd@b+1
  4524  03AE  3000               	movlw	0
  4525  03AF  00A0               	movwf	___fladd@b
  4526  03B0                     l1892:	
  4527  03B0  0827               	movf	___fladd@a+3,w
  4528  03B1  3980               	andlw	128
  4529  03B2  00A8               	movwf	??___fladd
  4530  03B3  0828               	movf	??___fladd,w
  4531  03B4  00B1               	movwf	___fladd@aexp
  4532  03B5                     l1894:	
  4533  03B5  0831               	movf	___fladd@aexp,w
  4534  03B6  0630               	xorwf	___fladd@signs,w
  4535  03B7  1903               	skipnz
  4536  03B8  2BBA               	goto	u2091
  4537  03B9  2BBB               	goto	u2090
  4538  03BA                     u2091:	
  4539  03BA  2BBC               	goto	l1898
  4540  03BB                     u2090:	
  4541  03BB                     l1896:	
  4542  03BB  1730               	bsf	___fladd@signs,6
  4543  03BC                     l1898:	
  4544  03BC  0827               	movf	___fladd@a+3,w
  4545  03BD  00A8               	movwf	??___fladd
  4546  03BE  0728               	addwf	??___fladd,w
  4547  03BF  00A9               	movwf	??___fladd+1
  4548  03C0  0829               	movf	??___fladd+1,w
  4549  03C1  00B1               	movwf	___fladd@aexp
  4550  03C2                     l1900:	
  4551  03C2  1FA6               	btfss	___fladd@a+2,7
  4552  03C3  2BC5               	goto	u2101
  4553  03C4  2BC6               	goto	u2100
  4554  03C5                     u2101:	
  4555  03C5  2BC7               	goto	l1904
  4556  03C6                     u2100:	
  4557  03C6                     l1902:	
  4558  03C6  1431               	bsf	___fladd@aexp,0
  4559  03C7                     l1904:	
  4560  03C7  0831               	movf	___fladd@aexp,w
  4561  03C8  1903               	btfsc	3,2
  4562  03C9  2BCB               	goto	u2111
  4563  03CA  2BCC               	goto	u2110
  4564  03CB                     u2111:	
  4565  03CB  2BDC               	goto	l1914
  4566  03CC                     u2110:	
  4567  03CC                     l1906:	
  4568  03CC  0A31               	incf	___fladd@aexp,w
  4569  03CD  1D03               	btfss	3,2
  4570  03CE  2BD0               	goto	u2121
  4571  03CF  2BD1               	goto	u2120
  4572  03D0                     u2121:	
  4573  03D0  2BD9               	goto	l1910
  4574  03D1                     u2120:	
  4575  03D1                     l1908:	
  4576  03D1  3000               	movlw	0
  4577  03D2  00A7               	movwf	___fladd@a+3
  4578  03D3  3000               	movlw	0
  4579  03D4  00A6               	movwf	___fladd@a+2
  4580  03D5  3000               	movlw	0
  4581  03D6  00A5               	movwf	___fladd@a+1
  4582  03D7  3000               	movlw	0
  4583  03D8  00A4               	movwf	___fladd@a
  4584  03D9                     l1910:	
  4585  03D9  17A6               	bsf	___fladd@a+2,7
  4586  03DA                     l1912:	
  4587  03DA  01A7               	clrf	___fladd@a+3
  4588  03DB  2BE4               	goto	l714
  4589  03DC                     l1914:	
  4590  03DC  3000               	movlw	0
  4591  03DD  00A7               	movwf	___fladd@a+3
  4592  03DE  3000               	movlw	0
  4593  03DF  00A6               	movwf	___fladd@a+2
  4594  03E0  3000               	movlw	0
  4595  03E1  00A5               	movwf	___fladd@a+1
  4596  03E2  3000               	movlw	0
  4597  03E3  00A4               	movwf	___fladd@a
  4598  03E4                     l714:	
  4599  03E4  0832               	movf	___fladd@bexp,w
  4600  03E5  0231               	subwf	___fladd@aexp,w
  4601  03E6  1803               	skipnc
  4602  03E7  2BE9               	goto	u2131
  4603  03E8  2BEA               	goto	u2130
  4604  03E9                     u2131:	
  4605  03E9  2C2E               	goto	l1950
  4606  03EA                     u2130:	
  4607  03EA                     l1916:	
  4608  03EA  1F30               	btfss	___fladd@signs,6
  4609  03EB  2BED               	goto	u2141
  4610  03EC  2BEE               	goto	u2140
  4611  03ED                     u2141:	
  4612  03ED  2BF2               	goto	l1920
  4613  03EE                     u2140:	
  4614  03EE                     l1918:	
  4615  03EE  3080               	movlw	128
  4616  03EF  00A8               	movwf	??___fladd
  4617  03F0  0828               	movf	??___fladd,w
  4618  03F1  06B0               	xorwf	___fladd@signs,f
  4619  03F2                     l1920:	
  4620  03F2  0832               	movf	___fladd@bexp,w
  4621  03F3  00A8               	movwf	??___fladd
  4622  03F4  0828               	movf	??___fladd,w
  4623  03F5  00B3               	movwf	___fladd@grs
  4624  03F6                     l1922:	
  4625  03F6  0831               	movf	___fladd@aexp,w
  4626  03F7  00A8               	movwf	??___fladd
  4627  03F8  0828               	movf	??___fladd,w
  4628  03F9  00B2               	movwf	___fladd@bexp
  4629  03FA                     l1924:	
  4630  03FA  0833               	movf	___fladd@grs,w
  4631  03FB  00A8               	movwf	??___fladd
  4632  03FC  0828               	movf	??___fladd,w
  4633  03FD  00B1               	movwf	___fladd@aexp
  4634  03FE                     l1926:	
  4635  03FE  0820               	movf	___fladd@b,w
  4636  03FF  00A8               	movwf	??___fladd
  4637  0400  0828               	movf	??___fladd,w
  4638  0401  00B3               	movwf	___fladd@grs
  4639  0402                     l1928:	
  4640  0402  0824               	movf	___fladd@a,w
  4641  0403  00A8               	movwf	??___fladd
  4642  0404  0828               	movf	??___fladd,w
  4643  0405  00A0               	movwf	___fladd@b
  4644  0406                     l1930:	
  4645  0406  0833               	movf	___fladd@grs,w
  4646  0407  00A8               	movwf	??___fladd
  4647  0408  0828               	movf	??___fladd,w
  4648  0409  00A4               	movwf	___fladd@a
  4649  040A                     l1932:	
  4650  040A  0821               	movf	___fladd@b+1,w
  4651  040B  00A8               	movwf	??___fladd
  4652  040C  0828               	movf	??___fladd,w
  4653  040D  00B3               	movwf	___fladd@grs
  4654  040E                     l1934:	
  4655  040E  0825               	movf	___fladd@a+1,w
  4656  040F  00A8               	movwf	??___fladd
  4657  0410  0828               	movf	??___fladd,w
  4658  0411  00A1               	movwf	___fladd@b+1
  4659  0412                     l1936:	
  4660  0412  0833               	movf	___fladd@grs,w
  4661  0413  00A8               	movwf	??___fladd
  4662  0414  0828               	movf	??___fladd,w
  4663  0415  00A5               	movwf	___fladd@a+1
  4664  0416                     l1938:	
  4665  0416  0822               	movf	___fladd@b+2,w
  4666  0417  00A8               	movwf	??___fladd
  4667  0418  0828               	movf	??___fladd,w
  4668  0419  00B3               	movwf	___fladd@grs
  4669  041A                     l1940:	
  4670  041A  0826               	movf	___fladd@a+2,w
  4671  041B  00A8               	movwf	??___fladd
  4672  041C  0828               	movf	??___fladd,w
  4673  041D  00A2               	movwf	___fladd@b+2
  4674  041E                     l1942:	
  4675  041E  0833               	movf	___fladd@grs,w
  4676  041F  00A8               	movwf	??___fladd
  4677  0420  0828               	movf	??___fladd,w
  4678  0421  00A6               	movwf	___fladd@a+2
  4679  0422                     l1944:	
  4680  0422  0823               	movf	___fladd@b+3,w
  4681  0423  00A8               	movwf	??___fladd
  4682  0424  0828               	movf	??___fladd,w
  4683  0425  00B3               	movwf	___fladd@grs
  4684  0426                     l1946:	
  4685  0426  0827               	movf	___fladd@a+3,w
  4686  0427  00A8               	movwf	??___fladd
  4687  0428  0828               	movf	??___fladd,w
  4688  0429  00A3               	movwf	___fladd@b+3
  4689  042A                     l1948:	
  4690  042A  0833               	movf	___fladd@grs,w
  4691  042B  00A8               	movwf	??___fladd
  4692  042C  0828               	movf	??___fladd,w
  4693  042D  00A7               	movwf	___fladd@a+3
  4694  042E                     l1950:	
  4695  042E  01B3               	clrf	___fladd@grs
  4696  042F                     l1952:	
  4697  042F  0831               	movf	___fladd@aexp,w
  4698  0430  00A8               	movwf	??___fladd
  4699  0431  01A9               	clrf	??___fladd+1
  4700  0432  0829               	movf	??___fladd+1,w
  4701  0433  00AB               	movwf	??___fladd+3
  4702  0434  0832               	movf	___fladd@bexp,w
  4703  0435  0228               	subwf	??___fladd,w
  4704  0436  00AA               	movwf	??___fladd+2
  4705  0437  1C03               	skipc
  4706  0438  03AB               	decf	??___fladd+3,f
  4707  0439  082B               	movf	??___fladd+3,w
  4708  043A  3A80               	xorlw	128
  4709  043B  00FF               	movwf	btemp+1
  4710  043C  3080               	movlw	128
  4711  043D  027F               	subwf	btemp+1,w
  4712  043E  1D03               	skipz
  4713  043F  2C42               	goto	u2155
  4714  0440  301A               	movlw	26
  4715  0441  022A               	subwf	??___fladd+2,w
  4716  0442                     u2155:	
  4717  0442  1C03               	skipc
  4718  0443  2C45               	goto	u2151
  4719  0444  2C46               	goto	u2150
  4720  0445                     u2151:	
  4721  0445  2C83               	goto	l1968
  4722  0446                     u2150:	
  4723  0446                     l1954:	
  4724  0446  1283               	bcf	3,5	;RP0=0, select bank0
  4725  0447  1303               	bcf	3,6	;RP1=0, select bank0
  4726  0448  0823               	movf	___fladd@b+3,w
  4727  0449  0422               	iorwf	___fladd@b+2,w
  4728  044A  0421               	iorwf	___fladd@b+1,w
  4729  044B  0420               	iorwf	___fladd@b,w
  4730  044C  1D03               	skipz
  4731  044D  2C4F               	goto	u2161
  4732  044E  2C51               	goto	u2160
  4733  044F                     u2161:	
  4734  044F  3001               	movlw	1
  4735  0450  2C52               	goto	u2170
  4736  0451                     u2160:	
  4737  0451  3000               	movlw	0
  4738  0452                     u2170:	
  4739  0452  00A8               	movwf	??___fladd
  4740  0453  0828               	movf	??___fladd,w
  4741  0454  00B3               	movwf	___fladd@grs
  4742  0455  3000               	movlw	0
  4743  0456  00A3               	movwf	___fladd@b+3
  4744  0457  3000               	movlw	0
  4745  0458  00A2               	movwf	___fladd@b+2
  4746  0459  3000               	movlw	0
  4747  045A  00A1               	movwf	___fladd@b+1
  4748  045B  3000               	movlw	0
  4749  045C  00A0               	movwf	___fladd@b
  4750  045D  0831               	movf	___fladd@aexp,w
  4751  045E  00A8               	movwf	??___fladd
  4752  045F  0828               	movf	??___fladd,w
  4753  0460  00B2               	movwf	___fladd@bexp
  4754  0461  2C8B               	goto	l718
  4755  0462                     l720:	
  4756  0462  1C33               	btfss	___fladd@grs,0
  4757  0463  2C65               	goto	u2181
  4758  0464  2C66               	goto	u2180
  4759  0465                     u2181:	
  4760  0465  2C6F               	goto	l1958
  4761  0466                     u2180:	
  4762  0466                     l1956:	
  4763  0466  0833               	movf	___fladd@grs,w
  4764  0467  00A8               	movwf	??___fladd
  4765  0468  1003               	clrc
  4766  0469  0C28               	rrf	??___fladd,w
  4767  046A  3801               	iorlw	1
  4768  046B  00A9               	movwf	??___fladd+1
  4769  046C  0829               	movf	??___fladd+1,w
  4770  046D  00B3               	movwf	___fladd@grs
  4771  046E  2C71               	goto	l1960
  4772  046F                     l1958:	
  4773  046F  1003               	clrc
  4774  0470  0CB3               	rrf	___fladd@grs,f
  4775  0471                     l1960:	
  4776  0471  1C20               	btfss	___fladd@b,0
  4777  0472  2C74               	goto	u2191
  4778  0473  2C75               	goto	u2190
  4779  0474                     u2191:	
  4780  0474  2C76               	goto	l1964
  4781  0475                     u2190:	
  4782  0475                     l1962:	
  4783  0475  17B3               	bsf	___fladd@grs,7
  4784  0476                     l1964:	
  4785  0476  3001               	movlw	1
  4786  0477  00A8               	movwf	??___fladd
  4787  0478                     u2205:	
  4788  0478  0D23               	rlf	___fladd@b+3,w
  4789  0479  0CA3               	rrf	___fladd@b+3,f
  4790  047A  0CA2               	rrf	___fladd@b+2,f
  4791  047B  0CA1               	rrf	___fladd@b+1,f
  4792  047C  0CA0               	rrf	___fladd@b,f
  4793  047D  0BA8               	decfsz	??___fladd& (0+127),f
  4794  047E  2C78               	goto	u2205
  4795  047F                     l1966:	
  4796  047F  3001               	movlw	1
  4797  0480  00A8               	movwf	??___fladd
  4798  0481  0828               	movf	??___fladd,w
  4799  0482  07B2               	addwf	___fladd@bexp,f
  4800  0483                     l1968:	
  4801  0483  1283               	bcf	3,5	;RP0=0, select bank0
  4802  0484  1303               	bcf	3,6	;RP1=0, select bank0
  4803  0485  0831               	movf	___fladd@aexp,w
  4804  0486  0232               	subwf	___fladd@bexp,w
  4805  0487  1C03               	skipc
  4806  0488  2C8A               	goto	u2211
  4807  0489  2C8B               	goto	u2210
  4808  048A                     u2211:	
  4809  048A  2C62               	goto	l720
  4810  048B                     u2210:	
  4811  048B                     l718:	
  4812  048B  1B30               	btfsc	___fladd@signs,6
  4813  048C  2C8E               	goto	u2221
  4814  048D  2C8F               	goto	u2220
  4815  048E                     u2221:	
  4816  048E  2CDA               	goto	l1994
  4817  048F                     u2220:	
  4818  048F                     l1970:	
  4819  048F  0832               	movf	___fladd@bexp,w
  4820  0490  1D03               	btfss	3,2
  4821  0491  2C93               	goto	u2231
  4822  0492  2C94               	goto	u2230
  4823  0493                     u2231:	
  4824  0493  2C9D               	goto	l1976
  4825  0494                     u2230:	
  4826  0494                     l1972:	
  4827  0494  3000               	movlw	0
  4828  0495  00A3               	movwf	?___fladd+3
  4829  0496  3000               	movlw	0
  4830  0497  00A2               	movwf	?___fladd+2
  4831  0498  3000               	movlw	0
  4832  0499  00A1               	movwf	?___fladd+1
  4833  049A  3000               	movlw	0
  4834  049B  00A0               	movwf	?___fladd
  4835  049C  2E08               	goto	l727
  4836  049D                     l1976:	
  4837  049D  0824               	movf	___fladd@a,w
  4838  049E  07A0               	addwf	___fladd@b,f
  4839  049F  0825               	movf	___fladd@a+1,w
  4840  04A0  1103               	clrz
  4841  04A1  1803               	skipnc
  4842  04A2  3E01               	addlw	1
  4843  04A3  1903               	skipnz
  4844  04A4  2CA6               	goto	u2241
  4845  04A5  07A1               	addwf	___fladd@b+1,f
  4846  04A6                     u2241:	
  4847  04A6  0826               	movf	___fladd@a+2,w
  4848  04A7  1103               	clrz
  4849  04A8  1803               	skipnc
  4850  04A9  3E01               	addlw	1
  4851  04AA  1903               	skipnz
  4852  04AB  2CAD               	goto	u2242
  4853  04AC  07A2               	addwf	___fladd@b+2,f
  4854  04AD                     u2242:	
  4855  04AD  0827               	movf	___fladd@a+3,w
  4856  04AE  1103               	clrz
  4857  04AF  1803               	skipnc
  4858  04B0  3E01               	addlw	1
  4859  04B1  1903               	skipnz
  4860  04B2  2CB4               	goto	u2243
  4861  04B3  07A3               	addwf	___fladd@b+3,f
  4862  04B4                     u2243:	
  4863  04B4                     l1978:	
  4864  04B4  1C23               	btfss	___fladd@b+3,0
  4865  04B5  2CB7               	goto	u2251
  4866  04B6  2CB8               	goto	u2250
  4867  04B7                     u2251:	
  4868  04B7  2D8E               	goto	l2028
  4869  04B8                     u2250:	
  4870  04B8                     l1980:	
  4871  04B8  1C33               	btfss	___fladd@grs,0
  4872  04B9  2CBB               	goto	u2261
  4873  04BA  2CBC               	goto	u2260
  4874  04BB                     u2261:	
  4875  04BB  2CC5               	goto	l1984
  4876  04BC                     u2260:	
  4877  04BC                     l1982:	
  4878  04BC  0833               	movf	___fladd@grs,w
  4879  04BD  00A8               	movwf	??___fladd
  4880  04BE  1003               	clrc
  4881  04BF  0C28               	rrf	??___fladd,w
  4882  04C0  3801               	iorlw	1
  4883  04C1  00A9               	movwf	??___fladd+1
  4884  04C2  0829               	movf	??___fladd+1,w
  4885  04C3  00B3               	movwf	___fladd@grs
  4886  04C4  2CC7               	goto	l1986
  4887  04C5                     l1984:	
  4888  04C5  1003               	clrc
  4889  04C6  0CB3               	rrf	___fladd@grs,f
  4890  04C7                     l1986:	
  4891  04C7  1C20               	btfss	___fladd@b,0
  4892  04C8  2CCA               	goto	u2271
  4893  04C9  2CCB               	goto	u2270
  4894  04CA                     u2271:	
  4895  04CA  2CCC               	goto	l1990
  4896  04CB                     u2270:	
  4897  04CB                     l1988:	
  4898  04CB  17B3               	bsf	___fladd@grs,7
  4899  04CC                     l1990:	
  4900  04CC  3001               	movlw	1
  4901  04CD  00A8               	movwf	??___fladd
  4902  04CE                     u2285:	
  4903  04CE  0D23               	rlf	___fladd@b+3,w
  4904  04CF  0CA3               	rrf	___fladd@b+3,f
  4905  04D0  0CA2               	rrf	___fladd@b+2,f
  4906  04D1  0CA1               	rrf	___fladd@b+1,f
  4907  04D2  0CA0               	rrf	___fladd@b,f
  4908  04D3  0BA8               	decfsz	??___fladd& (0+127),f
  4909  04D4  2CCE               	goto	u2285
  4910  04D5                     l1992:	
  4911  04D5  3001               	movlw	1
  4912  04D6  00A8               	movwf	??___fladd
  4913  04D7  0828               	movf	??___fladd,w
  4914  04D8  07B2               	addwf	___fladd@bexp,f
  4915  04D9  2D8E               	goto	l2028
  4916  04DA                     l1994:	
  4917  04DA  0823               	movf	___fladd@b+3,w
  4918  04DB  3A80               	xorlw	128
  4919  04DC  00FF               	movwf	btemp+1
  4920  04DD  0827               	movf	___fladd@a+3,w
  4921  04DE  3A80               	xorlw	128
  4922  04DF  027F               	subwf	btemp+1,w
  4923  04E0  1D03               	skipz
  4924  04E1  2CEC               	goto	u2293
  4925  04E2  0826               	movf	___fladd@a+2,w
  4926  04E3  0222               	subwf	___fladd@b+2,w
  4927  04E4  1D03               	skipz
  4928  04E5  2CEC               	goto	u2293
  4929  04E6  0825               	movf	___fladd@a+1,w
  4930  04E7  0221               	subwf	___fladd@b+1,w
  4931  04E8  1D03               	skipz
  4932  04E9  2CEC               	goto	u2293
  4933  04EA  0824               	movf	___fladd@a,w
  4934  04EB  0220               	subwf	___fladd@b,w
  4935  04EC                     u2293:	
  4936  04EC  1803               	skipnc
  4937  04ED  2CEF               	goto	u2291
  4938  04EE  2CF0               	goto	u2290
  4939  04EF                     u2291:	
  4940  04EF  2D48               	goto	l2004
  4941  04F0                     u2290:	
  4942  04F0                     l1996:	
  4943  04F0  30FF               	movlw	255
  4944  04F1  00A8               	movwf	??___fladd
  4945  04F2  30FF               	movlw	255
  4946  04F3  00A9               	movwf	??___fladd+1
  4947  04F4  30FF               	movlw	255
  4948  04F5  00AA               	movwf	??___fladd+2
  4949  04F6  30FF               	movlw	255
  4950  04F7  00AB               	movwf	??___fladd+3
  4951  04F8  0824               	movf	___fladd@a,w
  4952  04F9  00AC               	movwf	??___fladd+4
  4953  04FA  0825               	movf	___fladd@a+1,w
  4954  04FB  00AD               	movwf	??___fladd+5
  4955  04FC  0826               	movf	___fladd@a+2,w
  4956  04FD  00AE               	movwf	??___fladd+6
  4957  04FE  0827               	movf	___fladd@a+3,w
  4958  04FF  00AF               	movwf	??___fladd+7
  4959  0500  0820               	movf	___fladd@b,w
  4960  0501  02AC               	subwf	??___fladd+4,f
  4961  0502  0821               	movf	___fladd@b+1,w
  4962  0503  1C03               	skipc
  4963  0504  0F21               	incfsz	___fladd@b+1,w
  4964  0505  2D07               	goto	u2301
  4965  0506  2D08               	goto	u2302
  4966  0507                     u2301:	
  4967  0507  02AD               	subwf	??___fladd+5,f
  4968  0508                     u2302:	
  4969  0508  0822               	movf	___fladd@b+2,w
  4970  0509  1C03               	skipc
  4971  050A  0F22               	incfsz	___fladd@b+2,w
  4972  050B  2D0D               	goto	u2303
  4973  050C  2D0E               	goto	u2304
  4974  050D                     u2303:	
  4975  050D  02AE               	subwf	??___fladd+6,f
  4976  050E                     u2304:	
  4977  050E  0823               	movf	___fladd@b+3,w
  4978  050F  1C03               	skipc
  4979  0510  0F23               	incfsz	___fladd@b+3,w
  4980  0511  2D13               	goto	u2305
  4981  0512  2D14               	goto	u2306
  4982  0513                     u2305:	
  4983  0513  02AF               	subwf	??___fladd+7,f
  4984  0514                     u2306:	
  4985  0514  082C               	movf	??___fladd+4,w
  4986  0515  07A8               	addwf	??___fladd,f
  4987  0516  082D               	movf	??___fladd+5,w
  4988  0517  1803               	skipnc
  4989  0518  0F2D               	incfsz	??___fladd+5,w
  4990  0519  2D1B               	goto	u2310
  4991  051A  2D1C               	goto	u2311
  4992  051B                     u2310:	
  4993  051B  07A9               	addwf	??___fladd+1,f
  4994  051C                     u2311:	
  4995  051C  082E               	movf	??___fladd+6,w
  4996  051D  1803               	skipnc
  4997  051E  0F2E               	incfsz	??___fladd+6,w
  4998  051F  2D21               	goto	u2312
  4999  0520  2D22               	goto	u2313
  5000  0521                     u2312:	
  5001  0521  07AA               	addwf	??___fladd+2,f
  5002  0522                     u2313:	
  5003  0522  082F               	movf	??___fladd+7,w
  5004  0523  1803               	skipnc
  5005  0524  0A2F               	incf	??___fladd+7,w
  5006  0525  07AB               	addwf	??___fladd+3,f
  5007  0526  082B               	movf	??___fladd+3,w
  5008  0527  00A3               	movwf	___fladd@b+3
  5009  0528  082A               	movf	??___fladd+2,w
  5010  0529  00A2               	movwf	___fladd@b+2
  5011  052A  0829               	movf	??___fladd+1,w
  5012  052B  00A1               	movwf	___fladd@b+1
  5013  052C  0828               	movf	??___fladd,w
  5014  052D  00A0               	movwf	___fladd@b
  5015  052E                     l1998:	
  5016  052E  3080               	movlw	128
  5017  052F  00A8               	movwf	??___fladd
  5018  0530  0828               	movf	??___fladd,w
  5019  0531  06B0               	xorwf	___fladd@signs,f
  5020  0532  09B3               	comf	___fladd@grs,f
  5021  0533  0AB3               	incf	___fladd@grs,f
  5022  0534                     l2000:	
  5023  0534  0833               	movf	___fladd@grs,w
  5024  0535  1D03               	btfss	3,2
  5025  0536  2D38               	goto	u2321
  5026  0537  2D39               	goto	u2320
  5027  0538                     u2321:	
  5028  0538  2D56               	goto	l735
  5029  0539                     u2320:	
  5030  0539                     l2002:	
  5031  0539  3001               	movlw	1
  5032  053A  07A0               	addwf	___fladd@b,f
  5033  053B  3000               	movlw	0
  5034  053C  1803               	skipnc
  5035  053D  3001               	movlw	1
  5036  053E  07A1               	addwf	___fladd@b+1,f
  5037  053F  3000               	movlw	0
  5038  0540  1803               	skipnc
  5039  0541  3001               	movlw	1
  5040  0542  07A2               	addwf	___fladd@b+2,f
  5041  0543  3000               	movlw	0
  5042  0544  1803               	skipnc
  5043  0545  3001               	movlw	1
  5044  0546  07A3               	addwf	___fladd@b+3,f
  5045  0547  2D56               	goto	l735
  5046  0548                     l2004:	
  5047  0548  0824               	movf	___fladd@a,w
  5048  0549  02A0               	subwf	___fladd@b,f
  5049  054A  0825               	movf	___fladd@a+1,w
  5050  054B  1C03               	skipc
  5051  054C  0F25               	incfsz	___fladd@a+1,w
  5052  054D  02A1               	subwf	___fladd@b+1,f
  5053  054E  0826               	movf	___fladd@a+2,w
  5054  054F  1C03               	skipc
  5055  0550  0F26               	incfsz	___fladd@a+2,w
  5056  0551  02A2               	subwf	___fladd@b+2,f
  5057  0552  0827               	movf	___fladd@a+3,w
  5058  0553  1C03               	skipc
  5059  0554  0F27               	incfsz	___fladd@a+3,w
  5060  0555  02A3               	subwf	___fladd@b+3,f
  5061  0556                     l735:	
  5062  0556  0823               	movf	___fladd@b+3,w
  5063  0557  0422               	iorwf	___fladd@b+2,w
  5064  0558  0421               	iorwf	___fladd@b+1,w
  5065  0559  0420               	iorwf	___fladd@b,w
  5066  055A  1D03               	skipz
  5067  055B  2D5D               	goto	u2331
  5068  055C  2D5E               	goto	u2330
  5069  055D                     u2331:	
  5070  055D  2D8A               	goto	l2026
  5071  055E                     u2330:	
  5072  055E                     l2006:	
  5073  055E  0833               	movf	___fladd@grs,w
  5074  055F  1D03               	btfss	3,2
  5075  0560  2D62               	goto	u2341
  5076  0561  2D63               	goto	u2340
  5077  0562                     u2341:	
  5078  0562  2D8A               	goto	l2026
  5079  0563                     u2340:	
  5080  0563                     l2008:	
  5081  0563  3000               	movlw	0
  5082  0564  00A3               	movwf	?___fladd+3
  5083  0565  3000               	movlw	0
  5084  0566  00A2               	movwf	?___fladd+2
  5085  0567  3000               	movlw	0
  5086  0568  00A1               	movwf	?___fladd+1
  5087  0569  3000               	movlw	0
  5088  056A  00A0               	movwf	?___fladd
  5089  056B  2E08               	goto	l727
  5090  056C                     l2012:	
  5091  056C  3001               	movlw	1
  5092  056D  00A8               	movwf	??___fladd
  5093  056E                     u2355:	
  5094  056E  1003               	clrc
  5095  056F  0DA0               	rlf	___fladd@b,f
  5096  0570  0DA1               	rlf	___fladd@b+1,f
  5097  0571  0DA2               	rlf	___fladd@b+2,f
  5098  0572  0DA3               	rlf	___fladd@b+3,f
  5099  0573  0BA8               	decfsz	??___fladd,f
  5100  0574  2D6E               	goto	u2355
  5101  0575                     l2014:	
  5102  0575  1FB3               	btfss	___fladd@grs,7
  5103  0576  2D78               	goto	u2361
  5104  0577  2D79               	goto	u2360
  5105  0578                     u2361:	
  5106  0578  2D7A               	goto	l739
  5107  0579                     u2360:	
  5108  0579                     l2016:	
  5109  0579  1420               	bsf	___fladd@b,0
  5110  057A                     l739:	
  5111  057A  1C33               	btfss	___fladd@grs,0
  5112  057B  2D7D               	goto	u2371
  5113  057C  2D7E               	goto	u2370
  5114  057D                     u2371:	
  5115  057D  2D81               	goto	l2020
  5116  057E                     u2370:	
  5117  057E                     l2018:	
  5118  057E  1403               	setc
  5119  057F  0DB3               	rlf	___fladd@grs,f
  5120  0580  2D83               	goto	l2022
  5121  0581                     l2020:	
  5122  0581  1003               	clrc
  5123  0582  0DB3               	rlf	___fladd@grs,f
  5124  0583                     l2022:	
  5125  0583  0832               	movf	___fladd@bexp,w
  5126  0584  1903               	btfsc	3,2
  5127  0585  2D87               	goto	u2381
  5128  0586  2D88               	goto	u2380
  5129  0587                     u2381:	
  5130  0587  2D8A               	goto	l2026
  5131  0588                     u2380:	
  5132  0588                     l2024:	
  5133  0588  3001               	movlw	1
  5134  0589  02B2               	subwf	___fladd@bexp,f
  5135  058A                     l2026:	
  5136  058A  1FA2               	btfss	___fladd@b+2,7
  5137  058B  2D8D               	goto	u2391
  5138  058C  2D8E               	goto	u2390
  5139  058D                     u2391:	
  5140  058D  2D6C               	goto	l2012
  5141  058E                     u2390:	
  5142  058E                     l2028:	
  5143  058E  01B1               	clrf	___fladd@aexp
  5144  058F                     l2030:	
  5145  058F  1FB3               	btfss	___fladd@grs,7
  5146  0590  2D92               	goto	u2401
  5147  0591  2D93               	goto	u2400
  5148  0592                     u2401:	
  5149  0592  2DA1               	goto	l2038
  5150  0593                     u2400:	
  5151  0593                     l2032:	
  5152  0593  0833               	movf	___fladd@grs,w
  5153  0594  397F               	andlw	127
  5154  0595  1903               	btfsc	3,2
  5155  0596  2D98               	goto	u2411
  5156  0597  2D99               	goto	u2410
  5157  0598                     u2411:	
  5158  0598  2D9C               	goto	l745
  5159  0599                     u2410:	
  5160  0599                     l2034:	
  5161  0599  01B1               	clrf	___fladd@aexp
  5162  059A  0AB1               	incf	___fladd@aexp,f
  5163  059B  2DA1               	goto	l2038
  5164  059C                     l745:	
  5165  059C  1C20               	btfss	___fladd@b,0
  5166  059D  2D9F               	goto	u2421
  5167  059E  2DA0               	goto	u2420
  5168  059F                     u2421:	
  5169  059F  2DA1               	goto	l2038
  5170  05A0                     u2420:	
  5171  05A0  2D99               	goto	l2034
  5172  05A1                     l2038:	
  5173  05A1  0831               	movf	___fladd@aexp,w
  5174  05A2  1903               	btfsc	3,2
  5175  05A3  2DA5               	goto	u2431
  5176  05A4  2DA6               	goto	u2430
  5177  05A5                     u2431:	
  5178  05A5  2DDA               	goto	l748
  5179  05A6                     u2430:	
  5180  05A6                     l2040:	
  5181  05A6  3001               	movlw	1
  5182  05A7  07A0               	addwf	___fladd@b,f
  5183  05A8  3000               	movlw	0
  5184  05A9  1803               	skipnc
  5185  05AA  3001               	movlw	1
  5186  05AB  07A1               	addwf	___fladd@b+1,f
  5187  05AC  3000               	movlw	0
  5188  05AD  1803               	skipnc
  5189  05AE  3001               	movlw	1
  5190  05AF  07A2               	addwf	___fladd@b+2,f
  5191  05B0  3000               	movlw	0
  5192  05B1  1803               	skipnc
  5193  05B2  3001               	movlw	1
  5194  05B3  07A3               	addwf	___fladd@b+3,f
  5195  05B4                     l2042:	
  5196  05B4  1C23               	btfss	___fladd@b+3,0
  5197  05B5  2DB7               	goto	u2441
  5198  05B6  2DB8               	goto	u2440
  5199  05B7                     u2441:	
  5200  05B7  2DDA               	goto	l748
  5201  05B8                     u2440:	
  5202  05B8                     l2044:	
  5203  05B8  0820               	movf	___fladd@b,w
  5204  05B9  00A8               	movwf	??___fladd
  5205  05BA  0821               	movf	___fladd@b+1,w
  5206  05BB  00A9               	movwf	??___fladd+1
  5207  05BC  0822               	movf	___fladd@b+2,w
  5208  05BD  00AA               	movwf	??___fladd+2
  5209  05BE  0823               	movf	___fladd@b+3,w
  5210  05BF  00AB               	movwf	??___fladd+3
  5211  05C0  3001               	movlw	1
  5212  05C1  00AC               	movwf	??___fladd+4
  5213  05C2                     u2455:	
  5214  05C2  0D2B               	rlf	??___fladd+3,w
  5215  05C3  0CAB               	rrf	??___fladd+3,f
  5216  05C4  0CAA               	rrf	??___fladd+2,f
  5217  05C5  0CA9               	rrf	??___fladd+1,f
  5218  05C6  0CA8               	rrf	??___fladd,f
  5219  05C7                     u2450:	
  5220  05C7  0BAC               	decfsz	??___fladd+4,f
  5221  05C8  2DC2               	goto	u2455
  5222  05C9  082B               	movf	??___fladd+3,w
  5223  05CA  00A3               	movwf	___fladd@b+3
  5224  05CB  082A               	movf	??___fladd+2,w
  5225  05CC  00A2               	movwf	___fladd@b+2
  5226  05CD  0829               	movf	??___fladd+1,w
  5227  05CE  00A1               	movwf	___fladd@b+1
  5228  05CF  0828               	movf	??___fladd,w
  5229  05D0  00A0               	movwf	___fladd@b
  5230  05D1  0A32               	incf	___fladd@bexp,w
  5231  05D2  1903               	btfsc	3,2
  5232  05D3  2DD5               	goto	u2461
  5233  05D4  2DD6               	goto	u2460
  5234  05D5                     u2461:	
  5235  05D5  2DDA               	goto	l748
  5236  05D6                     u2460:	
  5237  05D6                     l2046:	
  5238  05D6  3001               	movlw	1
  5239  05D7  00A8               	movwf	??___fladd
  5240  05D8  0828               	movf	??___fladd,w
  5241  05D9  07B2               	addwf	___fladd@bexp,f
  5242  05DA                     l748:	
  5243  05DA  0A32               	incf	___fladd@bexp,w
  5244  05DB  1903               	btfsc	3,2
  5245  05DC  2DDE               	goto	u2471
  5246  05DD  2DDF               	goto	u2470
  5247  05DE                     u2471:	
  5248  05DE  2DE4               	goto	l2050
  5249  05DF                     u2470:	
  5250  05DF                     l2048:	
  5251  05DF  0832               	movf	___fladd@bexp,w
  5252  05E0  1D03               	btfss	3,2
  5253  05E1  2DE3               	goto	u2481
  5254  05E2  2DE4               	goto	u2480
  5255  05E3                     u2481:	
  5256  05E3  2DF2               	goto	l2056
  5257  05E4                     u2480:	
  5258  05E4                     l2050:	
  5259  05E4  3000               	movlw	0
  5260  05E5  00A3               	movwf	___fladd@b+3
  5261  05E6  3000               	movlw	0
  5262  05E7  00A2               	movwf	___fladd@b+2
  5263  05E8  3000               	movlw	0
  5264  05E9  00A1               	movwf	___fladd@b+1
  5265  05EA  3000               	movlw	0
  5266  05EB  00A0               	movwf	___fladd@b
  5267  05EC                     l2052:	
  5268  05EC  0832               	movf	___fladd@bexp,w
  5269  05ED  1D03               	btfss	3,2
  5270  05EE  2DF0               	goto	u2491
  5271  05EF  2DF1               	goto	u2490
  5272  05F0                     u2491:	
  5273  05F0  2DF2               	goto	l2056
  5274  05F1                     u2490:	
  5275  05F1                     l2054:	
  5276  05F1  01B0               	clrf	___fladd@signs
  5277  05F2                     l2056:	
  5278  05F2  1C32               	btfss	___fladd@bexp,0
  5279  05F3  2DF5               	goto	u2501
  5280  05F4  2DF6               	goto	u2500
  5281  05F5                     u2501:	
  5282  05F5  2DF8               	goto	l2060
  5283  05F6                     u2500:	
  5284  05F6                     l2058:	
  5285  05F6  17A2               	bsf	___fladd@b+2,7
  5286  05F7  2DFC               	goto	l756
  5287  05F8                     l2060:	
  5288  05F8  307F               	movlw	127
  5289  05F9  00A8               	movwf	??___fladd
  5290  05FA  0828               	movf	??___fladd,w
  5291  05FB  05A2               	andwf	___fladd@b+2,f
  5292  05FC                     l756:	
  5293  05FC  0832               	movf	___fladd@bexp,w
  5294  05FD  00A8               	movwf	??___fladd
  5295  05FE  1003               	clrc
  5296  05FF  0C28               	rrf	??___fladd,w
  5297  0600  00A9               	movwf	??___fladd+1
  5298  0601  0829               	movf	??___fladd+1,w
  5299  0602  00A3               	movwf	___fladd@b+3
  5300  0603                     l2062:	
  5301  0603  1FB0               	btfss	___fladd@signs,7
  5302  0604  2E06               	goto	u2511
  5303  0605  2E07               	goto	u2510
  5304  0606                     u2511:	
  5305  0606  2E08               	goto	l757
  5306  0607                     u2510:	
  5307  0607                     l2064:	
  5308  0607  17A3               	bsf	___fladd@b+3,7
  5309  0608                     l757:	
  5310  0608                     l727:	
  5311  0608  0008               	return
  5312  0609                     __end_of___fladd:	
  5313                           
  5314                           	psect	text27
  5315  0020                     __ptext27:	
  5316 ;; *************** function ___flmul *****************
  5317 ;; Defined at:
  5318 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;  b               4   14[BANK0 ] unsigned char 
  5321 ;;  a               4   18[BANK0 ] unsigned char 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  prod            4   34[BANK0 ] struct .
  5324 ;;  grs             4   28[BANK0 ] unsigned long 
  5325 ;;  temp            2   38[BANK0 ] struct .
  5326 ;;  bexp            1   33[BANK0 ] unsigned char 
  5327 ;;  aexp            1   32[BANK0 ] unsigned char 
  5328 ;;  sign            1   27[BANK0 ] unsigned char 
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  4   14[BANK0 ] unsigned char 
  5331 ;; Registers used:
  5332 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5338 ;;      Params:         0       8       0       0       0
  5339 ;;      Locals:         0      13       0       0       0
  5340 ;;      Temps:          0       5       0       0       0
  5341 ;;      Totals:         0      26       0       0       0
  5342 ;;Total ram usage:       26 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:    3
  5345 ;; This function calls:
  5346 ;;		__Umul8_16
  5347 ;; This function is called by:
  5348 ;;		_main
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           
  5353                           ;psect for function ___flmul
  5354  0020                     ___flmul:	
  5355  0020                     l2346:	
  5356                           ;incstack = 0
  5357                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5358                           
  5359  0020  1283               	bcf	3,5	;RP0=0, select bank0
  5360  0021  1303               	bcf	3,6	;RP1=0, select bank0
  5361  0022  0831               	movf	___flmul@b+3,w
  5362  0023  3980               	andlw	128
  5363  0024  00B6               	movwf	??___flmul
  5364  0025  0836               	movf	??___flmul,w
  5365  0026  00BB               	movwf	___flmul@sign
  5366  0027                     l2348:	
  5367  0027  0831               	movf	___flmul@b+3,w
  5368  0028  00B6               	movwf	??___flmul
  5369  0029  0736               	addwf	??___flmul,w
  5370  002A  00B7               	movwf	??___flmul+1
  5371  002B  0837               	movf	??___flmul+1,w
  5372  002C  00C1               	movwf	___flmul@bexp
  5373  002D                     l2350:	
  5374  002D  1FB0               	btfss	___flmul@b+2,7
  5375  002E  2830               	goto	u2911
  5376  002F  2831               	goto	u2910
  5377  0030                     u2911:	
  5378  0030  2832               	goto	l2354
  5379  0031                     u2910:	
  5380  0031                     l2352:	
  5381  0031  1441               	bsf	___flmul@bexp,0
  5382  0032                     l2354:	
  5383  0032  0841               	movf	___flmul@bexp,w
  5384  0033  1903               	btfsc	3,2
  5385  0034  2836               	goto	u2921
  5386  0035  2837               	goto	u2920
  5387  0036                     u2921:	
  5388  0036  2846               	goto	l2362
  5389  0037                     u2920:	
  5390  0037                     l2356:	
  5391  0037  0A41               	incf	___flmul@bexp,w
  5392  0038  1D03               	btfss	3,2
  5393  0039  283B               	goto	u2931
  5394  003A  283C               	goto	u2930
  5395  003B                     u2931:	
  5396  003B  2844               	goto	l2360
  5397  003C                     u2930:	
  5398  003C                     l2358:	
  5399  003C  3000               	movlw	0
  5400  003D  00B1               	movwf	___flmul@b+3
  5401  003E  3000               	movlw	0
  5402  003F  00B0               	movwf	___flmul@b+2
  5403  0040  3000               	movlw	0
  5404  0041  00AF               	movwf	___flmul@b+1
  5405  0042  3000               	movlw	0
  5406  0043  00AE               	movwf	___flmul@b
  5407  0044                     l2360:	
  5408  0044  17B0               	bsf	___flmul@b+2,7
  5409  0045  284E               	goto	l2364
  5410  0046                     l2362:	
  5411  0046  3000               	movlw	0
  5412  0047  00B1               	movwf	___flmul@b+3
  5413  0048  3000               	movlw	0
  5414  0049  00B0               	movwf	___flmul@b+2
  5415  004A  3000               	movlw	0
  5416  004B  00AF               	movwf	___flmul@b+1
  5417  004C  3000               	movlw	0
  5418  004D  00AE               	movwf	___flmul@b
  5419  004E                     l2364:	
  5420  004E  0835               	movf	___flmul@a+3,w
  5421  004F  3980               	andlw	128
  5422  0050  00B6               	movwf	??___flmul
  5423  0051  0836               	movf	??___flmul,w
  5424  0052  06BB               	xorwf	___flmul@sign,f
  5425  0053                     l2366:	
  5426  0053  0835               	movf	___flmul@a+3,w
  5427  0054  00B6               	movwf	??___flmul
  5428  0055  0736               	addwf	??___flmul,w
  5429  0056  00B7               	movwf	??___flmul+1
  5430  0057  0837               	movf	??___flmul+1,w
  5431  0058  00C0               	movwf	___flmul@aexp
  5432  0059                     l2368:	
  5433  0059  1FB4               	btfss	___flmul@a+2,7
  5434  005A  285C               	goto	u2941
  5435  005B  285D               	goto	u2940
  5436  005C                     u2941:	
  5437  005C  285E               	goto	l2372
  5438  005D                     u2940:	
  5439  005D                     l2370:	
  5440  005D  1440               	bsf	___flmul@aexp,0
  5441  005E                     l2372:	
  5442  005E  0840               	movf	___flmul@aexp,w
  5443  005F  1903               	btfsc	3,2
  5444  0060  2862               	goto	u2951
  5445  0061  2863               	goto	u2950
  5446  0062                     u2951:	
  5447  0062  2872               	goto	l2380
  5448  0063                     u2950:	
  5449  0063                     l2374:	
  5450  0063  0A40               	incf	___flmul@aexp,w
  5451  0064  1D03               	btfss	3,2
  5452  0065  2867               	goto	u2961
  5453  0066  2868               	goto	u2960
  5454  0067                     u2961:	
  5455  0067  2870               	goto	l2378
  5456  0068                     u2960:	
  5457  0068                     l2376:	
  5458  0068  3000               	movlw	0
  5459  0069  00B5               	movwf	___flmul@a+3
  5460  006A  3000               	movlw	0
  5461  006B  00B4               	movwf	___flmul@a+2
  5462  006C  3000               	movlw	0
  5463  006D  00B3               	movwf	___flmul@a+1
  5464  006E  3000               	movlw	0
  5465  006F  00B2               	movwf	___flmul@a
  5466  0070                     l2378:	
  5467  0070  17B4               	bsf	___flmul@a+2,7
  5468  0071  287A               	goto	l2382
  5469  0072                     l2380:	
  5470  0072  3000               	movlw	0
  5471  0073  00B5               	movwf	___flmul@a+3
  5472  0074  3000               	movlw	0
  5473  0075  00B4               	movwf	___flmul@a+2
  5474  0076  3000               	movlw	0
  5475  0077  00B3               	movwf	___flmul@a+1
  5476  0078  3000               	movlw	0
  5477  0079  00B2               	movwf	___flmul@a
  5478  007A                     l2382:	
  5479  007A  0840               	movf	___flmul@aexp,w
  5480  007B  1903               	btfsc	3,2
  5481  007C  287E               	goto	u2971
  5482  007D  287F               	goto	u2970
  5483  007E                     u2971:	
  5484  007E  2884               	goto	l2386
  5485  007F                     u2970:	
  5486  007F                     l2384:	
  5487  007F  0841               	movf	___flmul@bexp,w
  5488  0080  1D03               	btfss	3,2
  5489  0081  2883               	goto	u2981
  5490  0082  2884               	goto	u2980
  5491  0083                     u2981:	
  5492  0083  288D               	goto	l2390
  5493  0084                     u2980:	
  5494  0084                     l2386:	
  5495  0084  3000               	movlw	0
  5496  0085  00B1               	movwf	?___flmul+3
  5497  0086  3000               	movlw	0
  5498  0087  00B0               	movwf	?___flmul+2
  5499  0088  3000               	movlw	0
  5500  0089  00AF               	movwf	?___flmul+1
  5501  008A  3000               	movlw	0
  5502  008B  00AE               	movwf	?___flmul
  5503  008C  2B80               	goto	l810
  5504  008D                     l2390:	
  5505  008D  082E               	movf	___flmul@b,w
  5506  008E  00B6               	movwf	??___flmul
  5507  008F  0836               	movf	??___flmul,w
  5508  0090  00A0               	movwf	__Umul8_16@multiplicand
  5509  0091  0834               	movf	___flmul@a+2,w
  5510  0092  120A  158A  23DE  120A  118A  	fcall	__Umul8_16
  5511  0097  1283               	bcf	3,5	;RP0=0, select bank0
  5512  0098  1303               	bcf	3,6	;RP1=0, select bank0
  5513  0099  0821               	movf	?__Umul8_16+1,w
  5514  009A  00C7               	movwf	___flmul@temp+1
  5515  009B  0820               	movf	?__Umul8_16,w
  5516  009C  00C6               	movwf	___flmul@temp
  5517  009D                     l2392:	
  5518  009D  0846               	movf	___flmul@temp,w
  5519  009E  00B6               	movwf	??___flmul
  5520  009F  01B7               	clrf	??___flmul+1
  5521  00A0  01B8               	clrf	??___flmul+2
  5522  00A1  01B9               	clrf	??___flmul+3
  5523  00A2  0839               	movf	??___flmul+3,w
  5524  00A3  00BF               	movwf	___flmul@grs+3
  5525  00A4  0838               	movf	??___flmul+2,w
  5526  00A5  00BE               	movwf	___flmul@grs+2
  5527  00A6  0837               	movf	??___flmul+1,w
  5528  00A7  00BD               	movwf	___flmul@grs+1
  5529  00A8  0836               	movf	??___flmul,w
  5530  00A9  00BC               	movwf	___flmul@grs
  5531  00AA                     l2394:	
  5532  00AA  0847               	movf	___flmul@temp+1,w
  5533  00AB  00B6               	movwf	??___flmul
  5534  00AC  01B7               	clrf	??___flmul+1
  5535  00AD  01B8               	clrf	??___flmul+2
  5536  00AE  01B9               	clrf	??___flmul+3
  5537  00AF  0839               	movf	??___flmul+3,w
  5538  00B0  00C5               	movwf	___flmul@prod+3
  5539  00B1  0838               	movf	??___flmul+2,w
  5540  00B2  00C4               	movwf	___flmul@prod+2
  5541  00B3  0837               	movf	??___flmul+1,w
  5542  00B4  00C3               	movwf	___flmul@prod+1
  5543  00B5  0836               	movf	??___flmul,w
  5544  00B6  00C2               	movwf	___flmul@prod
  5545  00B7  082F               	movf	___flmul@b+1,w
  5546  00B8  00B6               	movwf	??___flmul
  5547  00B9  0836               	movf	??___flmul,w
  5548  00BA  00A0               	movwf	__Umul8_16@multiplicand
  5549  00BB  0833               	movf	___flmul@a+1,w
  5550  00BC  120A  158A  23DE  120A  118A  	fcall	__Umul8_16
  5551  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  5552  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  5553  00C3  0821               	movf	?__Umul8_16+1,w
  5554  00C4  00C7               	movwf	___flmul@temp+1
  5555  00C5  0820               	movf	?__Umul8_16,w
  5556  00C6  00C6               	movwf	___flmul@temp
  5557  00C7                     l2396:	
  5558  00C7  0846               	movf	___flmul@temp,w
  5559  00C8  00B6               	movwf	??___flmul
  5560  00C9  01B7               	clrf	??___flmul+1
  5561  00CA  01B8               	clrf	??___flmul+2
  5562  00CB  01B9               	clrf	??___flmul+3
  5563  00CC  0836               	movf	??___flmul,w
  5564  00CD  07BC               	addwf	___flmul@grs,f
  5565  00CE  0837               	movf	??___flmul+1,w
  5566  00CF  1103               	clrz
  5567  00D0  1803               	skipnc
  5568  00D1  3E01               	addlw	1
  5569  00D2  1903               	skipnz
  5570  00D3  28D5               	goto	u2991
  5571  00D4  07BD               	addwf	___flmul@grs+1,f
  5572  00D5                     u2991:	
  5573  00D5  0838               	movf	??___flmul+2,w
  5574  00D6  1103               	clrz
  5575  00D7  1803               	skipnc
  5576  00D8  3E01               	addlw	1
  5577  00D9  1903               	skipnz
  5578  00DA  28DC               	goto	u2992
  5579  00DB  07BE               	addwf	___flmul@grs+2,f
  5580  00DC                     u2992:	
  5581  00DC  0839               	movf	??___flmul+3,w
  5582  00DD  1103               	clrz
  5583  00DE  1803               	skipnc
  5584  00DF  3E01               	addlw	1
  5585  00E0  1903               	skipnz
  5586  00E1  28E3               	goto	u2993
  5587  00E2  07BF               	addwf	___flmul@grs+3,f
  5588  00E3                     u2993:	
  5589  00E3                     l2398:	
  5590  00E3  0847               	movf	___flmul@temp+1,w
  5591  00E4  00B6               	movwf	??___flmul
  5592  00E5  01B7               	clrf	??___flmul+1
  5593  00E6  01B8               	clrf	??___flmul+2
  5594  00E7  01B9               	clrf	??___flmul+3
  5595  00E8  0836               	movf	??___flmul,w
  5596  00E9  07C2               	addwf	___flmul@prod,f
  5597  00EA  0837               	movf	??___flmul+1,w
  5598  00EB  1103               	clrz
  5599  00EC  1803               	skipnc
  5600  00ED  3E01               	addlw	1
  5601  00EE  1903               	skipnz
  5602  00EF  28F1               	goto	u3001
  5603  00F0  07C3               	addwf	___flmul@prod+1,f
  5604  00F1                     u3001:	
  5605  00F1  0838               	movf	??___flmul+2,w
  5606  00F2  1103               	clrz
  5607  00F3  1803               	skipnc
  5608  00F4  3E01               	addlw	1
  5609  00F5  1903               	skipnz
  5610  00F6  28F8               	goto	u3002
  5611  00F7  07C4               	addwf	___flmul@prod+2,f
  5612  00F8                     u3002:	
  5613  00F8  0839               	movf	??___flmul+3,w
  5614  00F9  1103               	clrz
  5615  00FA  1803               	skipnc
  5616  00FB  3E01               	addlw	1
  5617  00FC  1903               	skipnz
  5618  00FD  28FF               	goto	u3003
  5619  00FE  07C5               	addwf	___flmul@prod+3,f
  5620  00FF                     u3003:	
  5621  00FF  0830               	movf	___flmul@b+2,w
  5622  0100  00B6               	movwf	??___flmul
  5623  0101  0836               	movf	??___flmul,w
  5624  0102  00A0               	movwf	__Umul8_16@multiplicand
  5625  0103  0832               	movf	___flmul@a,w
  5626  0104  120A  158A  23DE  120A  118A  	fcall	__Umul8_16
  5627  0109  1283               	bcf	3,5	;RP0=0, select bank0
  5628  010A  1303               	bcf	3,6	;RP1=0, select bank0
  5629  010B  0821               	movf	?__Umul8_16+1,w
  5630  010C  00C7               	movwf	___flmul@temp+1
  5631  010D  0820               	movf	?__Umul8_16,w
  5632  010E  00C6               	movwf	___flmul@temp
  5633  010F                     l2400:	
  5634  010F  0846               	movf	___flmul@temp,w
  5635  0110  00B6               	movwf	??___flmul
  5636  0111  01B7               	clrf	??___flmul+1
  5637  0112  01B8               	clrf	??___flmul+2
  5638  0113  01B9               	clrf	??___flmul+3
  5639  0114  0836               	movf	??___flmul,w
  5640  0115  07BC               	addwf	___flmul@grs,f
  5641  0116  0837               	movf	??___flmul+1,w
  5642  0117  1103               	clrz
  5643  0118  1803               	skipnc
  5644  0119  3E01               	addlw	1
  5645  011A  1903               	skipnz
  5646  011B  291D               	goto	u3011
  5647  011C  07BD               	addwf	___flmul@grs+1,f
  5648  011D                     u3011:	
  5649  011D  0838               	movf	??___flmul+2,w
  5650  011E  1103               	clrz
  5651  011F  1803               	skipnc
  5652  0120  3E01               	addlw	1
  5653  0121  1903               	skipnz
  5654  0122  2924               	goto	u3012
  5655  0123  07BE               	addwf	___flmul@grs+2,f
  5656  0124                     u3012:	
  5657  0124  0839               	movf	??___flmul+3,w
  5658  0125  1103               	clrz
  5659  0126  1803               	skipnc
  5660  0127  3E01               	addlw	1
  5661  0128  1903               	skipnz
  5662  0129  292B               	goto	u3013
  5663  012A  07BF               	addwf	___flmul@grs+3,f
  5664  012B                     u3013:	
  5665  012B                     l2402:	
  5666  012B  0847               	movf	___flmul@temp+1,w
  5667  012C  00B6               	movwf	??___flmul
  5668  012D  01B7               	clrf	??___flmul+1
  5669  012E  01B8               	clrf	??___flmul+2
  5670  012F  01B9               	clrf	??___flmul+3
  5671  0130  0836               	movf	??___flmul,w
  5672  0131  07C2               	addwf	___flmul@prod,f
  5673  0132  0837               	movf	??___flmul+1,w
  5674  0133  1103               	clrz
  5675  0134  1803               	skipnc
  5676  0135  3E01               	addlw	1
  5677  0136  1903               	skipnz
  5678  0137  2939               	goto	u3021
  5679  0138  07C3               	addwf	___flmul@prod+1,f
  5680  0139                     u3021:	
  5681  0139  0838               	movf	??___flmul+2,w
  5682  013A  1103               	clrz
  5683  013B  1803               	skipnc
  5684  013C  3E01               	addlw	1
  5685  013D  1903               	skipnz
  5686  013E  2940               	goto	u3022
  5687  013F  07C4               	addwf	___flmul@prod+2,f
  5688  0140                     u3022:	
  5689  0140  0839               	movf	??___flmul+3,w
  5690  0141  1103               	clrz
  5691  0142  1803               	skipnc
  5692  0143  3E01               	addlw	1
  5693  0144  1903               	skipnz
  5694  0145  2947               	goto	u3023
  5695  0146  07C5               	addwf	___flmul@prod+3,f
  5696  0147                     u3023:	
  5697  0147                     l2404:	
  5698  0147  3008               	movlw	8
  5699  0148  00B6               	movwf	??___flmul
  5700  0149                     u3035:	
  5701  0149  1003               	clrc
  5702  014A  0DBC               	rlf	___flmul@grs,f
  5703  014B  0DBD               	rlf	___flmul@grs+1,f
  5704  014C  0DBE               	rlf	___flmul@grs+2,f
  5705  014D  0DBF               	rlf	___flmul@grs+3,f
  5706  014E  0BB6               	decfsz	??___flmul,f
  5707  014F  2949               	goto	u3035
  5708  0150                     l2406:	
  5709  0150  082F               	movf	___flmul@b+1,w
  5710  0151  00B6               	movwf	??___flmul
  5711  0152  0836               	movf	??___flmul,w
  5712  0153  00A0               	movwf	__Umul8_16@multiplicand
  5713  0154  0832               	movf	___flmul@a,w
  5714  0155  120A  158A  23DE  120A  118A  	fcall	__Umul8_16
  5715  015A  1283               	bcf	3,5	;RP0=0, select bank0
  5716  015B  1303               	bcf	3,6	;RP1=0, select bank0
  5717  015C  0821               	movf	?__Umul8_16+1,w
  5718  015D  00C7               	movwf	___flmul@temp+1
  5719  015E  0820               	movf	?__Umul8_16,w
  5720  015F  00C6               	movwf	___flmul@temp
  5721  0160                     l2408:	
  5722  0160  0846               	movf	___flmul@temp,w
  5723  0161  00B6               	movwf	??___flmul
  5724  0162  0847               	movf	___flmul@temp+1,w
  5725  0163  00B7               	movwf	??___flmul+1
  5726  0164  01B8               	clrf	??___flmul+2
  5727  0165  01B9               	clrf	??___flmul+3
  5728  0166  0836               	movf	??___flmul,w
  5729  0167  07BC               	addwf	___flmul@grs,f
  5730  0168  0837               	movf	??___flmul+1,w
  5731  0169  1103               	clrz
  5732  016A  1803               	skipnc
  5733  016B  3E01               	addlw	1
  5734  016C  1903               	skipnz
  5735  016D  296F               	goto	u3041
  5736  016E  07BD               	addwf	___flmul@grs+1,f
  5737  016F                     u3041:	
  5738  016F  0838               	movf	??___flmul+2,w
  5739  0170  1103               	clrz
  5740  0171  1803               	skipnc
  5741  0172  3E01               	addlw	1
  5742  0173  1903               	skipnz
  5743  0174  2976               	goto	u3042
  5744  0175  07BE               	addwf	___flmul@grs+2,f
  5745  0176                     u3042:	
  5746  0176  0839               	movf	??___flmul+3,w
  5747  0177  1103               	clrz
  5748  0178  1803               	skipnc
  5749  0179  3E01               	addlw	1
  5750  017A  1903               	skipnz
  5751  017B  297D               	goto	u3043
  5752  017C  07BF               	addwf	___flmul@grs+3,f
  5753  017D                     u3043:	
  5754  017D                     l2410:	
  5755  017D  082E               	movf	___flmul@b,w
  5756  017E  00B6               	movwf	??___flmul
  5757  017F  0836               	movf	??___flmul,w
  5758  0180  00A0               	movwf	__Umul8_16@multiplicand
  5759  0181  0833               	movf	___flmul@a+1,w
  5760  0182  120A  158A  23DE  120A  118A  	fcall	__Umul8_16
  5761  0187  1283               	bcf	3,5	;RP0=0, select bank0
  5762  0188  1303               	bcf	3,6	;RP1=0, select bank0
  5763  0189  0821               	movf	?__Umul8_16+1,w
  5764  018A  00C7               	movwf	___flmul@temp+1
  5765  018B  0820               	movf	?__Umul8_16,w
  5766  018C  00C6               	movwf	___flmul@temp
  5767  018D                     l2412:	
  5768  018D  0846               	movf	___flmul@temp,w
  5769  018E  00B6               	movwf	??___flmul
  5770  018F  0847               	movf	___flmul@temp+1,w
  5771  0190  00B7               	movwf	??___flmul+1
  5772  0191  01B8               	clrf	??___flmul+2
  5773  0192  01B9               	clrf	??___flmul+3
  5774  0193  0836               	movf	??___flmul,w
  5775  0194  07BC               	addwf	___flmul@grs,f
  5776  0195  0837               	movf	??___flmul+1,w
  5777  0196  1103               	clrz
  5778  0197  1803               	skipnc
  5779  0198  3E01               	addlw	1
  5780  0199  1903               	skipnz
  5781  019A  299C               	goto	u3051
  5782  019B  07BD               	addwf	___flmul@grs+1,f
  5783  019C                     u3051:	
  5784  019C  0838               	movf	??___flmul+2,w
  5785  019D  1103               	clrz
  5786  019E  1803               	skipnc
  5787  019F  3E01               	addlw	1
  5788  01A0  1903               	skipnz
  5789  01A1  29A3               	goto	u3052
  5790  01A2  07BE               	addwf	___flmul@grs+2,f
  5791  01A3                     u3052:	
  5792  01A3  0839               	movf	??___flmul+3,w
  5793  01A4  1103               	clrz
  5794  01A5  1803               	skipnc
  5795  01A6  3E01               	addlw	1
  5796  01A7  1903               	skipnz
  5797  01A8  29AA               	goto	u3053
  5798  01A9  07BF               	addwf	___flmul@grs+3,f
  5799  01AA                     u3053:	
  5800  01AA                     l2414:	
  5801  01AA  3008               	movlw	8
  5802  01AB  00B6               	movwf	??___flmul
  5803  01AC                     u3065:	
  5804  01AC  1003               	clrc
  5805  01AD  0DBC               	rlf	___flmul@grs,f
  5806  01AE  0DBD               	rlf	___flmul@grs+1,f
  5807  01AF  0DBE               	rlf	___flmul@grs+2,f
  5808  01B0  0DBF               	rlf	___flmul@grs+3,f
  5809  01B1  0BB6               	decfsz	??___flmul,f
  5810  01B2  29AC               	goto	u3065
  5811  01B3  082E               	movf	___flmul@b,w
  5812  01B4  00B6               	movwf	??___flmul
  5813  01B5  0836               	movf	??___flmul,w
  5814  01B6  00A0               	movwf	__Umul8_16@multiplicand
  5815  01B7  0832               	movf	___flmul@a,w
  5816  01B8  120A  158A  23DE  120A  118A  	fcall	__Umul8_16
  5817  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  5818  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  5819  01BF  0821               	movf	?__Umul8_16+1,w
  5820  01C0  00C7               	movwf	___flmul@temp+1
  5821  01C1  0820               	movf	?__Umul8_16,w
  5822  01C2  00C6               	movwf	___flmul@temp
  5823  01C3                     l2416:	
  5824  01C3  0846               	movf	___flmul@temp,w
  5825  01C4  00B6               	movwf	??___flmul
  5826  01C5  0847               	movf	___flmul@temp+1,w
  5827  01C6  00B7               	movwf	??___flmul+1
  5828  01C7  01B8               	clrf	??___flmul+2
  5829  01C8  01B9               	clrf	??___flmul+3
  5830  01C9  0836               	movf	??___flmul,w
  5831  01CA  07BC               	addwf	___flmul@grs,f
  5832  01CB  0837               	movf	??___flmul+1,w
  5833  01CC  1103               	clrz
  5834  01CD  1803               	skipnc
  5835  01CE  3E01               	addlw	1
  5836  01CF  1903               	skipnz
  5837  01D0  29D2               	goto	u3071
  5838  01D1  07BD               	addwf	___flmul@grs+1,f
  5839  01D2                     u3071:	
  5840  01D2  0838               	movf	??___flmul+2,w
  5841  01D3  1103               	clrz
  5842  01D4  1803               	skipnc
  5843  01D5  3E01               	addlw	1
  5844  01D6  1903               	skipnz
  5845  01D7  29D9               	goto	u3072
  5846  01D8  07BE               	addwf	___flmul@grs+2,f
  5847  01D9                     u3072:	
  5848  01D9  0839               	movf	??___flmul+3,w
  5849  01DA  1103               	clrz
  5850  01DB  1803               	skipnc
  5851  01DC  3E01               	addlw	1
  5852  01DD  1903               	skipnz
  5853  01DE  29E0               	goto	u3073
  5854  01DF  07BF               	addwf	___flmul@grs+3,f
  5855  01E0                     u3073:	
  5856  01E0                     l2418:	
  5857  01E0  082F               	movf	___flmul@b+1,w
  5858  01E1  00B6               	movwf	??___flmul
  5859  01E2  0836               	movf	??___flmul,w
  5860  01E3  00A0               	movwf	__Umul8_16@multiplicand
  5861  01E4  0834               	movf	___flmul@a+2,w
  5862  01E5  120A  158A  23DE  120A  118A  	fcall	__Umul8_16
  5863  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  5864  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  5865  01EC  0821               	movf	?__Umul8_16+1,w
  5866  01ED  00C7               	movwf	___flmul@temp+1
  5867  01EE  0820               	movf	?__Umul8_16,w
  5868  01EF  00C6               	movwf	___flmul@temp
  5869  01F0  0846               	movf	___flmul@temp,w
  5870  01F1  00B6               	movwf	??___flmul
  5871  01F2  0847               	movf	___flmul@temp+1,w
  5872  01F3  00B7               	movwf	??___flmul+1
  5873  01F4  01B8               	clrf	??___flmul+2
  5874  01F5  01B9               	clrf	??___flmul+3
  5875  01F6  0836               	movf	??___flmul,w
  5876  01F7  07C2               	addwf	___flmul@prod,f
  5877  01F8  0837               	movf	??___flmul+1,w
  5878  01F9  1103               	clrz
  5879  01FA  1803               	skipnc
  5880  01FB  3E01               	addlw	1
  5881  01FC  1903               	skipnz
  5882  01FD  29FF               	goto	u3081
  5883  01FE  07C3               	addwf	___flmul@prod+1,f
  5884  01FF                     u3081:	
  5885  01FF  0838               	movf	??___flmul+2,w
  5886  0200  1103               	clrz
  5887  0201  1803               	skipnc
  5888  0202  3E01               	addlw	1
  5889  0203  1903               	skipnz
  5890  0204  2A06               	goto	u3082
  5891  0205  07C4               	addwf	___flmul@prod+2,f
  5892  0206                     u3082:	
  5893  0206  0839               	movf	??___flmul+3,w
  5894  0207  1103               	clrz
  5895  0208  1803               	skipnc
  5896  0209  3E01               	addlw	1
  5897  020A  1903               	skipnz
  5898  020B  2A0D               	goto	u3083
  5899  020C  07C5               	addwf	___flmul@prod+3,f
  5900  020D                     u3083:	
  5901  020D                     l2420:	
  5902  020D  0830               	movf	___flmul@b+2,w
  5903  020E  00B6               	movwf	??___flmul
  5904  020F  0836               	movf	??___flmul,w
  5905  0210  00A0               	movwf	__Umul8_16@multiplicand
  5906  0211  0833               	movf	___flmul@a+1,w
  5907  0212  120A  158A  23DE  120A  118A  	fcall	__Umul8_16
  5908  0217  1283               	bcf	3,5	;RP0=0, select bank0
  5909  0218  1303               	bcf	3,6	;RP1=0, select bank0
  5910  0219  0821               	movf	?__Umul8_16+1,w
  5911  021A  00C7               	movwf	___flmul@temp+1
  5912  021B  0820               	movf	?__Umul8_16,w
  5913  021C  00C6               	movwf	___flmul@temp
  5914  021D                     l2422:	
  5915  021D  0846               	movf	___flmul@temp,w
  5916  021E  00B6               	movwf	??___flmul
  5917  021F  0847               	movf	___flmul@temp+1,w
  5918  0220  00B7               	movwf	??___flmul+1
  5919  0221  01B8               	clrf	??___flmul+2
  5920  0222  01B9               	clrf	??___flmul+3
  5921  0223  0836               	movf	??___flmul,w
  5922  0224  07C2               	addwf	___flmul@prod,f
  5923  0225  0837               	movf	??___flmul+1,w
  5924  0226  1103               	clrz
  5925  0227  1803               	skipnc
  5926  0228  3E01               	addlw	1
  5927  0229  1903               	skipnz
  5928  022A  2A2C               	goto	u3091
  5929  022B  07C3               	addwf	___flmul@prod+1,f
  5930  022C                     u3091:	
  5931  022C  0838               	movf	??___flmul+2,w
  5932  022D  1103               	clrz
  5933  022E  1803               	skipnc
  5934  022F  3E01               	addlw	1
  5935  0230  1903               	skipnz
  5936  0231  2A33               	goto	u3092
  5937  0232  07C4               	addwf	___flmul@prod+2,f
  5938  0233                     u3092:	
  5939  0233  0839               	movf	??___flmul+3,w
  5940  0234  1103               	clrz
  5941  0235  1803               	skipnc
  5942  0236  3E01               	addlw	1
  5943  0237  1903               	skipnz
  5944  0238  2A3A               	goto	u3093
  5945  0239  07C5               	addwf	___flmul@prod+3,f
  5946  023A                     u3093:	
  5947  023A  0830               	movf	___flmul@b+2,w
  5948  023B  00B6               	movwf	??___flmul
  5949  023C  0836               	movf	??___flmul,w
  5950  023D  00A0               	movwf	__Umul8_16@multiplicand
  5951  023E  0834               	movf	___flmul@a+2,w
  5952  023F  120A  158A  23DE  120A  118A  	fcall	__Umul8_16
  5953  0244  1283               	bcf	3,5	;RP0=0, select bank0
  5954  0245  1303               	bcf	3,6	;RP1=0, select bank0
  5955  0246  0821               	movf	?__Umul8_16+1,w
  5956  0247  00C7               	movwf	___flmul@temp+1
  5957  0248  0820               	movf	?__Umul8_16,w
  5958  0249  00C6               	movwf	___flmul@temp
  5959  024A                     l2424:	
  5960  024A  0846               	movf	___flmul@temp,w
  5961  024B  00B6               	movwf	??___flmul
  5962  024C  0847               	movf	___flmul@temp+1,w
  5963  024D  00B7               	movwf	??___flmul+1
  5964  024E  01B8               	clrf	??___flmul+2
  5965  024F  01B9               	clrf	??___flmul+3
  5966  0250  3008               	movlw	8
  5967  0251                     u3105:	
  5968  0251  1003               	clrc
  5969  0252  0DB6               	rlf	??___flmul,f
  5970  0253  0DB7               	rlf	??___flmul+1,f
  5971  0254  0DB8               	rlf	??___flmul+2,f
  5972  0255  0DB9               	rlf	??___flmul+3,f
  5973  0256                     u3100:	
  5974  0256  3EFF               	addlw	-1
  5975  0257  1D03               	skipz
  5976  0258  2A51               	goto	u3105
  5977  0259  0836               	movf	??___flmul,w
  5978  025A  07C2               	addwf	___flmul@prod,f
  5979  025B  0837               	movf	??___flmul+1,w
  5980  025C  1103               	clrz
  5981  025D  1803               	skipnc
  5982  025E  3E01               	addlw	1
  5983  025F  1903               	skipnz
  5984  0260  2A62               	goto	u3111
  5985  0261  07C3               	addwf	___flmul@prod+1,f
  5986  0262                     u3111:	
  5987  0262  0838               	movf	??___flmul+2,w
  5988  0263  1103               	clrz
  5989  0264  1803               	skipnc
  5990  0265  3E01               	addlw	1
  5991  0266  1903               	skipnz
  5992  0267  2A69               	goto	u3112
  5993  0268  07C4               	addwf	___flmul@prod+2,f
  5994  0269                     u3112:	
  5995  0269  0839               	movf	??___flmul+3,w
  5996  026A  1103               	clrz
  5997  026B  1803               	skipnc
  5998  026C  3E01               	addlw	1
  5999  026D  1903               	skipnz
  6000  026E  2A70               	goto	u3113
  6001  026F  07C5               	addwf	___flmul@prod+3,f
  6002  0270                     u3113:	
  6003  0270                     l2426:	
  6004  0270  083C               	movf	___flmul@grs,w
  6005  0271  00B6               	movwf	??___flmul
  6006  0272  083D               	movf	___flmul@grs+1,w
  6007  0273  00B7               	movwf	??___flmul+1
  6008  0274  083E               	movf	___flmul@grs+2,w
  6009  0275  00B8               	movwf	??___flmul+2
  6010  0276  083F               	movf	___flmul@grs+3,w
  6011  0277  00B9               	movwf	??___flmul+3
  6012  0278  3018               	movlw	24
  6013  0279                     u3125:	
  6014  0279  1003               	clrc
  6015  027A  0CB9               	rrf	??___flmul+3,f
  6016  027B  0CB8               	rrf	??___flmul+2,f
  6017  027C  0CB7               	rrf	??___flmul+1,f
  6018  027D  0CB6               	rrf	??___flmul,f
  6019  027E                     u3120:	
  6020  027E  3EFF               	addlw	-1
  6021  027F  1D03               	skipz
  6022  0280  2A79               	goto	u3125
  6023  0281  0836               	movf	??___flmul,w
  6024  0282  07C2               	addwf	___flmul@prod,f
  6025  0283  0837               	movf	??___flmul+1,w
  6026  0284  1103               	clrz
  6027  0285  1803               	skipnc
  6028  0286  3E01               	addlw	1
  6029  0287  1903               	skipnz
  6030  0288  2A8A               	goto	u3131
  6031  0289  07C3               	addwf	___flmul@prod+1,f
  6032  028A                     u3131:	
  6033  028A  0838               	movf	??___flmul+2,w
  6034  028B  1103               	clrz
  6035  028C  1803               	skipnc
  6036  028D  3E01               	addlw	1
  6037  028E  1903               	skipnz
  6038  028F  2A91               	goto	u3132
  6039  0290  07C4               	addwf	___flmul@prod+2,f
  6040  0291                     u3132:	
  6041  0291  0839               	movf	??___flmul+3,w
  6042  0292  1103               	clrz
  6043  0293  1803               	skipnc
  6044  0294  3E01               	addlw	1
  6045  0295  1903               	skipnz
  6046  0296  2A98               	goto	u3133
  6047  0297  07C5               	addwf	___flmul@prod+3,f
  6048  0298                     u3133:	
  6049  0298                     l2428:	
  6050  0298  3008               	movlw	8
  6051  0299  00B6               	movwf	??___flmul
  6052  029A                     u3145:	
  6053  029A  1003               	clrc
  6054  029B  0DBC               	rlf	___flmul@grs,f
  6055  029C  0DBD               	rlf	___flmul@grs+1,f
  6056  029D  0DBE               	rlf	___flmul@grs+2,f
  6057  029E  0DBF               	rlf	___flmul@grs+3,f
  6058  029F  0BB6               	decfsz	??___flmul,f
  6059  02A0  2A9A               	goto	u3145
  6060  02A1                     l2430:	
  6061  02A1  0841               	movf	___flmul@bexp,w
  6062  02A2  0740               	addwf	___flmul@aexp,w
  6063  02A3  00B6               	movwf	??___flmul
  6064  02A4  01B7               	clrf	??___flmul+1
  6065  02A5  0DB7               	rlf	??___flmul+1,f
  6066  02A6  0836               	movf	??___flmul,w
  6067  02A7  3E82               	addlw	130
  6068  02A8  00C6               	movwf	___flmul@temp
  6069  02A9  0837               	movf	??___flmul+1,w
  6070  02AA  1803               	skipnc
  6071  02AB  3E01               	addlw	1
  6072  02AC  3EFF               	addlw	255
  6073  02AD  00C7               	movwf	___flmul@temp+1
  6074  02AE  2ACC               	goto	l2442
  6075  02AF                     l2432:	
  6076  02AF  3001               	movlw	1
  6077  02B0  00B6               	movwf	??___flmul
  6078  02B1                     u3155:	
  6079  02B1  1003               	clrc
  6080  02B2  0DC2               	rlf	___flmul@prod,f
  6081  02B3  0DC3               	rlf	___flmul@prod+1,f
  6082  02B4  0DC4               	rlf	___flmul@prod+2,f
  6083  02B5  0DC5               	rlf	___flmul@prod+3,f
  6084  02B6  0BB6               	decfsz	??___flmul,f
  6085  02B7  2AB1               	goto	u3155
  6086  02B8                     l2434:	
  6087  02B8  1FBF               	btfss	___flmul@grs+3,7
  6088  02B9  2ABB               	goto	u3161
  6089  02BA  2ABC               	goto	u3160
  6090  02BB                     u3161:	
  6091  02BB  2ABD               	goto	l2438
  6092  02BC                     u3160:	
  6093  02BC                     l2436:	
  6094  02BC  1442               	bsf	___flmul@prod,0
  6095  02BD                     l2438:	
  6096  02BD  3001               	movlw	1
  6097  02BE  00B6               	movwf	??___flmul
  6098  02BF                     u3175:	
  6099  02BF  1003               	clrc
  6100  02C0  0DBC               	rlf	___flmul@grs,f
  6101  02C1  0DBD               	rlf	___flmul@grs+1,f
  6102  02C2  0DBE               	rlf	___flmul@grs+2,f
  6103  02C3  0DBF               	rlf	___flmul@grs+3,f
  6104  02C4  0BB6               	decfsz	??___flmul,f
  6105  02C5  2ABF               	goto	u3175
  6106  02C6                     l2440:	
  6107  02C6  30FF               	movlw	255
  6108  02C7  07C6               	addwf	___flmul@temp,f
  6109  02C8  1803               	skipnc
  6110  02C9  0AC7               	incf	___flmul@temp+1,f
  6111  02CA  30FF               	movlw	255
  6112  02CB  07C7               	addwf	___flmul@temp+1,f
  6113  02CC                     l2442:	
  6114  02CC  1FC4               	btfss	___flmul@prod+2,7
  6115  02CD  2ACF               	goto	u3181
  6116  02CE  2AD0               	goto	u3180
  6117  02CF                     u3181:	
  6118  02CF  2AAF               	goto	l2432
  6119  02D0                     u3180:	
  6120  02D0                     l2444:	
  6121  02D0  01C0               	clrf	___flmul@aexp
  6122  02D1                     l2446:	
  6123  02D1  1FBF               	btfss	___flmul@grs+3,7
  6124  02D2  2AD4               	goto	u3191
  6125  02D3  2AD5               	goto	u3190
  6126  02D4                     u3191:	
  6127  02D4  2AF1               	goto	l2454
  6128  02D5                     u3190:	
  6129  02D5                     l2448:	
  6130  02D5  30FF               	movlw	255
  6131  02D6  053C               	andwf	___flmul@grs,w
  6132  02D7  00B6               	movwf	??___flmul
  6133  02D8  30FF               	movlw	255
  6134  02D9  053D               	andwf	___flmul@grs+1,w
  6135  02DA  00B7               	movwf	??___flmul+1
  6136  02DB  30FF               	movlw	255
  6137  02DC  053E               	andwf	___flmul@grs+2,w
  6138  02DD  00B8               	movwf	??___flmul+2
  6139  02DE  307F               	movlw	127
  6140  02DF  053F               	andwf	___flmul@grs+3,w
  6141  02E0  00B9               	movwf	??___flmul+3
  6142  02E1  0839               	movf	??___flmul+3,w
  6143  02E2  0438               	iorwf	??___flmul+2,w
  6144  02E3  0437               	iorwf	??___flmul+1,w
  6145  02E4  0436               	iorwf	??___flmul,w
  6146  02E5  1903               	skipnz
  6147  02E6  2AE8               	goto	u3201
  6148  02E7  2AE9               	goto	u3200
  6149  02E8                     u3201:	
  6150  02E8  2AEC               	goto	l816
  6151  02E9                     u3200:	
  6152  02E9                     l2450:	
  6153  02E9  01C0               	clrf	___flmul@aexp
  6154  02EA  0AC0               	incf	___flmul@aexp,f
  6155  02EB  2AF1               	goto	l2454
  6156  02EC                     l816:	
  6157  02EC  1C42               	btfss	___flmul@prod,0
  6158  02ED  2AEF               	goto	u3211
  6159  02EE  2AF0               	goto	u3210
  6160  02EF                     u3211:	
  6161  02EF  2AF1               	goto	l2454
  6162  02F0                     u3210:	
  6163  02F0  2AE9               	goto	l2450
  6164  02F1                     l2454:	
  6165  02F1  0840               	movf	___flmul@aexp,w
  6166  02F2  1903               	btfsc	3,2
  6167  02F3  2AF5               	goto	u3221
  6168  02F4  2AF6               	goto	u3220
  6169  02F5                     u3221:	
  6170  02F5  2B27               	goto	l2464
  6171  02F6                     u3220:	
  6172  02F6                     l2456:	
  6173  02F6  3001               	movlw	1
  6174  02F7  07C2               	addwf	___flmul@prod,f
  6175  02F8  3000               	movlw	0
  6176  02F9  1803               	skipnc
  6177  02FA  3001               	movlw	1
  6178  02FB  07C3               	addwf	___flmul@prod+1,f
  6179  02FC  3000               	movlw	0
  6180  02FD  1803               	skipnc
  6181  02FE  3001               	movlw	1
  6182  02FF  07C4               	addwf	___flmul@prod+2,f
  6183  0300  3000               	movlw	0
  6184  0301  1803               	skipnc
  6185  0302  3001               	movlw	1
  6186  0303  07C5               	addwf	___flmul@prod+3,f
  6187  0304                     l2458:	
  6188  0304  1C45               	btfss	___flmul@prod+3,0
  6189  0305  2B07               	goto	u3231
  6190  0306  2B08               	goto	u3230
  6191  0307                     u3231:	
  6192  0307  2B27               	goto	l2464
  6193  0308                     u3230:	
  6194  0308                     l2460:	
  6195  0308  0842               	movf	___flmul@prod,w
  6196  0309  00B6               	movwf	??___flmul
  6197  030A  0843               	movf	___flmul@prod+1,w
  6198  030B  00B7               	movwf	??___flmul+1
  6199  030C  0844               	movf	___flmul@prod+2,w
  6200  030D  00B8               	movwf	??___flmul+2
  6201  030E  0845               	movf	___flmul@prod+3,w
  6202  030F  00B9               	movwf	??___flmul+3
  6203  0310  3001               	movlw	1
  6204  0311  00BA               	movwf	??___flmul+4
  6205  0312                     u3245:	
  6206  0312  0D39               	rlf	??___flmul+3,w
  6207  0313  0CB9               	rrf	??___flmul+3,f
  6208  0314  0CB8               	rrf	??___flmul+2,f
  6209  0315  0CB7               	rrf	??___flmul+1,f
  6210  0316  0CB6               	rrf	??___flmul,f
  6211  0317                     u3240:	
  6212  0317  0BBA               	decfsz	??___flmul+4,f
  6213  0318  2B12               	goto	u3245
  6214  0319  0839               	movf	??___flmul+3,w
  6215  031A  00C5               	movwf	___flmul@prod+3
  6216  031B  0838               	movf	??___flmul+2,w
  6217  031C  00C4               	movwf	___flmul@prod+2
  6218  031D  0837               	movf	??___flmul+1,w
  6219  031E  00C3               	movwf	___flmul@prod+1
  6220  031F  0836               	movf	??___flmul,w
  6221  0320  00C2               	movwf	___flmul@prod
  6222  0321                     l2462:	
  6223  0321  3001               	movlw	1
  6224  0322  07C6               	addwf	___flmul@temp,f
  6225  0323  1803               	skipnc
  6226  0324  0AC7               	incf	___flmul@temp+1,f
  6227  0325  3000               	movlw	0
  6228  0326  07C7               	addwf	___flmul@temp+1,f
  6229  0327                     l2464:	
  6230  0327  0847               	movf	___flmul@temp+1,w
  6231  0328  3A80               	xorlw	128
  6232  0329  00FF               	movwf	btemp+1
  6233  032A  3080               	movlw	128
  6234  032B  027F               	subwf	btemp+1,w
  6235  032C  1D03               	skipz
  6236  032D  2B30               	goto	u3255
  6237  032E  30FF               	movlw	255
  6238  032F  0246               	subwf	___flmul@temp,w
  6239  0330                     u3255:	
  6240  0330  1C03               	skipc
  6241  0331  2B33               	goto	u3251
  6242  0332  2B34               	goto	u3250
  6243  0333                     u3251:	
  6244  0333  2B3F               	goto	l2468
  6245  0334                     u3250:	
  6246  0334                     l2466:	
  6247  0334  307F               	movlw	127
  6248  0335  1283               	bcf	3,5	;RP0=0, select bank0
  6249  0336  1303               	bcf	3,6	;RP1=0, select bank0
  6250  0337  00C5               	movwf	___flmul@prod+3
  6251  0338  3080               	movlw	128
  6252  0339  00C4               	movwf	___flmul@prod+2
  6253  033A  3000               	movlw	0
  6254  033B  00C3               	movwf	___flmul@prod+1
  6255  033C  3000               	movlw	0
  6256  033D  00C2               	movwf	___flmul@prod
  6257  033E  2B74               	goto	l822
  6258  033F                     l2468:	
  6259  033F  1283               	bcf	3,5	;RP0=0, select bank0
  6260  0340  1303               	bcf	3,6	;RP1=0, select bank0
  6261  0341  0847               	movf	___flmul@temp+1,w
  6262  0342  3A80               	xorlw	128
  6263  0343  00FF               	movwf	btemp+1
  6264  0344  3080               	movlw	128
  6265  0345  027F               	subwf	btemp+1,w
  6266  0346  1D03               	skipz
  6267  0347  2B4A               	goto	u3265
  6268  0348  3001               	movlw	1
  6269  0349  0246               	subwf	___flmul@temp,w
  6270  034A                     u3265:	
  6271  034A  1803               	skipnc
  6272  034B  2B4D               	goto	u3261
  6273  034C  2B4E               	goto	u3260
  6274  034D                     u3261:	
  6275  034D  2B5A               	goto	l2474
  6276  034E                     u3260:	
  6277  034E                     l2470:	
  6278  034E  3000               	movlw	0
  6279  034F  1283               	bcf	3,5	;RP0=0, select bank0
  6280  0350  1303               	bcf	3,6	;RP1=0, select bank0
  6281  0351  00C5               	movwf	___flmul@prod+3
  6282  0352  3000               	movlw	0
  6283  0353  00C4               	movwf	___flmul@prod+2
  6284  0354  3000               	movlw	0
  6285  0355  00C3               	movwf	___flmul@prod+1
  6286  0356  3000               	movlw	0
  6287  0357  00C2               	movwf	___flmul@prod
  6288  0358                     l2472:	
  6289  0358  01BB               	clrf	___flmul@sign
  6290  0359  2B74               	goto	l822
  6291  035A                     l2474:	
  6292  035A  1283               	bcf	3,5	;RP0=0, select bank0
  6293  035B  1303               	bcf	3,6	;RP1=0, select bank0
  6294  035C  0846               	movf	___flmul@temp,w
  6295  035D  00B6               	movwf	??___flmul
  6296  035E  0836               	movf	??___flmul,w
  6297  035F  00C1               	movwf	___flmul@bexp
  6298  0360  30FF               	movlw	255
  6299  0361  05C2               	andwf	___flmul@prod,f
  6300  0362  30FF               	movlw	255
  6301  0363  05C3               	andwf	___flmul@prod+1,f
  6302  0364  307F               	movlw	127
  6303  0365  05C4               	andwf	___flmul@prod+2,f
  6304  0366  3000               	movlw	0
  6305  0367  05C5               	andwf	___flmul@prod+3,f
  6306  0368                     l2476:	
  6307  0368  1C41               	btfss	___flmul@bexp,0
  6308  0369  2B6B               	goto	u3271
  6309  036A  2B6C               	goto	u3270
  6310  036B                     u3271:	
  6311  036B  2B6D               	goto	l2480
  6312  036C                     u3270:	
  6313  036C                     l2478:	
  6314  036C  17C4               	bsf	___flmul@prod+2,7
  6315  036D                     l2480:	
  6316  036D  0841               	movf	___flmul@bexp,w
  6317  036E  00B6               	movwf	??___flmul
  6318  036F  1003               	clrc
  6319  0370  0C36               	rrf	??___flmul,w
  6320  0371  00B7               	movwf	??___flmul+1
  6321  0372  0837               	movf	??___flmul+1,w
  6322  0373  00C5               	movwf	___flmul@prod+3
  6323  0374                     l822:	
  6324  0374  083B               	movf	___flmul@sign,w
  6325  0375  00B6               	movwf	??___flmul
  6326  0376  0836               	movf	??___flmul,w
  6327  0377  04C5               	iorwf	___flmul@prod+3,f
  6328  0378                     l2482:	
  6329  0378  0845               	movf	___flmul@prod+3,w
  6330  0379  00B1               	movwf	?___flmul+3
  6331  037A  0844               	movf	___flmul@prod+2,w
  6332  037B  00B0               	movwf	?___flmul+2
  6333  037C  0843               	movf	___flmul@prod+1,w
  6334  037D  00AF               	movwf	?___flmul+1
  6335  037E  0842               	movf	___flmul@prod,w
  6336  037F  00AE               	movwf	?___flmul
  6337  0380                     l810:	
  6338  0380  0008               	return
  6339  0381                     __end_of___flmul:	
  6340                           
  6341                           	psect	text28
  6342  0BDE                     __ptext28:	
  6343 ;; *************** function __Umul8_16 *****************
  6344 ;; Defined at:
  6345 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;  multiplier      1    wreg     unsigned char 
  6348 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;  multiplier      1    8[BANK0 ] unsigned char 
  6351 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  6352 ;;  product         2    4[BANK0 ] unsigned int 
  6353 ;; Return value:  Size  Location     Type
  6354 ;;                  2    0[BANK0 ] unsigned int 
  6355 ;; Registers used:
  6356 ;;		wreg, status,2, status,0
  6357 ;; Tracked objects:
  6358 ;;		On entry : 0/0
  6359 ;;		On exit  : 0/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6362 ;;      Params:         0       2       0       0       0
  6363 ;;      Locals:         0       5       0       0       0
  6364 ;;      Temps:          0       2       0       0       0
  6365 ;;      Totals:         0       9       0       0       0
  6366 ;;Total ram usage:        9 bytes
  6367 ;; Hardware stack levels used:    1
  6368 ;; Hardware stack levels required when called:    2
  6369 ;; This function calls:
  6370 ;;		Nothing
  6371 ;; This function is called by:
  6372 ;;		___flmul
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           
  6377                           ;psect for function __Umul8_16
  6378  0BDE                     __Umul8_16:	
  6379                           
  6380                           ;incstack = 0
  6381                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6382                           ;__Umul8_16@multiplier stored from wreg
  6383  0BDE  1283               	bcf	3,5	;RP0=0, select bank0
  6384  0BDF  1303               	bcf	3,6	;RP1=0, select bank0
  6385  0BE0  00A8               	movwf	__Umul8_16@multiplier
  6386  0BE1                     l2066:	
  6387  0BE1  01A4               	clrf	__Umul8_16@product
  6388  0BE2  01A5               	clrf	__Umul8_16@product+1
  6389  0BE3                     l2068:	
  6390  0BE3  0820               	movf	__Umul8_16@multiplicand,w
  6391  0BE4  00A2               	movwf	??__Umul8_16
  6392  0BE5  01A3               	clrf	??__Umul8_16+1
  6393  0BE6  0822               	movf	??__Umul8_16,w
  6394  0BE7  00A6               	movwf	__Umul8_16@word_mpld
  6395  0BE8  0823               	movf	??__Umul8_16+1,w
  6396  0BE9  00A7               	movwf	__Umul8_16@word_mpld+1
  6397  0BEA                     l2070:	
  6398  0BEA  1C28               	btfss	__Umul8_16@multiplier,0
  6399  0BEB  2BED               	goto	u2521
  6400  0BEC  2BEE               	goto	u2520
  6401  0BED                     u2521:	
  6402  0BED  2BF4               	goto	l872
  6403  0BEE                     u2520:	
  6404  0BEE                     l2072:	
  6405  0BEE  0826               	movf	__Umul8_16@word_mpld,w
  6406  0BEF  07A4               	addwf	__Umul8_16@product,f
  6407  0BF0  1803               	skipnc
  6408  0BF1  0AA5               	incf	__Umul8_16@product+1,f
  6409  0BF2  0827               	movf	__Umul8_16@word_mpld+1,w
  6410  0BF3  07A5               	addwf	__Umul8_16@product+1,f
  6411  0BF4                     l872:	
  6412  0BF4  3001               	movlw	1
  6413  0BF5                     u2535:	
  6414  0BF5  1003               	clrc
  6415  0BF6  0DA6               	rlf	__Umul8_16@word_mpld,f
  6416  0BF7  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  6417  0BF8  3EFF               	addlw	-1
  6418  0BF9  1D03               	skipz
  6419  0BFA  2BF5               	goto	u2535
  6420  0BFB  1003               	clrc
  6421  0BFC  0CA8               	rrf	__Umul8_16@multiplier,f
  6422  0BFD                     l2074:	
  6423  0BFD  0828               	movf	__Umul8_16@multiplier,w
  6424  0BFE  1D03               	btfss	3,2
  6425  0BFF  2C01               	goto	u2541
  6426  0C00  2C02               	goto	u2540
  6427  0C01                     u2541:	
  6428  0C01  2BEA               	goto	l2070
  6429  0C02                     u2540:	
  6430  0C02                     l2076:	
  6431  0C02  0825               	movf	__Umul8_16@product+1,w
  6432  0C03  00A1               	movwf	?__Umul8_16+1
  6433  0C04  0824               	movf	__Umul8_16@product,w
  6434  0C05  00A0               	movwf	?__Umul8_16
  6435  0C06                     l874:	
  6436  0C06  0008               	return
  6437  0C07                     __end_of__Umul8_16:	
  6438                           
  6439                           	psect	text29
  6440  0C68                     __ptext29:	
  6441 ;; *************** function _isr *****************
  6442 ;; Defined at:
  6443 ;;		line 47 in file "main.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;		None
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;  portB           1    8[COMMON] unsigned char 
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  1    wreg      void 
  6450 ;; Registers used:
  6451 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6457 ;;      Params:         0       0       0       0       0
  6458 ;;      Locals:         1       0       0       0       0
  6459 ;;      Temps:          4       0       0       0       0
  6460 ;;      Totals:         5       0       0       0       0
  6461 ;;Total ram usage:        5 bytes
  6462 ;; Hardware stack levels used:    1
  6463 ;; Hardware stack levels required when called:    1
  6464 ;; This function calls:
  6465 ;;		_debug_led_toggle
  6466 ;;		_io_sw_read
  6467 ;; This function is called by:
  6468 ;;		Interrupt level 1
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           
  6473                           ;psect for function _isr
  6474  0C68                     _isr:	
  6475  0C68                     i1l2538:	
  6476                           
  6477                           ;main.c: 50: if (T0IE && T0IF) {
  6478  0C68  1E8B               	btfss	11,5	;volatile
  6479  0C69  2C6B               	goto	u342_21
  6480  0C6A  2C6C               	goto	u342_20
  6481  0C6B                     u342_21:	
  6482  0C6B  2C7B               	goto	i1l2546
  6483  0C6C                     u342_20:	
  6484  0C6C                     i1l2540:	
  6485  0C6C  1D0B               	btfss	11,2	;volatile
  6486  0C6D  2C6F               	goto	u343_21
  6487  0C6E  2C70               	goto	u343_20
  6488  0C6F                     u343_21:	
  6489  0C6F  2C7B               	goto	i1l2546
  6490  0C70                     u343_20:	
  6491  0C70                     i1l2542:	
  6492                           
  6493                           ;main.c: 51: contador++;
  6494  0C70  3001               	movlw	1
  6495  0C71  1283               	bcf	3,5	;RP0=0, select bank0
  6496  0C72  1303               	bcf	3,6	;RP1=0, select bank0
  6497  0C73  07E8               	addwf	_contador,f
  6498  0C74  1803               	skipnc
  6499  0C75  0AE9               	incf	_contador+1,f
  6500  0C76  3000               	movlw	0
  6501  0C77  07E9               	addwf	_contador+1,f
  6502                           
  6503                           ;main.c: 54: TMR0 = 255-98;
  6504  0C78  309D               	movlw	157
  6505  0C79  0081               	movwf	1	;volatile
  6506  0C7A                     i1l2544:	
  6507                           
  6508                           ;main.c: 55: T0IF=0;
  6509  0C7A  110B               	bcf	11,2	;volatile
  6510  0C7B                     i1l2546:	
  6511                           
  6512                           ;main.c: 56: };main.c: 59: if (RBIE && RBIF) {
  6513  0C7B  1D8B               	btfss	11,3	;volatile
  6514  0C7C  2C7E               	goto	u344_21
  6515  0C7D  2C7F               	goto	u344_20
  6516  0C7E                     u344_21:	
  6517  0C7E  2C96               	goto	i1l134
  6518  0C7F                     u344_20:	
  6519  0C7F                     i1l2548:	
  6520  0C7F  1C0B               	btfss	11,0	;volatile
  6521  0C80  2C82               	goto	u345_21
  6522  0C81  2C83               	goto	u345_20
  6523  0C82                     u345_21:	
  6524  0C82  2C96               	goto	i1l134
  6525  0C83                     u345_20:	
  6526  0C83                     i1l2550:	
  6527                           
  6528                           ;main.c: 61: char portB = PORTB;
  6529  0C83  1283               	bcf	3,5	;RP0=0, select bank0
  6530  0C84  1303               	bcf	3,6	;RP1=0, select bank0
  6531  0C85  0806               	movf	6,w	;volatile
  6532  0C86  00F4               	movwf	??_isr
  6533  0C87  0874               	movf	??_isr,w
  6534  0C88  00F8               	movwf	isr@portB
  6535  0C89                     i1l2552:	
  6536                           
  6537                           ;main.c: 63: io_sw_read(portB);
  6538  0C89  0878               	movf	isr@portB,w
  6539  0C8A  120A  158A  2334  120A  158A  	fcall	_io_sw_read
  6540  0C8F                     i1l2554:	
  6541                           
  6542                           ;main.c: 64: debug_led_toggle(1);
  6543  0C8F  3001               	movlw	1
  6544  0C90  120A  158A  2317  120A  158A  	fcall	_debug_led_toggle
  6545  0C95                     i1l2556:	
  6546                           
  6547                           ;main.c: 66: RBIF = 0;
  6548  0C95  100B               	bcf	11,0	;volatile
  6549  0C96                     i1l134:	
  6550  0C96  0877               	movf	??_isr+3,w
  6551  0C97  008A               	movwf	10
  6552  0C98  0876               	movf	??_isr+2,w
  6553  0C99  0084               	movwf	4
  6554  0C9A  0E75               	swapf	(??_isr+1)^(0+4294967168),w
  6555  0C9B  0083               	movwf	3
  6556  0C9C  0EFE               	swapf	btemp,f
  6557  0C9D  0E7E               	swapf	btemp,w
  6558  0C9E  0009               	retfie
  6559  0C9F                     __end_of_isr:	
  6560                           
  6561                           	psect	intentry
  6562  0004                     __pintentry:	
  6563                           ;incstack = 0
  6564                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6565                           
  6566  0004                     interrupt_function:	
  6567  007E                     saved_w	set	btemp
  6568  0004  00FE               	movwf	btemp
  6569  0005  0E03               	swapf	3,w
  6570  0006  00F5               	movwf	??_isr+1
  6571  0007  0804               	movf	4,w
  6572  0008  00F6               	movwf	??_isr+2
  6573  0009  080A               	movf	10,w
  6574  000A  00F7               	movwf	??_isr+3
  6575  000B  120A  158A  2C68   	ljmp	_isr
  6576                           
  6577                           	psect	text30
  6578  0B34                     __ptext30:	
  6579 ;; *************** function _io_sw_read *****************
  6580 ;; Defined at:
  6581 ;;		line 49 in file "io.c"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;  port            1    wreg     unsigned char 
  6584 ;; Auto vars:     Size  Location     Type
  6585 ;;  port            1    2[COMMON] unsigned char 
  6586 ;;  swNew           1    3[COMMON] unsigned char 
  6587 ;; Return value:  Size  Location     Type
  6588 ;;                  1    wreg      void 
  6589 ;; Registers used:
  6590 ;;		wreg, status,2, status,0
  6591 ;; Tracked objects:
  6592 ;;		On entry : 0/0
  6593 ;;		On exit  : 0/0
  6594 ;;		Unchanged: 0/0
  6595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6596 ;;      Params:         0       0       0       0       0
  6597 ;;      Locals:         2       0       0       0       0
  6598 ;;      Temps:          2       0       0       0       0
  6599 ;;      Totals:         4       0       0       0       0
  6600 ;;Total ram usage:        4 bytes
  6601 ;; Hardware stack levels used:    1
  6602 ;; This function calls:
  6603 ;;		Nothing
  6604 ;; This function is called by:
  6605 ;;		_isr
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           
  6610                           ;psect for function _io_sw_read
  6611  0B34                     _io_sw_read:	
  6612                           
  6613                           ;incstack = 0
  6614                           ; Regs used in _io_sw_read: [wreg+status,2+status,0]
  6615                           ;io_sw_read@port stored from wreg
  6616  0B34  00F2               	movwf	io_sw_read@port
  6617  0B35                     i1l2124:	
  6618                           
  6619                           ;io.c: 50: static char swOld = 1;;io.c: 51: char swNew = (port & 0b01000000) >> 6;
  6620  0B35  0872               	movf	io_sw_read@port,w
  6621  0B36  00F0               	movwf	??_io_sw_read
  6622  0B37  3006               	movlw	6
  6623  0B38                     u257_25:	
  6624  0B38  1003               	clrc
  6625  0B39  0CF0               	rrf	??_io_sw_read,f
  6626  0B3A  3EFF               	addlw	-1
  6627  0B3B  1D03               	skipz
  6628  0B3C  2B38               	goto	u257_25
  6629  0B3D  0870               	movf	??_io_sw_read,w
  6630  0B3E  3901               	andlw	1
  6631  0B3F  00F1               	movwf	??_io_sw_read+1
  6632  0B40  0871               	movf	??_io_sw_read+1,w
  6633  0B41  00F3               	movwf	io_sw_read@swNew
  6634                           
  6635                           ;io.c: 52: if (swNew == 0 && swOld == 1) {
  6636  0B42  0873               	movf	io_sw_read@swNew,w
  6637  0B43  1D03               	btfss	3,2
  6638  0B44  2B46               	goto	u258_21
  6639  0B45  2B47               	goto	u258_20
  6640  0B46                     u258_21:	
  6641  0B46  2B4D               	goto	i1l2130
  6642  0B47                     u258_20:	
  6643  0B47                     i1l2126:	
  6644  0B47  037A               	decf	io_sw_read@swOld,w
  6645  0B48  1D03               	btfss	3,2
  6646  0B49  2B4B               	goto	u259_21
  6647  0B4A  2B4C               	goto	u259_20
  6648  0B4B                     u259_21:	
  6649  0B4B  2B4D               	goto	i1l2130
  6650  0B4C                     u259_20:	
  6651  0B4C                     i1l2128:	
  6652                           
  6653                           ;io.c: 53: swPressed = 1;
  6654  0B4C  1479               	bsf	_swPressed/(0+8),_swPressed& (0+7)	;volatile
  6655  0B4D                     i1l2130:	
  6656                           
  6657                           ;io.c: 54: };io.c: 55: swOld = swNew;
  6658  0B4D  0873               	movf	io_sw_read@swNew,w
  6659  0B4E  00F0               	movwf	??_io_sw_read
  6660  0B4F  0870               	movf	??_io_sw_read,w
  6661  0B50  00FA               	movwf	io_sw_read@swOld
  6662  0B51                     i1l197:	
  6663  0B51  0008               	return
  6664  0B52                     __end_of_io_sw_read:	
  6665                           
  6666                           	psect	text31
  6667  0B17                     __ptext31:	
  6668 ;; *************** function _debug_led_toggle *****************
  6669 ;; Defined at:
  6670 ;;		line 55 in file "debug.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;  led             1    wreg     unsigned char 
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;  led             1    0[COMMON] unsigned char 
  6675 ;; Return value:  Size  Location     Type
  6676 ;;                  1    wreg      void 
  6677 ;; Registers used:
  6678 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6684 ;;      Params:         0       0       0       0       0
  6685 ;;      Locals:         1       0       0       0       0
  6686 ;;      Temps:          0       0       0       0       0
  6687 ;;      Totals:         1       0       0       0       0
  6688 ;;Total ram usage:        1 bytes
  6689 ;; Hardware stack levels used:    1
  6690 ;; This function calls:
  6691 ;;		Nothing
  6692 ;; This function is called by:
  6693 ;;		_isr
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697                           
  6698                           ;psect for function _debug_led_toggle
  6699  0B17                     _debug_led_toggle:	
  6700                           
  6701                           ;incstack = 0
  6702                           ; Regs used in _debug_led_toggle: [wreg-fsr0h+status,2+status,0]
  6703                           ;debug_led_toggle@led stored from wreg
  6704  0B17  00F0               	movwf	debug_led_toggle@led
  6705  0B18                     i1l2132:	
  6706                           
  6707                           ;debug.c: 56: switch (led) {
  6708  0B18  2B28               	goto	i1l2136
  6709  0B19                     i1l242:	
  6710                           ;debug.c: 57: case 1:
  6711                           
  6712                           
  6713                           ;debug.c: 58: RA4 = ~RA4;
  6714  0B19  3010               	movlw	16
  6715  0B1A  1283               	bcf	3,5	;RP0=0, select bank0
  6716  0B1B  1303               	bcf	3,6	;RP1=0, select bank0
  6717  0B1C  0685               	xorwf	5,f
  6718                           
  6719                           ;debug.c: 59: break;
  6720  0B1D  2B33               	goto	i1l247
  6721  0B1E                     i1l244:	
  6722                           ;debug.c: 60: case 2:
  6723                           
  6724                           
  6725                           ;debug.c: 61: RB2 = ~RB2;
  6726  0B1E  3004               	movlw	4
  6727  0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  6728  0B20  1303               	bcf	3,6	;RP1=0, select bank0
  6729  0B21  0686               	xorwf	6,f
  6730                           
  6731                           ;debug.c: 62: break;
  6732  0B22  2B33               	goto	i1l247
  6733  0B23                     i1l245:	
  6734                           ;debug.c: 63: case 3:
  6735                           
  6736                           
  6737                           ;debug.c: 64: RB1 = ~RB1;
  6738  0B23  3002               	movlw	2
  6739  0B24  1283               	bcf	3,5	;RP0=0, select bank0
  6740  0B25  1303               	bcf	3,6	;RP1=0, select bank0
  6741  0B26  0686               	xorwf	6,f
  6742                           
  6743                           ;debug.c: 65: break;
  6744  0B27  2B33               	goto	i1l247
  6745  0B28                     i1l2136:	
  6746  0B28  0870               	movf	debug_led_toggle@led,w
  6747                           
  6748                           ; Switch size 1, requested type "simple"
  6749                           ; Number of cases is 3, Range of values is 1 to 3
  6750                           ; switch strategies available:
  6751                           ; Name         Instructions Cycles
  6752                           ; simple_byte           10     6 (average)
  6753                           ; direct_byte           20    11 (fixed)
  6754                           ; jumptable            263     9 (fixed)
  6755                           ;	Chosen strategy is simple_byte
  6756  0B29  3A01               	xorlw	1	; case 1
  6757  0B2A  1903               	skipnz
  6758  0B2B  2B19               	goto	i1l242
  6759  0B2C  3A03               	xorlw	3	; case 2
  6760  0B2D  1903               	skipnz
  6761  0B2E  2B1E               	goto	i1l244
  6762  0B2F  3A01               	xorlw	1	; case 3
  6763  0B30  1903               	skipnz
  6764  0B31  2B23               	goto	i1l245
  6765  0B32  2B33               	goto	i1l247
  6766  0B33                     i1l247:	
  6767  0B33  0008               	return
  6768  0B34                     __end_of_debug_led_toggle:	
  6769  007E                     btemp	set	126	;btemp
  6770  007E                     wtemp0	set	126


Data Sizes:
    Strings     21
    Constant    10
    Data        1
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     70      74
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_3(CODE[8]), STR_2(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@message(BANK0[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 9
		 -> main@message(BANK0[9]), STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_io_sw_read

Critical Paths under _main in BANK0

    _main->___fltol
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_puts->_lcd_write
    _lcd_init->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_cursor->_lcd_write
    _lcd_write->_lcd_write_nibble
    ___fltol->___flsub
    ___flsub->___flmul
    ___flmul->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    8662
                                             59 BANK0     11    11      0
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                         _adc_init_0
                         _adc_read_0
                         _debug_init
                            _io_beep
                            _io_init
                      _io_led_toggle
                      _io_sw_pressed
                         _lcd_cursor
                           _lcd_goto
                           _lcd_init
                           _lcd_puts
                            _sprintf
                            _t0_init
 ---------------------------------------------------------------------------------
 (1) _t0_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    20      3    2063
                                             14 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2     405
                                              4 BANK0      2     0      2
                     _LCD_RS_SetHigh
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _LCD_RS_SetHigh                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     132
                                              4 BANK0      2     2      0
                      _LCD_RS_SetLow
                      _LCD_RW_SetLow
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _LCD_RW_SetLow                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             1     1      0     154
                                              4 BANK0      1     1      0
                      _LCD_RS_SetLow
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_cursor                                           2     0      2     230
                                              4 BANK0      2     0      2
                      _LCD_RS_SetLow
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            2     2      0     132
                                              2 BANK0      2     2      0
                   _lcd_write_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_write_nibble                                     2     2      0      88
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_RS_SetLow                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _io_sw_pressed                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _io_led_toggle                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _io_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _io_beep                                              4     2      2      98
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _debug_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_read_0                                           4     2      2      23
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _adc_init_0                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                             48 BANK0     11     7      4
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flsub                                              8     0      8    2333
                                             40 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2136
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2417
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  5     5      0     112
                                              4 COMMON     5     5      0
                   _debug_led_toggle
                         _io_sw_read
 ---------------------------------------------------------------------------------
 (5) _io_sw_read                                           4     4      0      67
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (5) _debug_led_toggle                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___flsub
     ___fladd
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___flsub (ARG)
       ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _adc_init_0
   _adc_read_0
   _debug_init
   _io_beep
   _io_init
   _io_led_toggle
   _io_sw_pressed
   _lcd_cursor
     _LCD_RS_SetLow
     _lcd_write
       _lcd_write_nibble
   _lcd_goto
     _LCD_RS_SetLow
     _lcd_write
       _lcd_write_nibble
   _lcd_init
     _LCD_RS_SetLow
     _LCD_RW_SetLow
     _lcd_write
       _lcd_write_nibble
   _lcd_puts
     _LCD_RS_SetHigh
     _lcd_write
       _lcd_write_nibble
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _t0_init

 _isr (ROOT)
   _debug_led_toggle
   _io_sw_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     46      4A       5       92.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       B       1       78.6%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      55      12        0.0%
ABS                  0      0      55       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue May 19 19:01:32 2020

                        pc 0002          ?_debug_led_toggle 0070                __CFG_CP$OFF 0000  
                       l33 0A7B                         l60 0ACC                         l36 07FF  
                       l45 0D68                         l39 0A7F                         l71 0DC2  
                       l48 0B92                         l65 0B16                         l57 0C33  
                       _GO 00F9     __size_of_io_led_toggle 0005                         fsr 0004  
      ___wmul@multiplicand 0022         ??_debug_led_toggle 0070             ?_LCD_RS_SetLow 0070  
      __Umul8_16@word_mpld 0026                        l201 0ABA                        l220 0A8E  
                      l400 06F1                        l137 0A9A                        l421 0BC5  
                      l191 0C67                        l423 0BDD                        l176 0AA9  
                      l281 0AE4                        l185 0A84                        l417 07CC  
                      l284 0AFB                        l189 0C35                        l614 0E29  
                      l278 0B71                        l382 0627                        l607 0E3E  
                      l703 0CDA                        l720 0462                        l617 0E3E  
                      l810 0380                        l714 03E4                        l822 0374  
                      l718 048B                        l735 0556                        l727 0608  
                      l816 02EC                        l760 0BB6                        l745 059C  
                      l850 0EFA                        l739 057A                        l756 05FC  
                      l748 05DA                        l757 0608                        l861 0EC4  
                      l693 0D20                        l862 0ED0                        l854 0EA8  
                      l872 0BF4                        l848 0E63                        l874 0C06  
                      l868 0AE0                        _RA2 002A                        _RB0 0030  
                      _RA3 002B                        _RB1 0031                        _RC0 0038  
                      _RA4 002C                        _RB2 0032                        _RC3 003B  
                      _RB5 0035                        _RC4 003C                        _RC5 003D  
                      _RB7 0037               __CFG_CPD$OFF 0000                        _PSA 040B  
          io_sw_read@swOld 007A            io_sw_read@swNew 0073                        _isr 0C68  
           ?_LCD_RW_SetLow 0070                        fsr0 0004                        indf 0000  
              lcd_goto@pos 0024               __CFG_IESO$ON 0000               __CFG_FOSC$EC 0000  
             ___flmul@aexp 0040               ___flmul@bexp 0041               ___flmul@sign 003B  
             ___flmul@temp 0046               ___flmul@prod 0042            ?_LCD_RS_SetHigh 0070  
             __CFG_LVP$OFF 0000               ___fltol@exp1 005A                       l2000 0534  
                     l2002 0539                       l2020 0581                       l2012 056C  
                     l2004 0548                       l2100 0D69                       l2030 058F  
                     l2022 0583                       l2014 0575                       l2006 055E  
                     l2110 0D90                       l2102 0D7B                       l2040 05A6  
                     l2032 0593                       l2024 0588                       l2016 0579  
                     l2008 0563                       l2120 0DB6                       l2112 0D9A  
                     l2104 0D83                       l2200 061E                       l2050 05E4  
                     l2042 05B4                       l2034 0599                       l2018 057E  
                     l2026 058A                       l2122 0DBC                       l2114 0DA0  
                     l2106 0D86                       l2210 0637                       l2202 0623  
                     l2060 05F8                       l2052 05EC                       l2044 05B8  
                     l2028 058E                       l2116 0DAA                       l2108 0D8B  
                     l2300 07C8                       l2220 0677                       l2212 0647  
                     l2204 0628                       l2140 0A93                       l2070 0BEA  
                     l2062 0603                       l2054 05F1                       l2046 05D6  
                     l2038 05A1                       l2310 0DD9                       l2150 0B64  
                     l2118 0DB0                       l2230 06AA                       l2214 064B  
                     l2142 0A95                       l2072 0BEE                       l2400 010F  
                     l2064 0607                       l2056 05F2                       l2048 05DF  
                     l2320 0DFD                       l2312 0DEE                       l2304 0DC3  
                     l2152 0B67                       l2160 0C34                       l2080 0C07  
                     l2232 06AE                       l2216 0660                       l2224 0687  
                     l2208 062C                       l2144 0A99                       l2074 0BFD  
                     l2066 0BE1                       l2410 017D                       l2402 012B  
                     l2058 05F6                       l2314 0DEF                       l2306 0DD0  
                     l2154 0B6A                       l2146 0B52                       l2162 0C38  
                     l2170 0AAE                       l2090 0AC3                       l2082 0C0D  
                     l2250 06E5                       l2242 06B9                       l2234 06B2  
                     l2226 069E                       l2218 0673                       l2138 0A8F  
                     l2076 0C02                       l2068 0BE3                       l2420 020D  
                     l2412 018D                       l2404 0147                       l2340 0B93  
                     l2316 0DF7                       l2500 0E79                       l2148 0B60  
                     l2164 0C43                       l2156 0A9B                       l2180 0A80  
                     l2172 0AAF                       l2092 0AFC                       l2084 0C1B  
                     l2260 0710                       l2252 06EB                       l2236 06B7  
                     l2228 06A6                       l2430 02A1                       l2422 021D  
                     l2414 01AA                       l2406 0150                       l2350 002D  
                     l2342 0B97                       l2334 0E1E                       l2326 0E05  
                     l2318 0DF9                       l2510 0EAF                       l2502 0E86  
                     l2190 0AF4                       l2182 0AE1                       l2158 0A85  
                     l2166 0C51                       l2094 0B01                       l2086 0C23  
                     l2270 072E                       l2262 0716                       l2254 06FC  
                     l2246 06D5                       l2440 02C6                       l2432 02AF  
                     l2424 024A                       l2416 01C3                       l2408 0160  
                     l2360 0044                       l2352 0031                       l2336 0E2E  
                     l2328 0E17                       l2520 0EE8                       l2512 0EBA  
                     l2504 0E8D                       l2184 0AE8                       l2176 0AB6  
                     l2168 0AAA                       l2096 0B09                       l2088 0ABE  
                     l1800 0AD1                       l2280 0750                       l2272 0732  
                     l2264 071D                       l2256 0708                       l2248 06DF  
                     l2600 0FF1                       l2450 02E9                       l2434 02B8  
                     l2442 02CC                       l2426 0270                       l2418 01E0  
                     l2370 005D                       l2362 0046                       l2354 0032  
                     l2346 0020                       l2338 0E33                       l2522 0EED  
                     l2514 0EBE                       l2506 0E91                       l2186 0AF0  
                     l2098 0B10                       l1810 0BB7                       l1802 0AD7  
                     l2290 0772                       l2282 075C                       l2266 0721  
                     l2274 073F                       l2258 070C                       l2194 060C  
                     l2460 0308                       l2444 02D0                       l2436 02BC  
                     l2428 0298                       l2380 0072                       l2372 005E  
                     l2364 004E                       l2356 0037                       l2348 0027  
                     l1900 03C2                       l2524 0EF1                       l2516 0EC8  
                     l2508 0E9F                       l2188 0AF1                       l1820 0BD9  
                     l1812 0BBB                       l1804 0ADD                       l2292 07A2  
                     l2284 0762                       l2276 0745                       l2268 0727  
                     l2196 0611                       l2470 034E                       l2462 0321  
                     l2454 02F1                       l2446 02D1                       l2438 02BD  
                     l2390 008D                       l2382 007A                       l2374 0063  
                     l2366 0053                       l2358 003C                       l1910 03D9  
                     l1902 03C6                       l2526 0EF2                       l2518 0ED2  
                     l1830 0CE8                       l1814 0BBF                       l1806 0ADF  
                     l2294 07A9                       l2286 0769                       l2278 074C  
                     l2198 0617                       l2480 036D                       l2472 0358  
                     l2456 02F6                       l2464 0327                       l2448 02D5  
                     l2392 009D                       l2384 007F                       l2376 0068  
                     l2368 0059                       l1920 03F2                       l1912 03DA  
                     l1904 03C7                       l1840 0D0E                       l1832 0CEF  
                     l1824 0CDB                       l1816 0BCC                       l2296 07AD  
                     l2288 076D                       l2560 0F05                       l2482 0378  
                     l2474 035A                       l2466 0334                       l2458 0304  
                     l2394 00AA                       l2386 0084                       l2378 0070  
                     l1930 0406                       l1922 03F6                       l1906 03CC  
                     l1914 03DC                       l2490 0E4B                       l1842 0D0F  
                     l1834 0CF3                       l1826 0CDF                       l1850 0C9F  
                     l1818 0BD3                       l2298 07B6                       l2570 0F2A  
                     l2562 0F0A                       l2476 0368                       l2468 033F  
                     l2396 00C7                       l1940 041A                       l1932 040A  
                     l1924 03FA                       l1916 03EA                       l1908 03D1  
                     l2492 0E5B                       l1780 0D64                       l1844 0D16  
                     l1836 0CF7                       l1828 0CE5                       l1860 0CB9  
                     l1852 0CA7                       l2580 0F61                       l2572 0F35  
                     l2564 0F14                       l2478 036C                       l2398 00E3  
                     l1942 041E                       l1934 040E                       l1926 03FE  
                     l1918 03EE                       l1950 042E                       l2494 0E6B  
                     l2486 0E42                       l1782 0D65                       l1790 07FC  
                     l1838 0D08                       l1846 0D1C                       l1862 0CC3  
                     l1854 0CAA                       l2590 0F81                       l2582 0F63  
                     l2574 0F42                       l2566 0F15                       l2558 0EFB  
                     l1960 0471                       l1952 042F                       l1944 0422  
                     l1936 0412                       l1928 0402                       l1880 0393  
                     l1872 0381                       l2488 0E47                       l1784 0D66  
                     l1776 0D24                       l1792 0A7C                       l1864 0CC9  
                     l1856 0CB1                       l2584 0F6C                       l2592 0F8D  
                     l2576 0F47                       l2568 0F20                       l1970 048F  
                     l1962 0475                       l1954 0446                       l1946 0426  
                     l1938 0416                       l1882 0398                       l1890 03A8  
                     l1874 0388                       l2498 0E74                       l1786 0D67  
                     l1778 0D2E                       l1794 0B75                       l1866 0CD0  
                     l1858 0CB5                       l2594 0FDC                       l2586 0F6E  
                     l2578 0F56                       l1980 04B8                       l1972 0494  
                     l1964 0476                       l1956 0466                       l1948 042A  
                     l1892 03B0                       l1884 039D                       l1876 038E  
                     l1788 0A78                       l1796 0B8B                       l1868 0CD6  
                     l2596 0FEA                       l2588 0F7B                       l1990 04CC  
                     l1982 04BC                       l1966 047F                       l1958 046F  
                     l1894 03B5                       l1886 03A5                       l1878 0392  
                     l1798 0AD0                       l1992 04D5                       l1984 04C5  
                     l1976 049D                       l1968 0483                       l1896 03BB  
                     l1888 03A6                       l1986 04C7                       l1978 04B4  
                     l1994 04DA                       l1898 03BC                       l1996 04F0  
                     l1988 04CB                       l1998 052E                       _ADIF 0066  
                     _ADFM 04FF                       ?_isr 0070                       _ADON 00F8  
                     _ANS0 0C40                       STR_1 07E7                       STR_2 07F7  
                     _ANS2 0C42                       STR_3 07EF                       _ANS3 0C43  
                     _ANS8 0C48                       _T0IE 005D                       _T0IF 005A  
                     _T0CS 040D                       u2000 0CA7                       u2001 0CA6  
                     u2100 03C6                       u2020 0CB9                       u2101 03C5  
                     u2021 0CB8                       u2110 03CC                       u2030 0CC3  
                     u2111 03CB                       u2031 0CC2                       u2015 0CAB  
                     u2120 03D1                       u3001 00F1                       u2121 03D0  
                     u3002 00F8                       u2210 048B                       u2130 03EA  
                     u2050 0CD6                       u3011 011D                       u3003 00FF  
                     u2211 048A                       u2131 03E9                       u2051 0CD5  
                     u2035 0CBF                       u3100 0256                       u3012 0124  
                     u2220 048F                       u2140 03EE                       u2060 0392  
                     u3021 0139                       u3013 012B                       u2301 0507  
                     u2221 048E                       u2205 0478                       u2141 03ED  
                     u2061 0391                       u2045 0CCA                       u3022 0140  
                     u2310 051B                       u2302 0508                       u2230 0494  
                     u2150 0446                       u2070 0398                       u3111 0262  
                     u3023 0147                       u2311 051C                       u2303 050D  
                     u2231 0493                       u2151 0445                       u2071 0397  
                     u3200 02E9                       u3120 027E                       u3112 0269  
                     u2400 0593                       u2320 0539                       u2312 0521  
                     u2304 050E                       u2160 0451                       u2080 039D  
                     u3201 02E8                       u3113 0270                       u3105 0251  
                     u3041 016F                       u2401 0592                       u2321 0538  
                     u2313 0522                       u2305 0513                       u2241 04A6  
                     u2161 044F                       u2081 039C                       u3210 02F0  
                     u3042 0176                       u2410 0599                       u2330 055E  
                     u2306 0514                       u2250 04B8                       u2242 04AD  
                     u2170 0452                       u2090 03BB                       u3211 02EF  
                     u3131 028A                       u3051 019C                       u3043 017D  
                     u3035 0149                       u2411 0598                       u2331 055D  
                     u2251 04B7                       u2243 04B4                       u2155 0442  
                     u2091 03BA                       u3220 02F6                       u3132 0291  
                     u3052 01A3                       u2500 05F6                       u2420 05A0  
                     u2340 0563                       u2260 04BC                       u2180 0466  
                     u3300 0E6B                       u3221 02F5                       u3133 0298  
                     u3125 0279                       u3053 01AA                       u2501 05F5  
                     u2421 059F                       u2341 0562                       u2261 04BB  
                     u2181 0465                       u3301 0E6A                       u3230 0308  
                     u2510 0607                       u2430 05A6                       u2270 04CB  
                     u2190 0475                       u3231 0307                       u3071 01D2  
                     u2511 0606                       u2431 05A5                       u2271 04CA  
                     u2191 0474                       u2520 0BEE                       u3240 0317  
                     u3160 02BC                       u3072 01D9                       u2440 05B8  
                     u2360 0579                       u3400 0EED                       u3320 0E8C  
                     u2600 0C67                       u2521 0BED                       u3161 02BB  
                     u3145 029A                       u3081 01FF                       u3073 01E0  
                     u3065 01AC                       u2441 05B7                       u2361 0578  
                     u3401 0EEC                       u3321 0E8B                       u2601 0C66  
                     u3250 0334                       u3082 0206                       u2450 05C7  
                     u2370 057E                       u2290 04F0                       u3410 0EF1  
                     u2610 0AAE                       u1810 0D4F                       u3251 0333  
                     u3155 02B1                       u3091 022C                       u3083 020D  
                     u2371 057D                       u2355 056E                       u2291 04EF  
                     u3411 0EF0                       u3315 0E7E                       u2611 0AAD  
                     u1811 0D4B                       u2540 0C02                       u3260 034E  
                     u3180 02D0                       u3092 0233                       u2460 05D6  
                     u2380 0588                       u3340 0EAE                       u2620 0AE8  
                     u2700 06EB                       u2541 0C01                       u3261 034D  
                     u3245 0312                       u3181 02CF                       u3093 023A  
                     u2461 05D5                       u2381 0587                       u2293 04EC  
                     u2285 04CE                       u3341 0EAD                       u2621 0AE7  
                     u2605 0C63                       u1805 0D43                       u2701 06EA  
                     u3270 036C                       u3190 02D5                       u2470 05DF  
                     u2390 058E                       u1750 0D2B                       u2550 0C33  
                     u2710 06FC                       u2630 0617                       u2535 0BF5  
                     u3271 036B                       u3255 0330                       u3191 02D4  
                     u3175 02BF                       u2471 05DE                       u2455 05C2  
                     u2391 058D                       u3335 0EA0                       u1751 0D27  
                     u2551 0C32                       u2711 06FB                       u2631 0616  
                     u2480 05E4                       u3360 0EBE                       u3280 0E47  
                     u1840 0D61                       u1824 0D52                       u2560 0B09  
                     u1920 0BD9                       u2800 07C8                       u2720 0710  
                     u2640 0647                       u3265 034A                       u2481 05E3  
                     u3361 0EBD                       u3281 0E46                       u1841 0D5D  
                     u2561 0B08                       u1921 0BD8                       u1905 0BC6  
                     u2801 07C7                       u2721 070F                       u2641 0646  
                     u2490 05F1                       u2810 0DD0                       u3370 0EC4  
                     u3290 0E4B                       u1930 0CE5                       u2730 0716  
                     u2650 0687                       u2491 05F0                       u2811 0DCF  
                     u3371 0EC3                       u3355 0EB3                       u3291 0E4A  
                     u1835 0D55                       u3507 0D96                       u1931 0CE4  
                     u1915 0BCD                       u2731 0715                       u2715 06F8  
                     u2651 0686                       u2900 0E33                       u2820 0DE7  
                     u3380 0EC8                       u1780 0D3D                       u1764 0D2E  
                     u2740 0727                       u2660 06AE                       u3460 0F42  
                     u2901 0E32                       u3381 0EC7                       u1781 0D39  
                     u3517 0DA6                       u2741 0726                       u2661 06AD  
                     u3461 0F41                       u2910 0031                       u2830 0DFD  
                     u3390 0EDD                       u1854 0D64                       u1950 0CF7  
                     u1870 0AD7                       u2750 073E                       u2670 06D4  
                     u3470 0F56                       u2911 0030                       u2831 0DFC  
                     u1775 0D31                       u3527 0B8F                       u1951 0CF6  
                     u1871 0AD6                       u2751 073D                       u2671 06D3  
                     u3471 0F55                       u2920 0037                       u2840 0E04  
                     u1880 0ADD                       u2760 0745                       u2680 06DF  
                     u3480 0F6C                       u2921 0036                       u2841 0E03  
                     u2825 0DE2                       u3537 0C3E                       u1865 0B78  
                     u1945 0CE9                       u1881 0ADC                       u2761 0744  
                     u2681 06DE                       u3481 0F6B                       u2930 003C  
                     u1794 0D40                       u1970 0D08                       u1890 0BBF  
                     u2770 075C                       u2690 06E5                       u2931 003B  
                     u3395 0ED8                       u3547 0C4C                       u1971 0D07  
                     u1891 0BBE                       u2771 075B                       u2691 06E4  
                     u2675 06D0                       u3475 0F52                       u2940 005D  
                     u2860 0E16                       u2780 0762                       u2941 005C  
                     u2861 0E15                       u3557 0B6E                       u1965 0CF8  
                     u2781 0761                       u2950 0063                       u2870 0E1D  
                     u1990 0D1C                       u2790 07B6                       u2951 0062  
                     u2871 0E1C                       u2855 0E06                       u1991 0D1B  
                     u1975 0D04                       u2791 07B5                       _RBIE 005B  
                     u2960 0068                       _RBIF 0058                       u2961 0067  
                     u1985 0D10                       u3497 0FF7                       u2970 007F  
                     u2890 0E2E                       u2971 007E                       u2891 0E2D  
                     u2980 0084                       u2981 0083                       u2885 0E20  
                     u2991 00D5                       u2992 00DC                       u2993 00E3  
                     _TMR0 0001                main@message 005D               __CFG_WRT$OFF 0000  
            __CFG_FCMEN$ON 0000                       _main 0EFB                       btemp 007E  
            __CFG_BOREN$ON 0000                       start 000E               lcd_cursor@on 0024  
            __CFG_MCLRE$ON 0000                      ??_isr 0074            __end_of_t0_init 0A9B  
            ___fltol@sign1 0059                      _ADCS0 00FE                      _ADCS1 00FF  
          __end_of___fladd 0609                      ?_main 0070                      _ANS12 0C4C  
                    _ANS13 0C4D              __CFG_WDTE$OFF 0000            __end_of___flmul 0381  
          __end_of___flsub 0BB7            __end_of___fltol 0E3F                      _IOCB6 04B6  
          __end_of___lwdiv 0D21                      i1l134 0C96                      i1l242 0B19  
                    i1l244 0B1E                      i1l245 0B23                      i1l247 0B33  
          __end_of___lwmod 0CDB                      i1l197 0B51                      _VCFG0 04FC  
                    _VCFG1 04FD                      _PORTB 0006                      _TRISC 0087  
                    _WPUB6 04AE                      _nRBPU 040F            __end_of_io_beep 0C68  
          __end_of_io_init 0AAA            __end_of_dpowers 07E7            __end_of_isdigit 0AE1  
            _io_led_toggle 0A80             __pbitbssCOMMON 03C8                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 07CD  
          __initialization 0011               __end_of_main 1000            ??_LCD_RS_SetLow 0020  
                   ??_main 005B            ??_LCD_RW_SetLow 0020     __size_of_io_sw_pressed 0011  
                   _ADRESH 001E                     _ADRESL 009E             ?_io_led_toggle 0070  
                   i1l2130 0B4D                     i1l2132 0B18                     i1l2124 0B35  
                   i1l2126 0B47                     i1l2136 0B28                     i1l2128 0B4C  
                   i1l2540 0C6C                     i1l2550 0C83                     i1l2542 0C70  
                   i1l2552 0C89                     i1l2544 0C7A                     i1l2554 0C8F  
                   i1l2546 0C7B                     i1l2538 0C68                     i1l2556 0C95  
                   i1l2548 0C7F                     u342_20 0C6C                     u342_21 0C6B  
                   u343_20 0C70                     u343_21 0C6F                     u344_20 0C7F  
                   u344_21 0C7E                     u345_20 0C83                     u345_21 0C82  
                   u257_25 0B38                     u258_20 0B47                     u258_21 0B46  
                   u259_20 0B4C                     u259_21 0B4B                     _TRISA0 0428  
                   _TRISB0 0430                     _TRISA2 042A                     _TRISA3 042B  
                   _TRISB1 0431                     _TRISA4 042C                     _TRISB2 0432  
                   _TRISB5 0435                     _TRISB6 0436                     _TRISB7 0437  
         __end_of___xxtofl 0EFB             __CFG_PWRTE$OFF 0000           __end_of_lcd_init 0DC3  
         __end_of_lcd_goto 0ACD                  ??_t0_init 0020           __end_of_lcd_puts 0C34  
                ??___fladd 0028                     ___wmul 0BB7                  ??___flmul 0036  
                ??___flsub 0050                  ??___fltol 0054   __end_of_lcd_write_nibble 0D69  
                ??___lwdiv 0024                  ??___lwmod 002C          lcd_write_nibble@c 0021  
                ??_io_beep 0022                  ??_io_init 0020               __pdataCOMMON 007A  
                ??_isdigit 0020         __size_of__Umul8_16 0029                     saved_w 007E  
                ??_sprintf 0031               ___xxtofl@arg 002A               ___xxtofl@exp 0029  
             ___xxtofl@val 0020    __end_of__initialization 001C              _io_sw_pressed 0AAA  
               ___fltol@f1 0050             __pcstackCOMMON 0070                 _adc_init_0 0B52  
               _adc_read_0 0AE1           ??_LCD_RS_SetHigh 0020             _OPTION_REGbits 0081  
          ??_io_led_toggle 0020  __size_of_debug_led_toggle 001D         __size_of_lcd_write 0021  
             sprintf@width 0039              io_beep@period 0020                 __pbssBANK0 0066  
           ?_io_sw_pressed 0020                 _debug_init 0A85          __end_of__Umul8_16 0C07  
      debug_led_toggle@led 0070                 __pmaintext 0EFB                    ?___wmul 0020  
               __pintentry 0004                  ?___xxtofl 0020                 _lcd_cursor 0AFC  
                ?_lcd_init 0070                  ?_lcd_goto 0070                  ?_lcd_puts 0024  
               __stringtab 07CD                    _t0_init 0A8F                 _io_sw_read 0B34  
                  ___fladd 0381                ?_adc_init_0 0070                ?_adc_read_0 0020  
                  ___flmul 0020                    ___flsub 0B93                    ___fltol 0DC3  
        __end_of_lcd_write 0B93            __size_of___wmul 0027                    ___lwdiv 0CDB  
                  ___lwmod 0C9F                    __ptext1 0A8F                    __ptext2 0609  
                  __ptext3 0ACD                    __ptext4 0BB7                    __ptext5 0C9F  
                  __ptext6 0CDB                    __ptext7 0C07                    __ptext8 07FC  
                  __ptext9 0D69                    _io_beep 0C34                    _io_init 0A9B  
                  _dpowers 07DD                    _isdigit 0ACD               __size_of_isr 0037  
               ??___xxtofl 0024                    _sprintf 0609                 ??_lcd_init 0024  
               ??_lcd_goto 0024            ??_io_sw_pressed 0022                 ??_lcd_puts 0026  
     end_of_initialization 001C                ?_debug_init 0070          ?_lcd_write_nibble 0070  
    __end_of_LCD_RS_SetLow 0A7C         ??_lcd_write_nibble 0020                ___fladd@grs 0033  
    __end_of_LCD_RW_SetLow 0A80              ___xxtofl@sign 0028                ?_lcd_cursor 0024  
         _debug_led_toggle 0B17        __size_of_adc_init_0 0020        __size_of_adc_read_0 001B  
           io_sw_read@port 0072                ___flmul@grs 003C                 lcd_write@c 0023  
              ?_io_sw_read 0070             __end_of___wmul 0BDE              __pidataCOMMON 0003  
      __size_of_debug_init 000A        start_initialization 0011                __end_of_isr 0C9F  
      __size_of_lcd_cursor 001B                   ??___wmul 0024                  __Umul8_16 0BDE  
                ___fladd@a 0024                  ___fladd@b 0020                  ___flmul@a 0032  
                ___flmul@b 002E                  ___flsub@a 0048                  ___flsub@b 004C  
                ___latbits 0002              __pcstackBANK0 0020          __size_of___xxtofl 00BC  
    __end_of_io_led_toggle 0A85        __size_of_io_sw_read 001E          __size_of_lcd_init 005A  
        __size_of_lcd_goto 0012                sprintf@flag 0038          __size_of_lcd_puts 002D  
              sprintf@prec 0035           ___lwdiv@dividend 0022                   ?_t0_init 0070  
                 ?___fladd 0020               ??_adc_init_0 0020               ??_adc_read_0 0022  
                 ?___flmul 002E                   ?___flsub 0048                   ?___fltol 0050  
               ?__Umul8_16 0020                   ?___lwdiv 0020                   ?___lwmod 0028  
                __pstrings 07CD                  _distancia 0066                  _lcd_write 0B72  
                 ?_io_beep 0020                   ?_io_init 0070                   ?_isdigit 0070  
         ___lwdiv@quotient 0025                   ?_sprintf 002E    __size_of_LCD_RS_SetHigh 0004  
       __end_of_adc_init_0 0B72         __end_of_adc_read_0 0AFC          interrupt_function 0004  
             ??_debug_init 0020             ___wmul@product 0024   __end_of_debug_led_toggle 0B34  
                _swPressed 03C8                 _ADCON0bits 001F                __stringbase 07DC  
               ?_lcd_write 0070          ___wmul@multiplier 0020         __end_of_debug_init 0A8F  
                lcd_puts@s 0024               ??_lcd_cursor 0026  __size_of_lcd_write_nibble 0048  
    __end_of_io_sw_pressed 0ABB               ??_io_sw_read 0070           __size_of_t0_init 000C  
       __end_of_lcd_cursor 0B17                ??__Umul8_16 0022           __size_of___fladd 0288  
         __size_of___flmul 0361           __size_of___flsub 0024           __size_of___fltol 007C  
         __size_of___lwdiv 0046           __size_of___lwmod 003C         __end_of__stringtab 07DD  
              _isdigit$775 0020                 sprintf@val 0036           __size_of_io_beep 0034  
                 ___xxtofl 0E3F           __size_of_io_init 000F           __size_of_isdigit 0014  
          ___lwdiv@divisor 0020            ___lwdiv@counter 0027                   __ptext10 0A7C  
                 __ptext11 0ABB                   __ptext20 0A85                   __ptext12 0AFC  
                 __ptext21 0AE1                   __ptext13 0B72                   __ptext30 0B34  
                 __ptext22 0B52                   __ptext14 0D21                   __ptext31 0B17  
                 __ptext23 0E3F                   __ptext15 0A78                   __ptext24 0DC3  
                 __ptext16 0AAA                   __ptext25 0B93                   __ptext17 0A80  
                 __ptext26 0381                   __ptext18 0A9B                   __ptext27 0020  
                 __ptext19 0C34                   __ptext28 0BDE                   __ptext29 0C68  
        __CFG_BOR4V$BOR40V 0000                   _lcd_init 0D69                   _lcd_goto 0ABB  
                 _lcd_puts 0C07                   _contador 0068           __size_of_sprintf 01C4  
       __end_of_io_sw_read 0B52              __size_of_main 0105     __size_of_LCD_RS_SetLow 0004  
   __size_of_LCD_RW_SetLow 0004                ??_lcd_write 0022                 _INTCONbits 000B  
                 isr@portB 0078                   isdigit@c 0021             _LCD_RS_SetHigh 07FC  
                 intlevel1 0000                  sprintf@ap 0034                  sprintf@sp 003B  
         ___lwmod@dividend 002A                  stringcode 07D7        adc_read_0@distancia 0022  
   __Umul8_16@multiplicand 0020              _LCD_RS_SetLow 0A78                   sprintf@c 003C  
                 sprintf@f 002E            ___lwmod@divisor 0028            ___lwmod@counter 002D  
            _LCD_RW_SetLow 0A7C                   stringdir 07D7                   stringtab 07CD  
   __end_of_LCD_RS_SetHigh 0800           _lcd_write_nibble 0D21              ___fladd@signs 0030  
             ___fladd@aexp 0031               ___fladd@bexp 0032       __Umul8_16@multiplier 0028  
        __Umul8_16@product 0024  
